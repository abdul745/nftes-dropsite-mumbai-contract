{
	"id": "46a135e168201b462281a9e8114a8395",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155_Dropsite.sol\"; \ncontract Dropsite is ERC1155_Dropsite  { \n  \n    //NFT category\n    bytes  data =\"\";\n\n    uint public TotalNFTsMinted;     //Total NFTs\n    uint numOfCopies;         //A user can mint only 1 NFT\n    //Initial Minting\n    uint Platinum;            \n    uint Gold;\n    uint Silver;\n    mapping (address=>uint) public dropsite_NFT_Owner;\n    mapping (address => bool) nftExists;\n    address[] NFT_Owner;\n  modifier OnlyOwner {\n        require(_msgSender() == Owner, \"OnyxNft Owner can Access\");\n        _;\n    }\n    //Pausing and activating the contract\n    modifier contractIsNotPaused(){\n        require (IsPaused == false, \"Contract is Paused\" );\n        _;\n    }\n      bool public IsPaused = true;\n    address payable public  Owner;\n    string private _name;\n    \n    constructor (string memory name){\n        _name = name;\n        Owner = payable(msg.sender);\n        TotalNFTsMinted=0;     //Total NFTs\n        numOfCopies=1;         //A user can mint only 1 NFT\n        Platinum=0;            \n        Gold=0;\n        Silver=0;\n    }\n     \n     function checkMintedCategory() public view OnlyOwner returns(uint,uint,uint){\n         return (Platinum,Gold,Silver);\n     }\n     function SwitchSaleState() public OnlyOwner {\n        if (IsPaused == true){\n            IsPaused = false;\n        }\n        else {\n            IsPaused = true;\n        }\n    }\n    \n    function random() internal view returns (uint) {\n    uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 3;\n    return randomnumber;\n    }\n   \n \n    function randomMint() contractIsNotPaused public returns (uint) {\n        uint nftId = random();\n    if((Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) || (Silver<=500 && nftId==2))\n        {\n            nftId = random();\n            if(nftId==0)\n            {\n                data=\"Platinum\";\n                Platinum++;\n            }\n            else if(nftId==1)\n            {\n                data=\"Gold\";\n                Gold++;\n            }\n            else if(nftId==2)\n            {\n                data=\"Silver\";\n                Silver++;\n            }\n        }\n     \n    _mint(_msgSender(), nftId, numOfCopies, data);\n    nftExists[_msgSender()]=true;\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[_msgSender()]=nftId;\n    return nftId;\n    }\n    function finishDropsite() public OnlyOwner{\n        IsPaused=true;\n    }\n\n}"
			},
			"ERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155_Dropsite.sol\";\nimport \"./IERC1155Receiver_Dropsite.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165_Dropsite.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155_Dropsite is Context, IERC1155_Dropsite  {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165_Dropsite {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual  returns (bool) {\n        return interfaceId == type(IERC165_Dropsite).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165_Dropsite {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155_Dropsite  is IERC165_Dropsite {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    // event TransferBatch(\n    //     address indexed operator,\n    //     address indexed from,\n    //     address indexed to,\n    //     uint256[] ids,\n    //     uint256[] values\n    // );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    // event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    // event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n//     function balanceOf(address account, uint256 id) external view returns (uint256);\n\n//     /**\n//      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n//      *\n//      * Requirements:\n//      *\n//      * - `accounts` and `ids` must have the same length.\n//      */\n//     function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n//         external\n//         view\n//         returns (uint256[] memory);\n\n//     /**\n//      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n//      *\n//      * Emits an {ApprovalForAll} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `operator` cannot be the caller.\n//      */\n//     function setApprovalForAll(address operator, bool approved) external;\n\n//     /**\n//      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n//      *\n//      * See {setApprovalForAll}.\n//      */\n//     function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165_Dropsite {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n   // function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dropsite.sol": {
				"Dropsite": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SwitchSaleState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkMintedCategory",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "dropsite_NFT_Owner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "randomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dropsite.sol\":122:2509  contract Dropsite is ERC1155_Dropsite  { ... */\n  mstore(0x40, 0x80)\n    /* \"Dropsite.sol\":190:205  bytes  data =\"\" */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Dropsite.sol\":815:819  true */\n  0x01\n    /* \"Dropsite.sol\":792:819  bool public IsPaused = true */\n  0x0b\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":891:1159  constructor (string memory name){... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"Dropsite.sol\":941:945  name */\n  dup1\n    /* \"Dropsite.sol\":933:938  _name */\n  0x0c\n    /* \"Dropsite.sol\":933:945  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"Dropsite.sol\":971:981  msg.sender */\n  caller\n    /* \"Dropsite.sol\":955:960  Owner */\n  0x0b\n  0x01\n    /* \"Dropsite.sol\":955:982  Owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1008:1009  0 */\n  0x00\n    /* \"Dropsite.sol\":992:1007  TotalNFTsMinted */\n  0x03\n    /* \"Dropsite.sol\":992:1009  TotalNFTsMinted=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1048:1049  1 */\n  0x01\n    /* \"Dropsite.sol\":1036:1047  numOfCopies */\n  0x04\n    /* \"Dropsite.sol\":1036:1049  numOfCopies=1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1105:1106  0 */\n  0x00\n    /* \"Dropsite.sol\":1096:1104  Platinum */\n  0x05\n    /* \"Dropsite.sol\":1096:1106  Platinum=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1133:1134  0 */\n  0x00\n    /* \"Dropsite.sol\":1128:1132  Gold */\n  0x06\n    /* \"Dropsite.sol\":1128:1134  Gold=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1151:1152  0 */\n  0x00\n    /* \"Dropsite.sol\":1144:1150  Silver */\n  0x07\n    /* \"Dropsite.sol\":1144:1152  Silver=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":891:1159  constructor (string memory name){... */\n  pop\n    /* \"Dropsite.sol\":122:2509  contract Dropsite is ERC1155_Dropsite  { ... */\n  jump(tag_10)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_14\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  0x1f\n  lt\n  tag_15\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_15:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_16:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_16)\ntag_17:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n  swap1\n  jump\t// out\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_12\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_22\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_21)\ntag_22:\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_21)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_21\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\ntag_21:\n  pop\n  swap1\n  pop\n  tag_26\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_19:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_27)\ntag_28:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_30:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_32\n    /* \"#utility.yul\":137:186   */\n  tag_33\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":121:187   */\n  tag_35\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_37\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":262:374   */\ntag_36:\n    /* \"#utility.yul\":383:422   */\n  tag_39\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_41:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":531:653   */\ntag_43:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_46\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_5:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":906:1025   */\ntag_48:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_52\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1101:1218   */\ntag_51:\n    /* \"#utility.yul\":1242:1316   */\n  tag_54\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_41\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_35:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_56\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_58\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_57:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_34:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1693:1749   */\ntag_62:\n    /* \"#utility.yul\":1767:1796   */\n  tag_65\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_40:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_68:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_71:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_12:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_73:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_75\n  tag_76\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2412:2496   */\ntag_74:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_59:\n    /* \"#utility.yul\":2591:2618   */\n  tag_78\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_66\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_80\n  tag_64\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2664:2752   */\ntag_79:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_76:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_64:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_45:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_38:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_53:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_50:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_66:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Dropsite.sol\":122:2509  contract Dropsite is ERC1155_Dropsite  { ... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dropsite.sol\":122:2509  contract Dropsite is ERC1155_Dropsite  { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e1eaabf\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x7e1eaabf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc63bc456\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd4c892c4\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x1309a563\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x322f0ece\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5a8bc1a9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x67818243\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dropsite.sol\":792:819  bool public IsPaused = true */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":212:239  uint public TotalNFTsMinted */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2434:2506  function finishDropsite() public OnlyOwner{... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Dropsite.sol\":1301:1477  function SwitchSaleState() public OnlyOwner {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Dropsite.sol\":1669:2429  function randomMint() contractIsNotPaused public returns (uint) {... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":825:854  address payable public  Owner */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":1171:1295  function checkMintedCategory() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_9:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":406:455  mapping (address=>uint) public dropsite_NFT_Owner */\n    tag_10:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":792:819  bool public IsPaused = true */\n    tag_13:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Dropsite.sol\":212:239  uint public TotalNFTsMinted */\n    tag_17:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Dropsite.sol\":2434:2506  function finishDropsite() public OnlyOwner{... */\n    tag_21:\n        /* \"Dropsite.sol\":578:583  Owner */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":562:583  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":562:574  _msgSender() */\n      tag_41\n        /* \"Dropsite.sol\":562:572  _msgSender */\n      tag_42\n        /* \"Dropsite.sol\":562:574  _msgSender() */\n      jump\t// in\n    tag_41:\n        /* \"Dropsite.sol\":562:583  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":554:612  require(_msgSender() == Owner, \"OnyxNft Owner can Access\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"Dropsite.sol\":2495:2499  true */\n      0x01\n        /* \"Dropsite.sol\":2486:2494  IsPaused */\n      0x0b\n      0x00\n        /* \"Dropsite.sol\":2486:2499  IsPaused=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":2434:2506  function finishDropsite() public OnlyOwner{... */\n      jump\t// out\n        /* \"Dropsite.sol\":1301:1477  function SwitchSaleState() public OnlyOwner {... */\n    tag_23:\n        /* \"Dropsite.sol\":578:583  Owner */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":562:583  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":562:574  _msgSender() */\n      tag_48\n        /* \"Dropsite.sol\":562:572  _msgSender */\n      tag_42\n        /* \"Dropsite.sol\":562:574  _msgSender() */\n      jump\t// in\n    tag_48:\n        /* \"Dropsite.sol\":562:583  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":554:612  require(_msgSender() == Owner, \"OnyxNft Owner can Access\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_45\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"Dropsite.sol\":1371:1375  true */\n      0x01\n        /* \"Dropsite.sol\":1359:1375  IsPaused == true */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1359:1367  IsPaused */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1359:1375  IsPaused == true */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1355:1471  if (IsPaused == true){... */\n      iszero\n      tag_52\n      jumpi\n        /* \"Dropsite.sol\":1401:1406  false */\n      0x00\n        /* \"Dropsite.sol\":1390:1398  IsPaused */\n      0x0b\n      0x00\n        /* \"Dropsite.sol\":1390:1406  IsPaused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":1355:1471  if (IsPaused == true){... */\n      jump(tag_53)\n    tag_52:\n        /* \"Dropsite.sol\":1456:1460  true */\n      0x01\n        /* \"Dropsite.sol\":1445:1453  IsPaused */\n      0x0b\n      0x00\n        /* \"Dropsite.sol\":1445:1460  IsPaused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":1355:1471  if (IsPaused == true){... */\n    tag_53:\n        /* \"Dropsite.sol\":1301:1477  function SwitchSaleState() public OnlyOwner {... */\n      jump\t// out\n        /* \"Dropsite.sol\":1669:2429  function randomMint() contractIsNotPaused public returns (uint) {... */\n    tag_25:\n        /* \"Dropsite.sol\":1727:1731  uint */\n      0x00\n        /* \"Dropsite.sol\":738:743  false */\n      dup1\n        /* \"Dropsite.sol\":726:743  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":726:734  IsPaused */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":726:743  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":717:767  require (IsPaused == false, \"Contract is Paused\" ) */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"Dropsite.sol\":1743:1753  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":1756:1764  random() */\n      tag_59\n        /* \"Dropsite.sol\":1756:1762  random */\n      tag_60\n        /* \"Dropsite.sol\":1756:1764  random() */\n      jump\t// in\n    tag_59:\n        /* \"Dropsite.sol\":1743:1764  uint nftId = random() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":1784:1787  150 */\n      0x96\n        /* \"Dropsite.sol\":1774:1782  Platinum */\n      sload(0x05)\n        /* \"Dropsite.sol\":1774:1787  Platinum<=150 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":1774:1799  Platinum<=150 && nftId==0 */\n      dup1\n      iszero\n      tag_61\n      jumpi\n      pop\n        /* \"Dropsite.sol\":1798:1799  0 */\n      0x00\n        /* \"Dropsite.sol\":1791:1796  nftId */\n      dup2\n        /* \"Dropsite.sol\":1791:1799  nftId==0 */\n      eq\n        /* \"Dropsite.sol\":1774:1799  Platinum<=150 && nftId==0 */\n    tag_61:\n        /* \"Dropsite.sol\":1773:1827  (Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) */\n      dup1\n      tag_62\n      jumpi\n      pop\n        /* \"Dropsite.sol\":1811:1814  350 */\n      0x015e\n        /* \"Dropsite.sol\":1805:1809  Gold */\n      sload(0x06)\n        /* \"Dropsite.sol\":1805:1814  Gold<=350 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":1805:1826  Gold<=350 && nftId==1 */\n      dup1\n      iszero\n      tag_63\n      jumpi\n      pop\n        /* \"Dropsite.sol\":1825:1826  1 */\n      0x01\n        /* \"Dropsite.sol\":1818:1823  nftId */\n      dup2\n        /* \"Dropsite.sol\":1818:1826  nftId==1 */\n      eq\n        /* \"Dropsite.sol\":1805:1826  Gold<=350 && nftId==1 */\n    tag_63:\n        /* \"Dropsite.sol\":1773:1827  (Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) */\n    tag_62:\n        /* \"Dropsite.sol\":1773:1856  (Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) || (Silver<=500 && nftId==2) */\n      dup1\n      tag_64\n      jumpi\n      pop\n        /* \"Dropsite.sol\":1840:1843  500 */\n      0x01f4\n        /* \"Dropsite.sol\":1832:1838  Silver */\n      sload(0x07)\n        /* \"Dropsite.sol\":1832:1843  Silver<=500 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":1832:1855  Silver<=500 && nftId==2 */\n      dup1\n      iszero\n      tag_65\n      jumpi\n      pop\n        /* \"Dropsite.sol\":1854:1855  2 */\n      0x02\n        /* \"Dropsite.sol\":1847:1852  nftId */\n      dup2\n        /* \"Dropsite.sol\":1847:1855  nftId==2 */\n      eq\n        /* \"Dropsite.sol\":1832:1855  Silver<=500 && nftId==2 */\n    tag_65:\n        /* \"Dropsite.sol\":1773:1856  (Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) || (Silver<=500 && nftId==2) */\n    tag_64:\n        /* \"Dropsite.sol\":1770:2247  if((Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) || (Silver<=500 && nftId==2))... */\n      iszero\n      tag_66\n      jumpi\n        /* \"Dropsite.sol\":1888:1896  random() */\n      tag_67\n        /* \"Dropsite.sol\":1888:1894  random */\n      tag_60\n        /* \"Dropsite.sol\":1888:1896  random() */\n      jump\t// in\n    tag_67:\n        /* \"Dropsite.sol\":1880:1896  nftId = random() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":1920:1921  0 */\n      0x00\n        /* \"Dropsite.sol\":1913:1918  nftId */\n      dup2\n        /* \"Dropsite.sol\":1913:1921  nftId==0 */\n      eq\n        /* \"Dropsite.sol\":1910:2237  if(nftId==0)... */\n      iszero\n      tag_68\n      jumpi\n        /* \"Dropsite.sol\":1953:1968  data=\"Platinum\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x506c6174696e756d000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Dropsite.sol\":1953:1957  data */\n      0x02\n        /* \"Dropsite.sol\":1953:1968  data=\"Platinum\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_69\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      pop\n        /* \"Dropsite.sol\":1986:1994  Platinum */\n      0x05\n      0x00\n        /* \"Dropsite.sol\":1986:1996  Platinum++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":1910:2237  if(nftId==0)... */\n      jump(tag_73)\n    tag_68:\n        /* \"Dropsite.sol\":2039:2040  1 */\n      0x01\n        /* \"Dropsite.sol\":2032:2037  nftId */\n      dup2\n        /* \"Dropsite.sol\":2032:2040  nftId==1 */\n      eq\n        /* \"Dropsite.sol\":2029:2237  if(nftId==1)... */\n      iszero\n      tag_74\n      jumpi\n        /* \"Dropsite.sol\":2072:2083  data=\"Gold\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x476f6c6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Dropsite.sol\":2072:2076  data */\n      0x02\n        /* \"Dropsite.sol\":2072:2083  data=\"Gold\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_75:\n      pop\n        /* \"Dropsite.sol\":2101:2105  Gold */\n      0x06\n      0x00\n        /* \"Dropsite.sol\":2101:2107  Gold++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_76\n      swap1\n      tag_72\n      jump\t// in\n    tag_76:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":2029:2237  if(nftId==1)... */\n      jump(tag_77)\n    tag_74:\n        /* \"Dropsite.sol\":2150:2151  2 */\n      0x02\n        /* \"Dropsite.sol\":2143:2148  nftId */\n      dup2\n        /* \"Dropsite.sol\":2143:2151  nftId==2 */\n      eq\n        /* \"Dropsite.sol\":2140:2237  if(nftId==2)... */\n      iszero\n      tag_78\n      jumpi\n        /* \"Dropsite.sol\":2183:2196  data=\"Silver\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x53696c7665720000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Dropsite.sol\":2183:2187  data */\n      0x02\n        /* \"Dropsite.sol\":2183:2196  data=\"Silver\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_79:\n      pop\n        /* \"Dropsite.sol\":2214:2220  Silver */\n      0x07\n      0x00\n        /* \"Dropsite.sol\":2214:2222  Silver++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_80\n      swap1\n      tag_72\n      jump\t// in\n    tag_80:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":2140:2237  if(nftId==2)... */\n    tag_78:\n        /* \"Dropsite.sol\":2029:2237  if(nftId==1)... */\n    tag_77:\n        /* \"Dropsite.sol\":1910:2237  if(nftId==0)... */\n    tag_73:\n        /* \"Dropsite.sol\":1770:2247  if((Platinum<=150 && nftId==0) || (Gold<=350 && nftId==1) || (Silver<=500 && nftId==2))... */\n    tag_66:\n        /* \"Dropsite.sol\":2258:2303  _mint(_msgSender(), nftId, numOfCopies, data) */\n      tag_81\n        /* \"Dropsite.sol\":2264:2276  _msgSender() */\n      tag_82\n        /* \"Dropsite.sol\":2264:2274  _msgSender */\n      tag_42\n        /* \"Dropsite.sol\":2264:2276  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"Dropsite.sol\":2278:2283  nftId */\n      dup3\n        /* \"Dropsite.sol\":2285:2296  numOfCopies */\n      sload(0x04)\n        /* \"Dropsite.sol\":2298:2302  data */\n      0x02\n        /* \"Dropsite.sol\":2258:2303  _mint(_msgSender(), nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_84\n      jump\t// in\n    tag_85:\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":2258:2263  _mint */\n      tag_89\n        /* \"Dropsite.sol\":2258:2303  _mint(_msgSender(), nftId, numOfCopies, data) */\n      jump\t// in\n    tag_81:\n        /* \"Dropsite.sol\":2333:2337  true */\n      0x01\n        /* \"Dropsite.sol\":2309:2318  nftExists */\n      0x09\n        /* \"Dropsite.sol\":2309:2332  nftExists[_msgSender()] */\n      0x00\n        /* \"Dropsite.sol\":2319:2331  _msgSender() */\n      tag_90\n        /* \"Dropsite.sol\":2319:2329  _msgSender */\n      tag_42\n        /* \"Dropsite.sol\":2319:2331  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"Dropsite.sol\":2309:2332  nftExists[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dropsite.sol\":2309:2337  nftExists[_msgSender()]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":2343:2358  TotalNFTsMinted */\n      0x03\n      0x00\n        /* \"Dropsite.sol\":2343:2360  TotalNFTsMinted++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_91\n      swap1\n      tag_72\n      jump\t// in\n    tag_91:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":2399:2404  nftId */\n      dup1\n        /* \"Dropsite.sol\":2366:2384  dropsite_NFT_Owner */\n      0x08\n        /* \"Dropsite.sol\":2366:2398  dropsite_NFT_Owner[_msgSender()] */\n      0x00\n        /* \"Dropsite.sol\":2385:2397  _msgSender() */\n      tag_92\n        /* \"Dropsite.sol\":2385:2395  _msgSender */\n      tag_42\n        /* \"Dropsite.sol\":2385:2397  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"Dropsite.sol\":2366:2398  dropsite_NFT_Owner[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dropsite.sol\":2366:2404  dropsite_NFT_Owner[_msgSender()]=nftId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":2417:2422  nftId */\n      dup1\n        /* \"Dropsite.sol\":2410:2422  return nftId */\n      swap2\n      pop\n      pop\n        /* \"Dropsite.sol\":1669:2429  function randomMint() contractIsNotPaused public returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":825:854  address payable public  Owner */\n    tag_28:\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Dropsite.sol\":1171:1295  function checkMintedCategory() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_32:\n        /* \"Dropsite.sol\":1232:1236  uint */\n      0x00\n        /* \"Dropsite.sol\":1237:1241  uint */\n      dup1\n        /* \"Dropsite.sol\":1242:1246  uint */\n      0x00\n        /* \"Dropsite.sol\":578:583  Owner */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":562:583  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":562:574  _msgSender() */\n      tag_94\n        /* \"Dropsite.sol\":562:572  _msgSender */\n      tag_42\n        /* \"Dropsite.sol\":562:574  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"Dropsite.sol\":562:583  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":554:612  require(_msgSender() == Owner, \"OnyxNft Owner can Access\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_45\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"Dropsite.sol\":1266:1274  Platinum */\n      sload(0x05)\n        /* \"Dropsite.sol\":1275:1279  Gold */\n      sload(0x06)\n        /* \"Dropsite.sol\":1280:1286  Silver */\n      sload(0x07)\n        /* \"Dropsite.sol\":1258:1287  return (Platinum,Gold,Silver) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Dropsite.sol\":1171:1295  function checkMintedCategory() public view OnlyOwner returns(uint,uint,uint){... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"Dropsite.sol\":406:455  mapping (address=>uint) public dropsite_NFT_Owner */\n    tag_38:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_42:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":1487:1658  function random() internal view returns (uint) {... */\n    tag_60:\n        /* \"Dropsite.sol\":1528:1532  uint */\n      0x00\n        /* \"Dropsite.sol\":1540:1557  uint randomnumber */\n      dup1\n        /* \"Dropsite.sol\":1625:1626  3 */\n      0x03\n        /* \"Dropsite.sol\":1592:1607  block.timestamp */\n      timestamp\n        /* \"Dropsite.sol\":1609:1619  msg.sender */\n      caller\n        /* \"Dropsite.sol\":1575:1620  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":1565:1621  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Dropsite.sol\":1560:1622  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"Dropsite.sol\":1560:1626  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 3 */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"Dropsite.sol\":1540:1626  uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 3 */\n      swap1\n      pop\n        /* \"Dropsite.sol\":1639:1651  randomnumber */\n      dup1\n        /* \"Dropsite.sol\":1632:1651  return randomnumber */\n      swap2\n      pop\n      pop\n        /* \"Dropsite.sol\":1487:1658  function random() internal view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":835:1386  function _mint(... */\n    tag_89:\n        /* \"ERC1155_Dropsite.sol\":996:997  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":982:998  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155_Dropsite.sol\":982:984  to */\n      dup5\n        /* \"ERC1155_Dropsite.sol\":982:998  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155_Dropsite.sol\":974:1036  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"ERC1155_Dropsite.sol\":1047:1063  address operator */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1066:1078  _msgSender() */\n      tag_108\n        /* \"ERC1155_Dropsite.sol\":1066:1076  _msgSender */\n      tag_42\n        /* \"ERC1155_Dropsite.sol\":1066:1078  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"ERC1155_Dropsite.sol\":1047:1078  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155_Dropsite.sol\":1089:1191  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_109\n        /* \"ERC1155_Dropsite.sol\":1110:1118  operator */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1128:1129  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1132:1134  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1136:1157  _asSingletonArray(id) */\n      tag_110\n        /* \"ERC1155_Dropsite.sol\":1154:1156  id */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1136:1153  _asSingletonArray */\n      tag_111\n        /* \"ERC1155_Dropsite.sol\":1136:1157  _asSingletonArray(id) */\n      jump\t// in\n    tag_110:\n        /* \"ERC1155_Dropsite.sol\":1159:1184  _asSingletonArray(amount) */\n      tag_112\n        /* \"ERC1155_Dropsite.sol\":1177:1183  amount */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1159:1176  _asSingletonArray */\n      tag_111\n        /* \"ERC1155_Dropsite.sol\":1159:1184  _asSingletonArray(amount) */\n      jump\t// in\n    tag_112:\n        /* \"ERC1155_Dropsite.sol\":1186:1190  data */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1089:1109  _beforeTokenTransfer */\n      tag_113\n        /* \"ERC1155_Dropsite.sol\":1089:1191  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_109:\n        /* \"ERC1155_Dropsite.sol\":1222:1228  amount */\n      dup3\n        /* \"ERC1155_Dropsite.sol\":1201:1210  _balances */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1201:1214  _balances[id] */\n      dup1\n        /* \"ERC1155_Dropsite.sol\":1211:1213  id */\n      dup7\n        /* \"ERC1155_Dropsite.sol\":1201:1214  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155_Dropsite.sol\":1201:1218  _balances[id][to] */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1215:1217  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1201:1218  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1201:1228  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155_Dropsite.sol\":1280:1282  to */\n      dup5\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155_Dropsite.sol\":1276:1277  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155_Dropsite.sol\":1258:1266  operator */\n      dup3\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155_Dropsite.sol\":1284:1286  id */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1288:1294  amount */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155_Dropsite.sol\":1305:1379  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_118\n        /* \"ERC1155_Dropsite.sol\":1336:1344  operator */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1354:1355  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1358:1360  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1362:1364  id */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1366:1372  amount */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1374:1378  data */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1305:1335  _doSafeTransferAcceptanceCheck */\n      tag_119\n        /* \"ERC1155_Dropsite.sol\":1305:1379  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_118:\n        /* \"ERC1155_Dropsite.sol\":964:1386  {... */\n      pop\n        /* \"ERC1155_Dropsite.sol\":835:1386  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":2344:2537  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_111:\n        /* \"ERC1155_Dropsite.sol\":2410:2426  uint256[] memory */\n      0x60\n        /* \"ERC1155_Dropsite.sol\":2438:2460  uint256[] memory array */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":2477:2478  1 */\n      0x01\n        /* \"ERC1155_Dropsite.sol\":2463:2479  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_124:\n      pop\n        /* \"ERC1155_Dropsite.sol\":2438:2479  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155_Dropsite.sol\":2500:2507  element */\n      dup3\n        /* \"ERC1155_Dropsite.sol\":2489:2494  array */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":2495:2496  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":2489:2497  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155_Dropsite.sol\":2489:2507  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":2525:2530  array */\n      dup1\n        /* \"ERC1155_Dropsite.sol\":2518:2530  return array */\n      swap2\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":2344:2537  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1393:1607  function _beforeTokenTransfer(... */\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1613:2338  function _doSafeTransferAcceptanceCheck(... */\n    tag_119:\n        /* \"ERC1155_Dropsite.sol\":1820:1835  to.isContract() */\n      tag_130\n        /* \"ERC1155_Dropsite.sol\":1820:1822  to */\n      dup5\n        /* \"ERC1155_Dropsite.sol\":1820:1833  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_131\n        /* \"ERC1155_Dropsite.sol\":1820:1835  to.isContract() */\n      jump\t// in\n    tag_130:\n        /* \"ERC1155_Dropsite.sol\":1816:2332  if (to.isContract()) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":1872:1874  to */\n      dup4\n        /* \"ERC1155_Dropsite.sol\":1855:1893  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"ERC1155_Dropsite.sol\":1894:1902  operator */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1904:1908  from */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1910:1912  id */\n      dup7\n        /* \"ERC1155_Dropsite.sol\":1914:1920  amount */\n      dup7\n        /* \"ERC1155_Dropsite.sol\":1922:1926  data */\n      dup7\n        /* \"ERC1155_Dropsite.sol\":1855:1927  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      0x01\n    tag_136:\n        /* \"ERC1155_Dropsite.sol\":1851:2322  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_139\n      jumpi\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_142\n      jumpi\n      pop\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      tag_147\n      jumpi\n      pop\n      jump(tag_141)\n    tag_147:\n        /* \"ERC1155_Dropsite.sol\":2198:2204  reason */\n      dup1\n        /* \"ERC1155_Dropsite.sol\":2191:2205  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155_Dropsite.sol\":1851:2322  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_142:\n      pop\n    tag_141:\n        /* \"ERC1155_Dropsite.sol\":2245:2307  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155_Dropsite.sol\":1851:2322  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_139:\n        /* \"ERC1155_Dropsite.sol\":1988:2031  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"ERC1155_Dropsite.sol\":1976:2031  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155_Dropsite.sol\":1976:1984  response */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1976:2031  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155_Dropsite.sol\":1972:2124  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_153\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":2055:2105  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155_Dropsite.sol\":1972:2124  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_153:\n        /* \"ERC1155_Dropsite.sol\":1928:2138  returns (bytes4 response) {... */\n      pop\n        /* \"ERC1155_Dropsite.sol\":1816:2332  if (to.isContract()) {... */\n    tag_132:\n        /* \"ERC1155_Dropsite.sol\":1613:2338  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_131:\n        /* \"Address.sol\":831:835  bool */\n      0x00\n        /* \"Address.sol\":1034:1046  uint256 size */\n      dup1\n        /* \"Address.sol\":1099:1106  account */\n      dup3\n        /* \"Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"Address.sol\":1079:1107  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"Address.sol\":1140:1141  0 */\n      0x00\n        /* \"Address.sol\":1133:1137  size */\n      dup2\n        /* \"Address.sol\":1133:1141  size > 0 */\n      gt\n        /* \"Address.sol\":1126:1141  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_70:\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_84\n      jump\t// in\n    tag_157:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_159\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_158)\n    tag_159:\n      dup3\n      0x1f\n      lt\n      tag_160\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_158)\n    tag_160:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_158\n      jumpi\n      swap2\n      dup3\n      add\n    tag_161:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_161)\n    tag_162:\n    tag_158:\n      pop\n      swap1\n      pop\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      pop\n      swap1\n      jump\t// out\n    tag_164:\n    tag_165:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_165)\n    tag_166:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_168:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_170\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:293   */\n    tag_172:\n        /* \"#utility.yul\":208:213   */\n      0x00\n        /* \"#utility.yul\":239:245   */\n      dup2\n        /* \"#utility.yul\":233:246   */\n      mload\n        /* \"#utility.yul\":224:246   */\n      swap1\n      pop\n        /* \"#utility.yul\":255:287   */\n      tag_174\n        /* \"#utility.yul\":281:286   */\n      dup2\n        /* \"#utility.yul\":255:287   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":152:293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":299:628   */\n    tag_37:\n        /* \"#utility.yul\":358:364   */\n      0x00\n        /* \"#utility.yul\":407:409   */\n      0x20\n        /* \"#utility.yul\":395:404   */\n      dup3\n        /* \"#utility.yul\":386:393   */\n      dup5\n        /* \"#utility.yul\":382:405   */\n      sub\n        /* \"#utility.yul\":378:410   */\n      slt\n        /* \"#utility.yul\":375:494   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":413:492   */\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":375:494   */\n    tag_177:\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":558:611   */\n      tag_180\n        /* \"#utility.yul\":603:610   */\n      dup5\n        /* \"#utility.yul\":594:600   */\n      dup3\n        /* \"#utility.yul\":583:592   */\n      dup6\n        /* \"#utility.yul\":579:601   */\n      add\n        /* \"#utility.yul\":558:611   */\n      tag_168\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":548:611   */\n      swap2\n      pop\n        /* \"#utility.yul\":504:621   */\n      pop\n        /* \"#utility.yul\":299:628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":634:983   */\n    tag_138:\n        /* \"#utility.yul\":703:709   */\n      0x00\n        /* \"#utility.yul\":752:754   */\n      0x20\n        /* \"#utility.yul\":740:749   */\n      dup3\n        /* \"#utility.yul\":731:738   */\n      dup5\n        /* \"#utility.yul\":727:750   */\n      sub\n        /* \"#utility.yul\":723:755   */\n      slt\n        /* \"#utility.yul\":720:839   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":758:837   */\n      tag_183\n      tag_179\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":720:839   */\n    tag_182:\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":903:966   */\n      tag_184\n        /* \"#utility.yul\":958:965   */\n      dup5\n        /* \"#utility.yul\":949:955   */\n      dup3\n        /* \"#utility.yul\":938:947   */\n      dup6\n        /* \"#utility.yul\":934:956   */\n      add\n        /* \"#utility.yul\":903:966   */\n      tag_172\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":893:966   */\n      swap2\n      pop\n        /* \"#utility.yul\":849:976   */\n      pop\n        /* \"#utility.yul\":634:983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":989:1131   */\n    tag_185:\n        /* \"#utility.yul\":1092:1124   */\n      tag_187\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1092:1124   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1087:1090   */\n      dup3\n        /* \"#utility.yul\":1080:1125   */\n      mstore\n        /* \"#utility.yul\":989:1131   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1255   */\n    tag_189:\n        /* \"#utility.yul\":1224:1248   */\n      tag_191\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1224:1248   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1219:1222   */\n      dup3\n        /* \"#utility.yul\":1212:1249   */\n      mstore\n        /* \"#utility.yul\":1137:1255   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1261:1418   */\n    tag_193:\n        /* \"#utility.yul\":1366:1411   */\n      tag_195\n        /* \"#utility.yul\":1386:1410   */\n      tag_196\n        /* \"#utility.yul\":1404:1409   */\n      dup3\n        /* \"#utility.yul\":1386:1410   */\n      tag_192\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1366:1411   */\n      tag_197\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1361:1364   */\n      dup3\n        /* \"#utility.yul\":1354:1412   */\n      mstore\n        /* \"#utility.yul\":1261:1418   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1424:1533   */\n    tag_198:\n        /* \"#utility.yul\":1505:1526   */\n      tag_200\n        /* \"#utility.yul\":1520:1525   */\n      dup2\n        /* \"#utility.yul\":1505:1526   */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1500:1503   */\n      dup3\n        /* \"#utility.yul\":1493:1527   */\n      mstore\n        /* \"#utility.yul\":1424:1533   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1539:1899   */\n    tag_202:\n        /* \"#utility.yul\":1625:1628   */\n      0x00\n        /* \"#utility.yul\":1653:1691   */\n      tag_204\n        /* \"#utility.yul\":1685:1690   */\n      dup3\n        /* \"#utility.yul\":1653:1691   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1707:1777   */\n      tag_206\n        /* \"#utility.yul\":1770:1776   */\n      dup2\n        /* \"#utility.yul\":1765:1768   */\n      dup6\n        /* \"#utility.yul\":1707:1777   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1700:1777   */\n      swap4\n      pop\n        /* \"#utility.yul\":1786:1838   */\n      tag_208\n        /* \"#utility.yul\":1831:1837   */\n      dup2\n        /* \"#utility.yul\":1826:1829   */\n      dup6\n        /* \"#utility.yul\":1819:1823   */\n      0x20\n        /* \"#utility.yul\":1812:1817   */\n      dup7\n        /* \"#utility.yul\":1808:1824   */\n      add\n        /* \"#utility.yul\":1786:1838   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1863:1892   */\n      tag_210\n        /* \"#utility.yul\":1885:1891   */\n      dup2\n        /* \"#utility.yul\":1863:1892   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1858:1861   */\n      dup5\n        /* \"#utility.yul\":1854:1893   */\n      add\n        /* \"#utility.yul\":1847:1893   */\n      swap2\n      pop\n        /* \"#utility.yul\":1629:1899   */\n      pop\n        /* \"#utility.yul\":1539:1899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1905:2269   */\n    tag_212:\n        /* \"#utility.yul\":1993:1996   */\n      0x00\n        /* \"#utility.yul\":2021:2060   */\n      tag_214\n        /* \"#utility.yul\":2054:2059   */\n      dup3\n        /* \"#utility.yul\":2021:2060   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2076:2147   */\n      tag_216\n        /* \"#utility.yul\":2140:2146   */\n      dup2\n        /* \"#utility.yul\":2135:2138   */\n      dup6\n        /* \"#utility.yul\":2076:2147   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2069:2147   */\n      swap4\n      pop\n        /* \"#utility.yul\":2156:2208   */\n      tag_218\n        /* \"#utility.yul\":2201:2207   */\n      dup2\n        /* \"#utility.yul\":2196:2199   */\n      dup6\n        /* \"#utility.yul\":2189:2193   */\n      0x20\n        /* \"#utility.yul\":2182:2187   */\n      dup7\n        /* \"#utility.yul\":2178:2194   */\n      add\n        /* \"#utility.yul\":2156:2208   */\n      tag_209\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2233:2262   */\n      tag_219\n        /* \"#utility.yul\":2255:2261   */\n      dup2\n        /* \"#utility.yul\":2233:2262   */\n      tag_211\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2228:2231   */\n      dup5\n        /* \"#utility.yul\":2224:2263   */\n      add\n        /* \"#utility.yul\":2217:2263   */\n      swap2\n      pop\n        /* \"#utility.yul\":1997:2269   */\n      pop\n        /* \"#utility.yul\":1905:2269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2275:2641   */\n    tag_220:\n        /* \"#utility.yul\":2417:2420   */\n      0x00\n        /* \"#utility.yul\":2438:2505   */\n      tag_222\n        /* \"#utility.yul\":2502:2504   */\n      0x34\n        /* \"#utility.yul\":2497:2500   */\n      dup4\n        /* \"#utility.yul\":2438:2505   */\n      tag_217\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2431:2505   */\n      swap2\n      pop\n        /* \"#utility.yul\":2514:2607   */\n      tag_223\n        /* \"#utility.yul\":2603:2606   */\n      dup3\n        /* \"#utility.yul\":2514:2607   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2632:2634   */\n      0x40\n        /* \"#utility.yul\":2627:2630   */\n      dup3\n        /* \"#utility.yul\":2623:2635   */\n      add\n        /* \"#utility.yul\":2616:2635   */\n      swap1\n      pop\n        /* \"#utility.yul\":2275:2641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2647:3013   */\n    tag_225:\n        /* \"#utility.yul\":2789:2792   */\n      0x00\n        /* \"#utility.yul\":2810:2877   */\n      tag_227\n        /* \"#utility.yul\":2874:2876   */\n      0x28\n        /* \"#utility.yul\":2869:2872   */\n      dup4\n        /* \"#utility.yul\":2810:2877   */\n      tag_217\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2803:2877   */\n      swap2\n      pop\n        /* \"#utility.yul\":2886:2979   */\n      tag_228\n        /* \"#utility.yul\":2975:2978   */\n      dup3\n        /* \"#utility.yul\":2886:2979   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3004:3006   */\n      0x40\n        /* \"#utility.yul\":2999:3002   */\n      dup3\n        /* \"#utility.yul\":2995:3007   */\n      add\n        /* \"#utility.yul\":2988:3007   */\n      swap1\n      pop\n        /* \"#utility.yul\":2647:3013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3385   */\n    tag_230:\n        /* \"#utility.yul\":3161:3164   */\n      0x00\n        /* \"#utility.yul\":3182:3249   */\n      tag_232\n        /* \"#utility.yul\":3246:3248   */\n      0x18\n        /* \"#utility.yul\":3241:3244   */\n      dup4\n        /* \"#utility.yul\":3182:3249   */\n      tag_217\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3175:3249   */\n      swap2\n      pop\n        /* \"#utility.yul\":3258:3351   */\n      tag_233\n        /* \"#utility.yul\":3347:3350   */\n      dup3\n        /* \"#utility.yul\":3258:3351   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3376:3378   */\n      0x20\n        /* \"#utility.yul\":3371:3374   */\n      dup3\n        /* \"#utility.yul\":3367:3379   */\n      add\n        /* \"#utility.yul\":3360:3379   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3391:3757   */\n    tag_235:\n        /* \"#utility.yul\":3533:3536   */\n      0x00\n        /* \"#utility.yul\":3554:3621   */\n      tag_237\n        /* \"#utility.yul\":3618:3620   */\n      0x12\n        /* \"#utility.yul\":3613:3616   */\n      dup4\n        /* \"#utility.yul\":3554:3621   */\n      tag_217\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3547:3621   */\n      swap2\n      pop\n        /* \"#utility.yul\":3630:3723   */\n      tag_238\n        /* \"#utility.yul\":3719:3722   */\n      dup3\n        /* \"#utility.yul\":3630:3723   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3748:3750   */\n      0x20\n        /* \"#utility.yul\":3743:3746   */\n      dup3\n        /* \"#utility.yul\":3739:3751   */\n      add\n        /* \"#utility.yul\":3732:3751   */\n      swap1\n      pop\n        /* \"#utility.yul\":3391:3757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3763:4129   */\n    tag_240:\n        /* \"#utility.yul\":3905:3908   */\n      0x00\n        /* \"#utility.yul\":3926:3993   */\n      tag_242\n        /* \"#utility.yul\":3990:3992   */\n      0x21\n        /* \"#utility.yul\":3985:3988   */\n      dup4\n        /* \"#utility.yul\":3926:3993   */\n      tag_217\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3919:3993   */\n      swap2\n      pop\n        /* \"#utility.yul\":4002:4095   */\n      tag_243\n        /* \"#utility.yul\":4091:4094   */\n      dup3\n        /* \"#utility.yul\":4002:4095   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4120:4122   */\n      0x40\n        /* \"#utility.yul\":4115:4118   */\n      dup3\n        /* \"#utility.yul\":4111:4123   */\n      add\n        /* \"#utility.yul\":4104:4123   */\n      swap1\n      pop\n        /* \"#utility.yul\":3763:4129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4135:4253   */\n    tag_245:\n        /* \"#utility.yul\":4222:4246   */\n      tag_247\n        /* \"#utility.yul\":4240:4245   */\n      dup2\n        /* \"#utility.yul\":4222:4246   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4217:4220   */\n      dup3\n        /* \"#utility.yul\":4210:4247   */\n      mstore\n        /* \"#utility.yul\":4135:4253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4259:4416   */\n    tag_249:\n        /* \"#utility.yul\":4364:4409   */\n      tag_251\n        /* \"#utility.yul\":4384:4408   */\n      tag_252\n        /* \"#utility.yul\":4402:4407   */\n      dup3\n        /* \"#utility.yul\":4384:4408   */\n      tag_248\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4364:4409   */\n      tag_253\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4359:4362   */\n      dup3\n        /* \"#utility.yul\":4352:4410   */\n      mstore\n        /* \"#utility.yul\":4259:4416   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4422:4819   */\n    tag_101:\n        /* \"#utility.yul\":4562:4565   */\n      0x00\n        /* \"#utility.yul\":4577:4652   */\n      tag_255\n        /* \"#utility.yul\":4648:4651   */\n      dup3\n        /* \"#utility.yul\":4639:4645   */\n      dup6\n        /* \"#utility.yul\":4577:4652   */\n      tag_249\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4677:4679   */\n      0x20\n        /* \"#utility.yul\":4672:4675   */\n      dup3\n        /* \"#utility.yul\":4668:4680   */\n      add\n        /* \"#utility.yul\":4661:4680   */\n      swap2\n      pop\n        /* \"#utility.yul\":4690:4765   */\n      tag_256\n        /* \"#utility.yul\":4761:4764   */\n      dup3\n        /* \"#utility.yul\":4752:4758   */\n      dup5\n        /* \"#utility.yul\":4690:4765   */\n      tag_193\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4790:4792   */\n      0x14\n        /* \"#utility.yul\":4785:4788   */\n      dup3\n        /* \"#utility.yul\":4781:4793   */\n      add\n        /* \"#utility.yul\":4774:4793   */\n      swap2\n      pop\n        /* \"#utility.yul\":4810:4813   */\n      dup2\n        /* \"#utility.yul\":4803:4813   */\n      swap1\n      pop\n        /* \"#utility.yul\":4422:4819   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4825:5079   */\n    tag_30:\n        /* \"#utility.yul\":4934:4938   */\n      0x00\n        /* \"#utility.yul\":4972:4974   */\n      0x20\n        /* \"#utility.yul\":4961:4970   */\n      dup3\n        /* \"#utility.yul\":4957:4975   */\n      add\n        /* \"#utility.yul\":4949:4975   */\n      swap1\n      pop\n        /* \"#utility.yul\":4985:5072   */\n      tag_258\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5058:5067   */\n      dup4\n        /* \"#utility.yul\":5054:5071   */\n      add\n        /* \"#utility.yul\":5045:5051   */\n      dup5\n        /* \"#utility.yul\":4985:5072   */\n      tag_185\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4825:5079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5085:5836   */\n    tag_134:\n        /* \"#utility.yul\":5308:5312   */\n      0x00\n        /* \"#utility.yul\":5346:5349   */\n      0xa0\n        /* \"#utility.yul\":5335:5344   */\n      dup3\n        /* \"#utility.yul\":5331:5350   */\n      add\n        /* \"#utility.yul\":5323:5350   */\n      swap1\n      pop\n        /* \"#utility.yul\":5360:5431   */\n      tag_260\n        /* \"#utility.yul\":5428:5429   */\n      0x00\n        /* \"#utility.yul\":5417:5426   */\n      dup4\n        /* \"#utility.yul\":5413:5430   */\n      add\n        /* \"#utility.yul\":5404:5410   */\n      dup9\n        /* \"#utility.yul\":5360:5431   */\n      tag_189\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5441:5513   */\n      tag_261\n        /* \"#utility.yul\":5509:5511   */\n      0x20\n        /* \"#utility.yul\":5498:5507   */\n      dup4\n        /* \"#utility.yul\":5494:5512   */\n      add\n        /* \"#utility.yul\":5485:5491   */\n      dup8\n        /* \"#utility.yul\":5441:5513   */\n      tag_189\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5523:5595   */\n      tag_262\n        /* \"#utility.yul\":5591:5593   */\n      0x40\n        /* \"#utility.yul\":5580:5589   */\n      dup4\n        /* \"#utility.yul\":5576:5594   */\n      add\n        /* \"#utility.yul\":5567:5573   */\n      dup7\n        /* \"#utility.yul\":5523:5595   */\n      tag_245\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5605:5677   */\n      tag_263\n        /* \"#utility.yul\":5673:5675   */\n      0x60\n        /* \"#utility.yul\":5662:5671   */\n      dup4\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5649:5655   */\n      dup6\n        /* \"#utility.yul\":5605:5677   */\n      tag_245\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5725:5734   */\n      dup2\n        /* \"#utility.yul\":5719:5723   */\n      dup2\n        /* \"#utility.yul\":5715:5735   */\n      sub\n        /* \"#utility.yul\":5709:5712   */\n      0x80\n        /* \"#utility.yul\":5698:5707   */\n      dup4\n        /* \"#utility.yul\":5694:5713   */\n      add\n        /* \"#utility.yul\":5687:5736   */\n      mstore\n        /* \"#utility.yul\":5753:5829   */\n      tag_264\n        /* \"#utility.yul\":5824:5828   */\n      dup2\n        /* \"#utility.yul\":5815:5821   */\n      dup5\n        /* \"#utility.yul\":5753:5829   */\n      tag_202\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5745:5829   */\n      swap1\n      pop\n        /* \"#utility.yul\":5085:5836   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5842:6052   */\n    tag_15:\n        /* \"#utility.yul\":5929:5933   */\n      0x00\n        /* \"#utility.yul\":5967:5969   */\n      0x20\n        /* \"#utility.yul\":5956:5965   */\n      dup3\n        /* \"#utility.yul\":5952:5970   */\n      add\n        /* \"#utility.yul\":5944:5970   */\n      swap1\n      pop\n        /* \"#utility.yul\":5980:6045   */\n      tag_266\n        /* \"#utility.yul\":6042:6043   */\n      0x00\n        /* \"#utility.yul\":6031:6040   */\n      dup4\n        /* \"#utility.yul\":6027:6044   */\n      add\n        /* \"#utility.yul\":6018:6024   */\n      dup5\n        /* \"#utility.yul\":5980:6045   */\n      tag_198\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5842:6052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6371   */\n    tag_149:\n        /* \"#utility.yul\":6171:6175   */\n      0x00\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6198:6207   */\n      dup3\n        /* \"#utility.yul\":6194:6212   */\n      add\n        /* \"#utility.yul\":6186:6212   */\n      swap1\n      pop\n        /* \"#utility.yul\":6258:6267   */\n      dup2\n        /* \"#utility.yul\":6252:6256   */\n      dup2\n        /* \"#utility.yul\":6248:6268   */\n      sub\n        /* \"#utility.yul\":6244:6245   */\n      0x00\n        /* \"#utility.yul\":6233:6242   */\n      dup4\n        /* \"#utility.yul\":6229:6246   */\n      add\n        /* \"#utility.yul\":6222:6269   */\n      mstore\n        /* \"#utility.yul\":6286:6364   */\n      tag_268\n        /* \"#utility.yul\":6359:6363   */\n      dup2\n        /* \"#utility.yul\":6350:6356   */\n      dup5\n        /* \"#utility.yul\":6286:6364   */\n      tag_212\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6278:6364   */\n      swap1\n      pop\n        /* \"#utility.yul\":6058:6371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6377:6796   */\n    tag_151:\n        /* \"#utility.yul\":6543:6547   */\n      0x00\n        /* \"#utility.yul\":6581:6583   */\n      0x20\n        /* \"#utility.yul\":6570:6579   */\n      dup3\n        /* \"#utility.yul\":6566:6584   */\n      add\n        /* \"#utility.yul\":6558:6584   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6639   */\n      dup2\n        /* \"#utility.yul\":6624:6628   */\n      dup2\n        /* \"#utility.yul\":6620:6640   */\n      sub\n        /* \"#utility.yul\":6616:6617   */\n      0x00\n        /* \"#utility.yul\":6605:6614   */\n      dup4\n        /* \"#utility.yul\":6601:6618   */\n      add\n        /* \"#utility.yul\":6594:6641   */\n      mstore\n        /* \"#utility.yul\":6658:6789   */\n      tag_270\n        /* \"#utility.yul\":6784:6788   */\n      dup2\n        /* \"#utility.yul\":6658:6789   */\n      tag_220\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6650:6789   */\n      swap1\n      pop\n        /* \"#utility.yul\":6377:6796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6802:7221   */\n    tag_155:\n        /* \"#utility.yul\":6968:6972   */\n      0x00\n        /* \"#utility.yul\":7006:7008   */\n      0x20\n        /* \"#utility.yul\":6995:7004   */\n      dup3\n        /* \"#utility.yul\":6991:7009   */\n      add\n        /* \"#utility.yul\":6983:7009   */\n      swap1\n      pop\n        /* \"#utility.yul\":7055:7064   */\n      dup2\n        /* \"#utility.yul\":7049:7053   */\n      dup2\n        /* \"#utility.yul\":7045:7065   */\n      sub\n        /* \"#utility.yul\":7041:7042   */\n      0x00\n        /* \"#utility.yul\":7030:7039   */\n      dup4\n        /* \"#utility.yul\":7026:7043   */\n      add\n        /* \"#utility.yul\":7019:7066   */\n      mstore\n        /* \"#utility.yul\":7083:7214   */\n      tag_272\n        /* \"#utility.yul\":7209:7213   */\n      dup2\n        /* \"#utility.yul\":7083:7214   */\n      tag_225\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7075:7214   */\n      swap1\n      pop\n        /* \"#utility.yul\":6802:7221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7227:7646   */\n    tag_45:\n        /* \"#utility.yul\":7393:7397   */\n      0x00\n        /* \"#utility.yul\":7431:7433   */\n      0x20\n        /* \"#utility.yul\":7420:7429   */\n      dup3\n        /* \"#utility.yul\":7416:7434   */\n      add\n        /* \"#utility.yul\":7408:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7480:7489   */\n      dup2\n        /* \"#utility.yul\":7474:7478   */\n      dup2\n        /* \"#utility.yul\":7470:7490   */\n      sub\n        /* \"#utility.yul\":7466:7467   */\n      0x00\n        /* \"#utility.yul\":7455:7464   */\n      dup4\n        /* \"#utility.yul\":7451:7468   */\n      add\n        /* \"#utility.yul\":7444:7491   */\n      mstore\n        /* \"#utility.yul\":7508:7639   */\n      tag_274\n        /* \"#utility.yul\":7634:7638   */\n      dup2\n        /* \"#utility.yul\":7508:7639   */\n      tag_230\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7500:7639   */\n      swap1\n      pop\n        /* \"#utility.yul\":7227:7646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:8071   */\n    tag_57:\n        /* \"#utility.yul\":7818:7822   */\n      0x00\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"#utility.yul\":7845:7854   */\n      dup3\n        /* \"#utility.yul\":7841:7859   */\n      add\n        /* \"#utility.yul\":7833:7859   */\n      swap1\n      pop\n        /* \"#utility.yul\":7905:7914   */\n      dup2\n        /* \"#utility.yul\":7899:7903   */\n      dup2\n        /* \"#utility.yul\":7895:7915   */\n      sub\n        /* \"#utility.yul\":7891:7892   */\n      0x00\n        /* \"#utility.yul\":7880:7889   */\n      dup4\n        /* \"#utility.yul\":7876:7893   */\n      add\n        /* \"#utility.yul\":7869:7916   */\n      mstore\n        /* \"#utility.yul\":7933:8064   */\n      tag_276\n        /* \"#utility.yul\":8059:8063   */\n      dup2\n        /* \"#utility.yul\":7933:8064   */\n      tag_235\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7925:8064   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:8071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8077:8496   */\n    tag_107:\n        /* \"#utility.yul\":8243:8247   */\n      0x00\n        /* \"#utility.yul\":8281:8283   */\n      0x20\n        /* \"#utility.yul\":8270:8279   */\n      dup3\n        /* \"#utility.yul\":8266:8284   */\n      add\n        /* \"#utility.yul\":8258:8284   */\n      swap1\n      pop\n        /* \"#utility.yul\":8330:8339   */\n      dup2\n        /* \"#utility.yul\":8324:8328   */\n      dup2\n        /* \"#utility.yul\":8320:8340   */\n      sub\n        /* \"#utility.yul\":8316:8317   */\n      0x00\n        /* \"#utility.yul\":8305:8314   */\n      dup4\n        /* \"#utility.yul\":8301:8318   */\n      add\n        /* \"#utility.yul\":8294:8341   */\n      mstore\n        /* \"#utility.yul\":8358:8489   */\n      tag_278\n        /* \"#utility.yul\":8484:8488   */\n      dup2\n        /* \"#utility.yul\":8358:8489   */\n      tag_240\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8350:8489   */\n      swap1\n      pop\n        /* \"#utility.yul\":8077:8496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8502:8724   */\n    tag_19:\n        /* \"#utility.yul\":8595:8599   */\n      0x00\n        /* \"#utility.yul\":8633:8635   */\n      0x20\n        /* \"#utility.yul\":8622:8631   */\n      dup3\n        /* \"#utility.yul\":8618:8636   */\n      add\n        /* \"#utility.yul\":8610:8636   */\n      swap1\n      pop\n        /* \"#utility.yul\":8646:8717   */\n      tag_280\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8703:8712   */\n      dup4\n        /* \"#utility.yul\":8699:8716   */\n      add\n        /* \"#utility.yul\":8690:8696   */\n      dup5\n        /* \"#utility.yul\":8646:8717   */\n      tag_245\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8502:8724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8730:9062   */\n    tag_117:\n        /* \"#utility.yul\":8851:8855   */\n      0x00\n        /* \"#utility.yul\":8889:8891   */\n      0x40\n        /* \"#utility.yul\":8878:8887   */\n      dup3\n        /* \"#utility.yul\":8874:8892   */\n      add\n        /* \"#utility.yul\":8866:8892   */\n      swap1\n      pop\n        /* \"#utility.yul\":8902:8973   */\n      tag_282\n        /* \"#utility.yul\":8970:8971   */\n      0x00\n        /* \"#utility.yul\":8959:8968   */\n      dup4\n        /* \"#utility.yul\":8955:8972   */\n      add\n        /* \"#utility.yul\":8946:8952   */\n      dup6\n        /* \"#utility.yul\":8902:8973   */\n      tag_245\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8983:9055   */\n      tag_283\n        /* \"#utility.yul\":9051:9053   */\n      0x20\n        /* \"#utility.yul\":9040:9049   */\n      dup4\n        /* \"#utility.yul\":9036:9054   */\n      add\n        /* \"#utility.yul\":9027:9033   */\n      dup5\n        /* \"#utility.yul\":8983:9055   */\n      tag_245\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8730:9062   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9068:9510   */\n    tag_34:\n        /* \"#utility.yul\":9217:9221   */\n      0x00\n        /* \"#utility.yul\":9255:9257   */\n      0x60\n        /* \"#utility.yul\":9244:9253   */\n      dup3\n        /* \"#utility.yul\":9240:9258   */\n      add\n        /* \"#utility.yul\":9232:9258   */\n      swap1\n      pop\n        /* \"#utility.yul\":9268:9339   */\n      tag_285\n        /* \"#utility.yul\":9336:9337   */\n      0x00\n        /* \"#utility.yul\":9325:9334   */\n      dup4\n        /* \"#utility.yul\":9321:9338   */\n      add\n        /* \"#utility.yul\":9312:9318   */\n      dup7\n        /* \"#utility.yul\":9268:9339   */\n      tag_245\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9349:9421   */\n      tag_286\n        /* \"#utility.yul\":9417:9419   */\n      0x20\n        /* \"#utility.yul\":9406:9415   */\n      dup4\n        /* \"#utility.yul\":9402:9420   */\n      add\n        /* \"#utility.yul\":9393:9399   */\n      dup6\n        /* \"#utility.yul\":9349:9421   */\n      tag_245\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9431:9503   */\n      tag_287\n        /* \"#utility.yul\":9499:9501   */\n      0x40\n        /* \"#utility.yul\":9488:9497   */\n      dup4\n        /* \"#utility.yul\":9484:9502   */\n      add\n        /* \"#utility.yul\":9475:9481   */\n      dup5\n        /* \"#utility.yul\":9431:9503   */\n      tag_245\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9068:9510   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9516:9591   */\n    tag_288:\n        /* \"#utility.yul\":9549:9555   */\n      0x00\n        /* \"#utility.yul\":9582:9584   */\n      0x40\n        /* \"#utility.yul\":9576:9585   */\n      mload\n        /* \"#utility.yul\":9566:9585   */\n      swap1\n      pop\n        /* \"#utility.yul\":9516:9591   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9597:9695   */\n    tag_205:\n        /* \"#utility.yul\":9648:9654   */\n      0x00\n        /* \"#utility.yul\":9682:9687   */\n      dup2\n        /* \"#utility.yul\":9676:9688   */\n      mload\n        /* \"#utility.yul\":9666:9688   */\n      swap1\n      pop\n        /* \"#utility.yul\":9597:9695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9701:9800   */\n    tag_215:\n        /* \"#utility.yul\":9753:9759   */\n      0x00\n        /* \"#utility.yul\":9787:9792   */\n      dup2\n        /* \"#utility.yul\":9781:9793   */\n      mload\n        /* \"#utility.yul\":9771:9793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9701:9800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:9974   */\n    tag_207:\n        /* \"#utility.yul\":9889:9900   */\n      0x00\n        /* \"#utility.yul\":9923:9929   */\n      dup3\n        /* \"#utility.yul\":9918:9921   */\n      dup3\n        /* \"#utility.yul\":9911:9930   */\n      mstore\n        /* \"#utility.yul\":9963:9967   */\n      0x20\n        /* \"#utility.yul\":9958:9961   */\n      dup3\n        /* \"#utility.yul\":9954:9968   */\n      add\n        /* \"#utility.yul\":9939:9968   */\n      swap1\n      pop\n        /* \"#utility.yul\":9806:9974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9980:10149   */\n    tag_217:\n        /* \"#utility.yul\":10064:10075   */\n      0x00\n        /* \"#utility.yul\":10098:10104   */\n      dup3\n        /* \"#utility.yul\":10093:10096   */\n      dup3\n        /* \"#utility.yul\":10086:10105   */\n      mstore\n        /* \"#utility.yul\":10138:10142   */\n      0x20\n        /* \"#utility.yul\":10133:10136   */\n      dup3\n        /* \"#utility.yul\":10129:10143   */\n      add\n        /* \"#utility.yul\":10114:10143   */\n      swap1\n      pop\n        /* \"#utility.yul\":9980:10149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10155:10460   */\n    tag_115:\n        /* \"#utility.yul\":10195:10198   */\n      0x00\n        /* \"#utility.yul\":10214:10234   */\n      tag_295\n        /* \"#utility.yul\":10232:10233   */\n      dup3\n        /* \"#utility.yul\":10214:10234   */\n      tag_248\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10209:10234   */\n      swap2\n      pop\n        /* \"#utility.yul\":10248:10268   */\n      tag_296\n        /* \"#utility.yul\":10266:10267   */\n      dup4\n        /* \"#utility.yul\":10248:10268   */\n      tag_248\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10243:10268   */\n      swap3\n      pop\n        /* \"#utility.yul\":10402:10403   */\n      dup3\n        /* \"#utility.yul\":10334:10400   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10330:10404   */\n      sub\n        /* \"#utility.yul\":10327:10328   */\n      dup3\n        /* \"#utility.yul\":10324:10405   */\n      gt\n        /* \"#utility.yul\":10321:10428   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":10408:10426   */\n      tag_298\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10321:10428   */\n    tag_297:\n        /* \"#utility.yul\":10452:10453   */\n      dup3\n        /* \"#utility.yul\":10449:10450   */\n      dup3\n        /* \"#utility.yul\":10445:10454   */\n      add\n        /* \"#utility.yul\":10438:10454   */\n      swap1\n      pop\n        /* \"#utility.yul\":10155:10460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10466:10562   */\n    tag_192:\n        /* \"#utility.yul\":10503:10510   */\n      0x00\n        /* \"#utility.yul\":10532:10556   */\n      tag_301\n        /* \"#utility.yul\":10550:10555   */\n      dup3\n        /* \"#utility.yul\":10532:10556   */\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10521:10556   */\n      swap1\n      pop\n        /* \"#utility.yul\":10466:10562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10672   */\n    tag_188:\n        /* \"#utility.yul\":10613:10620   */\n      0x00\n        /* \"#utility.yul\":10642:10666   */\n      tag_304\n        /* \"#utility.yul\":10660:10665   */\n      dup3\n        /* \"#utility.yul\":10642:10666   */\n      tag_302\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10631:10666   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10678:10768   */\n    tag_201:\n        /* \"#utility.yul\":10712:10719   */\n      0x00\n        /* \"#utility.yul\":10755:10760   */\n      dup2\n        /* \"#utility.yul\":10748:10761   */\n      iszero\n        /* \"#utility.yul\":10741:10762   */\n      iszero\n        /* \"#utility.yul\":10730:10762   */\n      swap1\n      pop\n        /* \"#utility.yul\":10678:10768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10774:10923   */\n    tag_306:\n        /* \"#utility.yul\":10810:10817   */\n      0x00\n        /* \"#utility.yul\":10850:10916   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10843:10848   */\n      dup3\n        /* \"#utility.yul\":10839:10917   */\n      and\n        /* \"#utility.yul\":10828:10917   */\n      swap1\n      pop\n        /* \"#utility.yul\":10774:10923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10929:11055   */\n    tag_302:\n        /* \"#utility.yul\":10966:10973   */\n      0x00\n        /* \"#utility.yul\":11006:11048   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10999:11004   */\n      dup3\n        /* \"#utility.yul\":10995:11049   */\n      and\n        /* \"#utility.yul\":10984:11049   */\n      swap1\n      pop\n        /* \"#utility.yul\":10929:11055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11061:11138   */\n    tag_248:\n        /* \"#utility.yul\":11098:11105   */\n      0x00\n        /* \"#utility.yul\":11127:11132   */\n      dup2\n        /* \"#utility.yul\":11116:11132   */\n      swap1\n      pop\n        /* \"#utility.yul\":11061:11138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11144:11451   */\n    tag_209:\n        /* \"#utility.yul\":11212:11213   */\n      0x00\n        /* \"#utility.yul\":11222:11335   */\n    tag_311:\n        /* \"#utility.yul\":11236:11242   */\n      dup4\n        /* \"#utility.yul\":11233:11234   */\n      dup2\n        /* \"#utility.yul\":11230:11243   */\n      lt\n        /* \"#utility.yul\":11222:11335   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":11321:11322   */\n      dup1\n        /* \"#utility.yul\":11316:11319   */\n      dup3\n        /* \"#utility.yul\":11312:11323   */\n      add\n        /* \"#utility.yul\":11306:11324   */\n      mload\n        /* \"#utility.yul\":11302:11303   */\n      dup2\n        /* \"#utility.yul\":11297:11300   */\n      dup5\n        /* \"#utility.yul\":11293:11304   */\n      add\n        /* \"#utility.yul\":11286:11325   */\n      mstore\n        /* \"#utility.yul\":11258:11260   */\n      0x20\n        /* \"#utility.yul\":11255:11256   */\n      dup2\n        /* \"#utility.yul\":11251:11261   */\n      add\n        /* \"#utility.yul\":11246:11261   */\n      swap1\n      pop\n        /* \"#utility.yul\":11222:11335   */\n      jump(tag_311)\n    tag_313:\n        /* \"#utility.yul\":11353:11359   */\n      dup4\n        /* \"#utility.yul\":11350:11351   */\n      dup2\n        /* \"#utility.yul\":11347:11360   */\n      gt\n        /* \"#utility.yul\":11344:11445   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":11433:11434   */\n      0x00\n        /* \"#utility.yul\":11424:11430   */\n      dup5\n        /* \"#utility.yul\":11419:11422   */\n      dup5\n        /* \"#utility.yul\":11415:11431   */\n      add\n        /* \"#utility.yul\":11408:11435   */\n      mstore\n        /* \"#utility.yul\":11344:11445   */\n    tag_314:\n        /* \"#utility.yul\":11193:11451   */\n      pop\n        /* \"#utility.yul\":11144:11451   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11457:11777   */\n    tag_84:\n        /* \"#utility.yul\":11501:11507   */\n      0x00\n        /* \"#utility.yul\":11538:11539   */\n      0x02\n        /* \"#utility.yul\":11532:11536   */\n      dup3\n        /* \"#utility.yul\":11528:11540   */\n      div\n        /* \"#utility.yul\":11518:11540   */\n      swap1\n      pop\n        /* \"#utility.yul\":11585:11586   */\n      0x01\n        /* \"#utility.yul\":11579:11583   */\n      dup3\n        /* \"#utility.yul\":11575:11587   */\n      and\n        /* \"#utility.yul\":11606:11624   */\n      dup1\n        /* \"#utility.yul\":11596:11677   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":11662:11666   */\n      0x7f\n        /* \"#utility.yul\":11654:11660   */\n      dup3\n        /* \"#utility.yul\":11650:11667   */\n      and\n        /* \"#utility.yul\":11640:11667   */\n      swap2\n      pop\n        /* \"#utility.yul\":11596:11677   */\n    tag_316:\n        /* \"#utility.yul\":11724:11726   */\n      0x20\n        /* \"#utility.yul\":11716:11722   */\n      dup3\n        /* \"#utility.yul\":11713:11727   */\n      lt\n        /* \"#utility.yul\":11693:11711   */\n      dup2\n        /* \"#utility.yul\":11690:11728   */\n      eq\n        /* \"#utility.yul\":11687:11771   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":11743:11761   */\n      tag_318\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11687:11771   */\n    tag_317:\n        /* \"#utility.yul\":11508:11777   */\n      pop\n        /* \"#utility.yul\":11457:11777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11783:12064   */\n    tag_320:\n        /* \"#utility.yul\":11866:11893   */\n      tag_322\n        /* \"#utility.yul\":11888:11892   */\n      dup3\n        /* \"#utility.yul\":11866:11893   */\n      tag_211\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11858:11864   */\n      dup2\n        /* \"#utility.yul\":11854:11894   */\n      add\n        /* \"#utility.yul\":11996:12002   */\n      dup2\n        /* \"#utility.yul\":11984:11994   */\n      dup2\n        /* \"#utility.yul\":11981:12003   */\n      lt\n        /* \"#utility.yul\":11960:11978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11948:11958   */\n      dup3\n        /* \"#utility.yul\":11945:11979   */\n      gt\n        /* \"#utility.yul\":11942:12004   */\n      or\n        /* \"#utility.yul\":11939:12027   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":12007:12025   */\n      tag_324\n      tag_123\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11939:12027   */\n    tag_323:\n        /* \"#utility.yul\":12047:12057   */\n      dup1\n        /* \"#utility.yul\":12043:12045   */\n      0x40\n        /* \"#utility.yul\":12036:12058   */\n      mstore\n        /* \"#utility.yul\":11826:12064   */\n      pop\n        /* \"#utility.yul\":11783:12064   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12070:12303   */\n    tag_72:\n        /* \"#utility.yul\":12109:12112   */\n      0x00\n        /* \"#utility.yul\":12132:12156   */\n      tag_326\n        /* \"#utility.yul\":12150:12155   */\n      dup3\n        /* \"#utility.yul\":12132:12156   */\n      tag_248\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12123:12156   */\n      swap2\n      pop\n        /* \"#utility.yul\":12178:12244   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12171:12176   */\n      dup3\n        /* \"#utility.yul\":12168:12245   */\n      eq\n        /* \"#utility.yul\":12165:12268   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":12248:12266   */\n      tag_328\n      tag_299\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12165:12268   */\n    tag_327:\n        /* \"#utility.yul\":12295:12296   */\n      0x01\n        /* \"#utility.yul\":12288:12293   */\n      dup3\n        /* \"#utility.yul\":12284:12297   */\n      add\n        /* \"#utility.yul\":12277:12297   */\n      swap1\n      pop\n        /* \"#utility.yul\":12070:12303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12309:12409   */\n    tag_197:\n        /* \"#utility.yul\":12348:12355   */\n      0x00\n        /* \"#utility.yul\":12377:12403   */\n      tag_330\n        /* \"#utility.yul\":12397:12402   */\n      dup3\n        /* \"#utility.yul\":12377:12403   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12366:12403   */\n      swap1\n      pop\n        /* \"#utility.yul\":12309:12409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12415:12509   */\n    tag_331:\n        /* \"#utility.yul\":12454:12461   */\n      0x00\n        /* \"#utility.yul\":12483:12503   */\n      tag_333\n        /* \"#utility.yul\":12497:12502   */\n      dup3\n        /* \"#utility.yul\":12483:12503   */\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":12472:12503   */\n      swap1\n      pop\n        /* \"#utility.yul\":12415:12509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12515:12594   */\n    tag_253:\n        /* \"#utility.yul\":12554:12561   */\n      0x00\n        /* \"#utility.yul\":12583:12588   */\n      dup2\n        /* \"#utility.yul\":12572:12588   */\n      swap1\n      pop\n        /* \"#utility.yul\":12515:12594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12600:12776   */\n    tag_103:\n        /* \"#utility.yul\":12632:12633   */\n      0x00\n        /* \"#utility.yul\":12649:12669   */\n      tag_337\n        /* \"#utility.yul\":12667:12668   */\n      dup3\n        /* \"#utility.yul\":12649:12669   */\n      tag_248\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":12644:12669   */\n      swap2\n      pop\n        /* \"#utility.yul\":12683:12703   */\n      tag_338\n        /* \"#utility.yul\":12701:12702   */\n      dup4\n        /* \"#utility.yul\":12683:12703   */\n      tag_248\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":12678:12703   */\n      swap3\n      pop\n        /* \"#utility.yul\":12722:12723   */\n      dup3\n        /* \"#utility.yul\":12712:12747   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":12727:12745   */\n      tag_340\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12712:12747   */\n    tag_339:\n        /* \"#utility.yul\":12768:12769   */\n      dup3\n        /* \"#utility.yul\":12765:12766   */\n      dup3\n        /* \"#utility.yul\":12761:12770   */\n      mod\n        /* \"#utility.yul\":12756:12770   */\n      swap1\n      pop\n        /* \"#utility.yul\":12600:12776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12782:12962   */\n    tag_299:\n        /* \"#utility.yul\":12830:12907   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12827:12828   */\n      0x00\n        /* \"#utility.yul\":12820:12908   */\n      mstore\n        /* \"#utility.yul\":12927:12931   */\n      0x11\n        /* \"#utility.yul\":12924:12925   */\n      0x04\n        /* \"#utility.yul\":12917:12932   */\n      mstore\n        /* \"#utility.yul\":12951:12955   */\n      0x24\n        /* \"#utility.yul\":12948:12949   */\n      0x00\n        /* \"#utility.yul\":12941:12956   */\n      revert\n        /* \"#utility.yul\":12968:13148   */\n    tag_341:\n        /* \"#utility.yul\":13016:13093   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13013:13014   */\n      0x00\n        /* \"#utility.yul\":13006:13094   */\n      mstore\n        /* \"#utility.yul\":13113:13117   */\n      0x12\n        /* \"#utility.yul\":13110:13111   */\n      0x04\n        /* \"#utility.yul\":13103:13118   */\n      mstore\n        /* \"#utility.yul\":13137:13141   */\n      0x24\n        /* \"#utility.yul\":13134:13135   */\n      0x00\n        /* \"#utility.yul\":13127:13142   */\n      revert\n        /* \"#utility.yul\":13154:13334   */\n    tag_319:\n        /* \"#utility.yul\":13202:13279   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13199:13200   */\n      0x00\n        /* \"#utility.yul\":13192:13280   */\n      mstore\n        /* \"#utility.yul\":13299:13303   */\n      0x22\n        /* \"#utility.yul\":13296:13297   */\n      0x04\n        /* \"#utility.yul\":13289:13304   */\n      mstore\n        /* \"#utility.yul\":13323:13327   */\n      0x24\n        /* \"#utility.yul\":13320:13321   */\n      0x00\n        /* \"#utility.yul\":13313:13328   */\n      revert\n        /* \"#utility.yul\":13340:13520   */\n    tag_127:\n        /* \"#utility.yul\":13388:13465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13385:13386   */\n      0x00\n        /* \"#utility.yul\":13378:13466   */\n      mstore\n        /* \"#utility.yul\":13485:13489   */\n      0x32\n        /* \"#utility.yul\":13482:13483   */\n      0x04\n        /* \"#utility.yul\":13475:13490   */\n      mstore\n        /* \"#utility.yul\":13509:13513   */\n      0x24\n        /* \"#utility.yul\":13506:13507   */\n      0x00\n        /* \"#utility.yul\":13499:13514   */\n      revert\n        /* \"#utility.yul\":13526:13706   */\n    tag_123:\n        /* \"#utility.yul\":13574:13651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13571:13572   */\n      0x00\n        /* \"#utility.yul\":13564:13652   */\n      mstore\n        /* \"#utility.yul\":13671:13675   */\n      0x41\n        /* \"#utility.yul\":13668:13669   */\n      0x04\n        /* \"#utility.yul\":13661:13676   */\n      mstore\n        /* \"#utility.yul\":13695:13699   */\n      0x24\n        /* \"#utility.yul\":13692:13693   */\n      0x00\n        /* \"#utility.yul\":13685:13700   */\n      revert\n        /* \"#utility.yul\":13712:13895   */\n    tag_144:\n        /* \"#utility.yul\":13747:13750   */\n      0x00\n        /* \"#utility.yul\":13785:13786   */\n      0x03\n        /* \"#utility.yul\":13767:13783   */\n      returndatasize\n        /* \"#utility.yul\":13764:13787   */\n      gt\n        /* \"#utility.yul\":13761:13889   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":13823:13824   */\n      0x04\n        /* \"#utility.yul\":13820:13821   */\n      0x00\n        /* \"#utility.yul\":13817:13818   */\n      dup1\n        /* \"#utility.yul\":13802:13825   */\n      returndatacopy\n        /* \"#utility.yul\":13845:13879   */\n      tag_349\n        /* \"#utility.yul\":13876:13877   */\n      0x00\n        /* \"#utility.yul\":13870:13878   */\n      mload\n        /* \"#utility.yul\":13845:13879   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":13838:13879   */\n      swap1\n      pop\n        /* \"#utility.yul\":13761:13889   */\n    tag_348:\n        /* \"#utility.yul\":13712:13895   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14024:14141   */\n    tag_179:\n        /* \"#utility.yul\":14133:14134   */\n      0x00\n        /* \"#utility.yul\":14130:14131   */\n      dup1\n        /* \"#utility.yul\":14123:14135   */\n      revert\n        /* \"#utility.yul\":14147:14249   */\n    tag_211:\n        /* \"#utility.yul\":14188:14194   */\n      0x00\n        /* \"#utility.yul\":14239:14241   */\n      0x1f\n        /* \"#utility.yul\":14235:14242   */\n      not\n        /* \"#utility.yul\":14230:14232   */\n      0x1f\n        /* \"#utility.yul\":14223:14228   */\n      dup4\n        /* \"#utility.yul\":14219:14233   */\n      add\n        /* \"#utility.yul\":14215:14243   */\n      and\n        /* \"#utility.yul\":14205:14243   */\n      swap1\n      pop\n        /* \"#utility.yul\":14147:14249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14255:14349   */\n    tag_334:\n        /* \"#utility.yul\":14288:14296   */\n      0x00\n        /* \"#utility.yul\":14336:14341   */\n      dup2\n        /* \"#utility.yul\":14332:14334   */\n      0x60\n        /* \"#utility.yul\":14328:14342   */\n      shl\n        /* \"#utility.yul\":14307:14342   */\n      swap1\n      pop\n        /* \"#utility.yul\":14255:14349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14355:14461   */\n    tag_350:\n        /* \"#utility.yul\":14399:14407   */\n      0x00\n        /* \"#utility.yul\":14448:14453   */\n      dup2\n        /* \"#utility.yul\":14443:14446   */\n      0xe0\n        /* \"#utility.yul\":14439:14454   */\n      shr\n        /* \"#utility.yul\":14418:14454   */\n      swap1\n      pop\n        /* \"#utility.yul\":14355:14461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14467:14706   */\n    tag_224:\n        /* \"#utility.yul\":14607:14641   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":14603:14604   */\n      0x00\n        /* \"#utility.yul\":14595:14601   */\n      dup3\n        /* \"#utility.yul\":14591:14605   */\n      add\n        /* \"#utility.yul\":14584:14642   */\n      mstore\n        /* \"#utility.yul\":14676:14698   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":14671:14673   */\n      0x20\n        /* \"#utility.yul\":14663:14669   */\n      dup3\n        /* \"#utility.yul\":14659:14674   */\n      add\n        /* \"#utility.yul\":14652:14699   */\n      mstore\n        /* \"#utility.yul\":14467:14706   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14712:14939   */\n    tag_229:\n        /* \"#utility.yul\":14852:14886   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":14848:14849   */\n      0x00\n        /* \"#utility.yul\":14840:14846   */\n      dup3\n        /* \"#utility.yul\":14836:14850   */\n      add\n        /* \"#utility.yul\":14829:14887   */\n      mstore\n        /* \"#utility.yul\":14921:14931   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14916:14918   */\n      0x20\n        /* \"#utility.yul\":14908:14914   */\n      dup3\n        /* \"#utility.yul\":14904:14919   */\n      add\n        /* \"#utility.yul\":14897:14932   */\n      mstore\n        /* \"#utility.yul\":14712:14939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14945:15119   */\n    tag_234:\n        /* \"#utility.yul\":15085:15111   */\n      0x4f6e79784e6674204f776e65722063616e204163636573730000000000000000\n        /* \"#utility.yul\":15081:15082   */\n      0x00\n        /* \"#utility.yul\":15073:15079   */\n      dup3\n        /* \"#utility.yul\":15069:15083   */\n      add\n        /* \"#utility.yul\":15062:15112   */\n      mstore\n        /* \"#utility.yul\":14945:15119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15125:15293   */\n    tag_239:\n        /* \"#utility.yul\":15265:15285   */\n      0x436f6e7472616374206973205061757365640000000000000000000000000000\n        /* \"#utility.yul\":15261:15262   */\n      0x00\n        /* \"#utility.yul\":15253:15259   */\n      dup3\n        /* \"#utility.yul\":15249:15263   */\n      add\n        /* \"#utility.yul\":15242:15286   */\n      mstore\n        /* \"#utility.yul\":15125:15293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15299:15519   */\n    tag_244:\n        /* \"#utility.yul\":15439:15473   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":15435:15436   */\n      0x00\n        /* \"#utility.yul\":15427:15433   */\n      dup3\n        /* \"#utility.yul\":15423:15437   */\n      add\n        /* \"#utility.yul\":15416:15474   */\n      mstore\n        /* \"#utility.yul\":15508:15511   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15503:15505   */\n      0x20\n        /* \"#utility.yul\":15495:15501   */\n      dup3\n        /* \"#utility.yul\":15491:15506   */\n      add\n        /* \"#utility.yul\":15484:15512   */\n      mstore\n        /* \"#utility.yul\":15299:15519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15525:16236   */\n    tag_146:\n        /* \"#utility.yul\":15564:15567   */\n      0x00\n        /* \"#utility.yul\":15602:15606   */\n      0x44\n        /* \"#utility.yul\":15584:15600   */\n      returndatasize\n        /* \"#utility.yul\":15581:15607   */\n      lt\n        /* \"#utility.yul\":15578:15617   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":15610:15615   */\n      jump(tag_362)\n        /* \"#utility.yul\":15578:15617   */\n    tag_363:\n        /* \"#utility.yul\":15639:15659   */\n      tag_364\n      tag_288\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":15714:15715   */\n      0x04\n        /* \"#utility.yul\":15696:15712   */\n      returndatasize\n        /* \"#utility.yul\":15692:15716   */\n      sub\n        /* \"#utility.yul\":15689:15690   */\n      0x04\n        /* \"#utility.yul\":15683:15687   */\n      dup3\n        /* \"#utility.yul\":15668:15717   */\n      returndatacopy\n        /* \"#utility.yul\":15747:15751   */\n      dup1\n        /* \"#utility.yul\":15741:15752   */\n      mload\n        /* \"#utility.yul\":15846:15862   */\n      returndatasize\n        /* \"#utility.yul\":15839:15843   */\n      0x24\n        /* \"#utility.yul\":15831:15837   */\n      dup3\n        /* \"#utility.yul\":15827:15844   */\n      add\n        /* \"#utility.yul\":15824:15863   */\n      gt\n        /* \"#utility.yul\":15791:15809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15783:15789   */\n      dup3\n        /* \"#utility.yul\":15780:15810   */\n      gt\n        /* \"#utility.yul\":15764:15877   */\n      or\n        /* \"#utility.yul\":15761:15907   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":15892:15897   */\n      pop\n      pop\n      jump(tag_362)\n        /* \"#utility.yul\":15761:15907   */\n    tag_365:\n        /* \"#utility.yul\":15938:15944   */\n      dup1\n        /* \"#utility.yul\":15932:15936   */\n      dup3\n        /* \"#utility.yul\":15928:15945   */\n      add\n        /* \"#utility.yul\":15974:15977   */\n      dup1\n        /* \"#utility.yul\":15968:15978   */\n      mload\n        /* \"#utility.yul\":16001:16019   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15993:15999   */\n      dup2\n        /* \"#utility.yul\":15990:16020   */\n      gt\n        /* \"#utility.yul\":15987:16030   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":16023:16028   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_362)\n        /* \"#utility.yul\":15987:16030   */\n    tag_366:\n        /* \"#utility.yul\":16071:16077   */\n      dup1\n        /* \"#utility.yul\":16064:16068   */\n      0x20\n        /* \"#utility.yul\":16059:16062   */\n      dup4\n        /* \"#utility.yul\":16055:16069   */\n      add\n        /* \"#utility.yul\":16051:16078   */\n      add\n        /* \"#utility.yul\":16130:16131   */\n      0x04\n        /* \"#utility.yul\":16112:16128   */\n      returndatasize\n        /* \"#utility.yul\":16108:16132   */\n      sub\n        /* \"#utility.yul\":16102:16106   */\n      dup6\n        /* \"#utility.yul\":16098:16133   */\n      add\n        /* \"#utility.yul\":16093:16096   */\n      dup2\n        /* \"#utility.yul\":16090:16134   */\n      gt\n        /* \"#utility.yul\":16087:16144   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":16137:16142   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_362)\n        /* \"#utility.yul\":16087:16144   */\n    tag_367:\n        /* \"#utility.yul\":16154:16211   */\n      tag_368\n        /* \"#utility.yul\":16202:16208   */\n      dup3\n        /* \"#utility.yul\":16196:16200   */\n      0x20\n        /* \"#utility.yul\":16192:16209   */\n      add\n        /* \"#utility.yul\":16184:16190   */\n      dup6\n        /* \"#utility.yul\":16180:16210   */\n      add\n        /* \"#utility.yul\":16174:16178   */\n      dup7\n        /* \"#utility.yul\":16154:16211   */\n      tag_320\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":16227:16230   */\n      dup3\n        /* \"#utility.yul\":16220:16230   */\n      swap6\n      pop\n        /* \"#utility.yul\":15568:16236   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15525:16236   */\n    tag_362:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16242:16364   */\n    tag_171:\n        /* \"#utility.yul\":16315:16339   */\n      tag_370\n        /* \"#utility.yul\":16333:16338   */\n      dup2\n        /* \"#utility.yul\":16315:16339   */\n      tag_192\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":16308:16313   */\n      dup2\n        /* \"#utility.yul\":16305:16340   */\n      eq\n        /* \"#utility.yul\":16295:16358   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":16354:16355   */\n      0x00\n        /* \"#utility.yul\":16351:16352   */\n      dup1\n        /* \"#utility.yul\":16344:16356   */\n      revert\n        /* \"#utility.yul\":16295:16358   */\n    tag_371:\n        /* \"#utility.yul\":16242:16364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16370:16490   */\n    tag_175:\n        /* \"#utility.yul\":16442:16465   */\n      tag_373\n        /* \"#utility.yul\":16459:16464   */\n      dup2\n        /* \"#utility.yul\":16442:16465   */\n      tag_306\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":16435:16440   */\n      dup2\n        /* \"#utility.yul\":16432:16466   */\n      eq\n        /* \"#utility.yul\":16422:16484   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":16480:16481   */\n      0x00\n        /* \"#utility.yul\":16477:16478   */\n      dup1\n        /* \"#utility.yul\":16470:16482   */\n      revert\n        /* \"#utility.yul\":16422:16484   */\n    tag_374:\n        /* \"#utility.yul\":16370:16490   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d663b2c559fe779d3275054ae7631699ee9268ee648dd8731e197b5887e8afda64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_416": {
									"entryPoint": null,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:8"
															},
															"nodeType": "YulIf",
															"src": "262:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:8",
														"type": ""
													}
												],
												"src": "7:421:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:8"
															},
															"nodeType": "YulIf",
															"src": "531:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:8",
														"type": ""
													}
												],
												"src": "448:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:8"
															},
															"nodeType": "YulIf",
															"src": "906:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:8",
														"type": ""
													}
												],
												"src": "809:524:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:8",
														"type": ""
													}
												],
												"src": "1339:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:8",
														"type": ""
													}
												],
												"src": "1474:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:8"
															},
															"nodeType": "YulIf",
															"src": "1693:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:8",
														"type": ""
													}
												],
												"src": "1555:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:8",
																"statements": []
															},
															"src": "1947:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:8"
															},
															"nodeType": "YulIf",
															"src": "2069:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:8",
														"type": ""
													}
												],
												"src": "1869:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:8"
															},
															"nodeType": "YulIf",
															"src": "2321:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:8"
															},
															"nodeType": "YulIf",
															"src": "2412:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:8",
														"type": ""
													}
												],
												"src": "2182:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:8"
															},
															"nodeType": "YulIf",
															"src": "2664:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:8",
														"type": ""
													}
												],
												"src": "2508:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:8",
														"type": ""
													}
												],
												"src": "3659:102:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405180602001604052806000815250600290805190602001906200002b92919062000103565b506001600b60006101000a81548160ff0219169083151502179055503480156200005457600080fd5b5060405162001b0f38038062001b0f83398181016040528101906200007a9190620002c2565b80600c90805190602001906200009292919062000194565b5033600b60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060038190555060016004819055506000600581905550600060068190555060006007819055505062000497565b8280546200011190620003a8565b90600052602060002090601f01602090048101928262000135576000855562000181565b82601f106200015057805160ff191683800117855562000181565b8280016001018555821562000181579182015b828111156200018057825182559160200191906001019062000163565b5b50905062000190919062000225565b5090565b828054620001a290620003a8565b90600052602060002090601f016020900481019282620001c6576000855562000212565b82601f10620001e157805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000211578251825591602001919060010190620001f4565b5b50905062000221919062000225565b5090565b5b808211156200024057600081600090555060010162000226565b5090565b60006200025b62000255846200033c565b62000313565b9050828152602081018484840111156200027a576200027962000477565b5b6200028784828562000372565b509392505050565b600082601f830112620002a757620002a662000472565b5b8151620002b984826020860162000244565b91505092915050565b600060208284031215620002db57620002da62000481565b5b600082015167ffffffffffffffff811115620002fc57620002fb6200047c565b5b6200030a848285016200028f565b91505092915050565b60006200031f62000332565b90506200032d8282620003de565b919050565b6000604051905090565b600067ffffffffffffffff8211156200035a576200035962000443565b5b620003658262000486565b9050602081019050919050565b60005b838110156200039257808201518184015260208101905062000375565b83811115620003a2576000848401525b50505050565b60006002820490506001821680620003c157607f821691505b60208210811415620003d857620003d762000414565b5b50919050565b620003e98262000486565b810181811067ffffffffffffffff821117156200040b576200040a62000443565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61166880620004a76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637e1eaabf1161005b5780637e1eaabf146100dd578063b4a99a4e146100fb578063c63bc45614610119578063d4c892c41461013957610088565b80631309a5631461008d578063322f0ece146100ab5780635a8bc1a9146100c957806367818243146100d3575b600080fd5b610095610169565b6040516100a29190610f3e565b60405180910390f35b6100b361017c565b6040516100c0919061101b565b60405180910390f35b6100d1610182565b005b6100db610236565b005b6100e5610327565b6040516100f2919061101b565b60405180910390f35b61010361069f565b6040516101109190610ec9565b60405180910390f35b6101216106c5565b6040516101309392919061105f565b60405180910390f35b610153600480360381019061014e9190610cb8565b610775565b604051610160919061101b565b60405180910390f35b600b60009054906101000a900460ff1681565b60035481565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101c361078d565b73ffffffffffffffffffffffffffffffffffffffff1614610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610fbb565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661027761078d565b73ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490610fbb565b60405180910390fd5b60011515600b60009054906101000a900460ff1615151415610309576000600b60006101000a81548160ff021916908315150217905550610325565b6001600b60006101000a81548160ff0219169083151502179055505b565b6000801515600b60009054906101000a900460ff1615151461037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610fdb565b60405180910390fd5b6000610388610795565b905060966005541115801561039d5750600081145b806103b8575061015e600654111580156103b75750600181145b5b806103d357506101f4600754111580156103d25750600281145b5b15610537576103e0610795565b90506000811415610454576040518060400160405280600881526020017f506c6174696e756d00000000000000000000000000000000000000000000000081525060029080519060200190610436929190610beb565b506005600081548092919061044a9061124a565b9190505550610536565b60018114156104c6576040518060400160405280600481526020017f476f6c6400000000000000000000000000000000000000000000000000000000815250600290805190602001906104a8929190610beb565b50600660008154809291906104bc9061124a565b9190505550610535565b6002811415610534576040518060400160405280600681526020017f53696c76657200000000000000000000000000000000000000000000000000008152506002908051906020019061051a929190610beb565b506007600081548092919061052e9061124a565b91905055505b5b5b5b6105d661054261078d565b8260045460028054610553906111e7565b80601f016020809104026020016040519081016040528092919081815260200182805461057f906111e7565b80156105cc5780601f106105a1576101008083540402835291602001916105cc565b820191906000526020600020905b8154815290600101906020018083116105af57829003601f168201915b50505050506107d9565b6001600960006105e461078d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008154809291906106489061124a565b9190505550806008600061065a61078d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508091505090565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661070b61078d565b73ffffffffffffffffffffffffffffffffffffffff1614610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075890610fbb565b60405180910390fd5b600554600654600754925092509250909192565b60086020528060005260406000206000915090505481565b600033905090565b600080600342336040516020016107ad929190610e9d565b6040516020818303038152906040528051906020012060001c6107d091906112c1565b90508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090610ffb565b60405180910390fd5b600061085361078d565b9050610874816000876108658861096f565b61086e8861096f565b876109e9565b8260008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d391906110d8565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051610951929190611036565b60405180910390a4610968816000878787876109f1565b5050505050565b60606000600167ffffffffffffffff81111561098e5761098d6113ae565b5b6040519080825280602002602001820160405280156109bc5781602001602082028036833780820191505090505b50905082816000815181106109d4576109d361137f565b5b60200260200101818152505080915050919050565b505050505050565b610a108473ffffffffffffffffffffffffffffffffffffffff16610bd8565b15610bd0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610a56959493929190610ee4565b602060405180830381600087803b158015610a7057600080fd5b505af1925050508015610aa157506040513d601f19601f82011682018060405250810190610a9e9190610ce5565b60015b610b4757610aad6113dd565b806308c379a01415610b0a5750610ac261156e565b80610acd5750610b0c565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b019190610f59565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e90610f7b565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590610f9b565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054610bf7906111e7565b90600052602060002090601f016020900481019282610c195760008555610c60565b82601f10610c3257805160ff1916838001178555610c60565b82800160010185558215610c60579182015b82811115610c5f578251825591602001919060010190610c44565b5b509050610c6d9190610c71565b5090565b5b80821115610c8a576000816000905550600101610c72565b5090565b600081359050610c9d81611604565b92915050565b600081519050610cb28161161b565b92915050565b600060208284031215610cce57610ccd6113ff565b5b6000610cdc84828501610c8e565b91505092915050565b600060208284031215610cfb57610cfa6113ff565b5b6000610d0984828501610ca3565b91505092915050565b610d1b81611140565b82525050565b610d2a8161112e565b82525050565b610d41610d3c8261112e565b611293565b82525050565b610d5081611152565b82525050565b6000610d61826110a0565b610d6b81856110b6565b9350610d7b8185602086016111b4565b610d8481611404565b840191505092915050565b6000610d9a826110ab565b610da481856110c7565b9350610db48185602086016111b4565b610dbd81611404565b840191505092915050565b6000610dd56034836110c7565b9150610de08261142f565b604082019050919050565b6000610df86028836110c7565b9150610e038261147e565b604082019050919050565b6000610e1b6018836110c7565b9150610e26826114cd565b602082019050919050565b6000610e3e6012836110c7565b9150610e49826114f6565b602082019050919050565b6000610e616021836110c7565b9150610e6c8261151f565b604082019050919050565b610e80816111aa565b82525050565b610e97610e92826111aa565b6112b7565b82525050565b6000610ea98285610e86565b602082019150610eb98284610d30565b6014820191508190509392505050565b6000602082019050610ede6000830184610d12565b92915050565b600060a082019050610ef96000830188610d21565b610f066020830187610d21565b610f136040830186610e77565b610f206060830185610e77565b8181036080830152610f328184610d56565b90509695505050505050565b6000602082019050610f536000830184610d47565b92915050565b60006020820190508181036000830152610f738184610d8f565b905092915050565b60006020820190508181036000830152610f9481610dc8565b9050919050565b60006020820190508181036000830152610fb481610deb565b9050919050565b60006020820190508181036000830152610fd481610e0e565b9050919050565b60006020820190508181036000830152610ff481610e31565b9050919050565b6000602082019050818103600083015261101481610e54565b9050919050565b60006020820190506110306000830184610e77565b92915050565b600060408201905061104b6000830185610e77565b6110586020830184610e77565b9392505050565b60006060820190506110746000830186610e77565b6110816020830185610e77565b61108e6040830184610e77565b949350505050565b6000604051905090565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110e3826111aa565b91506110ee836111aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611123576111226112f2565b5b828201905092915050565b60006111398261118a565b9050919050565b600061114b8261118a565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156111d25780820151818401526020810190506111b7565b838111156111e1576000848401525b50505050565b600060028204905060018216806111ff57607f821691505b6020821081141561121357611212611350565b5b50919050565b61122282611404565b810181811067ffffffffffffffff82111715611241576112406113ae565b5b80604052505050565b6000611255826111aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611288576112876112f2565b5b600182019050919050565b600061129e826112a5565b9050919050565b60006112b082611415565b9050919050565b6000819050919050565b60006112cc826111aa565b91506112d7836111aa565b9250826112e7576112e6611321565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156113fc5760046000803e6113f9600051611422565b90505b90565b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f4f6e79784e6674204f776e65722063616e204163636573730000000000000000600082015250565b7f436f6e7472616374206973205061757365640000000000000000000000000000600082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d101561157e57611601565b611586611096565b60043d036004823e80513d602482011167ffffffffffffffff821117156115ae575050611601565b808201805167ffffffffffffffff8111156115cc5750505050611601565b80602083010160043d0385018111156115e9575050505050611601565b6115f882602001850186611219565b82955050505050505b90565b61160d8161112e565b811461161857600080fd5b50565b6116248161115e565b811461162f57600080fd5b5056fea2646970667358221220d663b2c559fe779d3275054ae7631699ee9268ee648dd8731e197b5887e8afda64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2B SWAP3 SWAP2 SWAP1 PUSH3 0x103 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B0F CODESIZE SUB DUP1 PUSH3 0x1B0F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x7A SWAP2 SWAP1 PUSH3 0x2C2 JUMP JUMPDEST DUP1 PUSH1 0xC SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x92 SWAP3 SWAP2 SWAP1 PUSH3 0x194 JUMP JUMPDEST POP CALLER PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP PUSH3 0x497 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x111 SWAP1 PUSH3 0x3A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x135 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x181 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x150 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x181 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x181 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x180 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x163 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x190 SWAP2 SWAP1 PUSH3 0x225 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1A2 SWAP1 PUSH3 0x3A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x212 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1E1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x212 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x212 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x211 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1F4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x221 SWAP2 SWAP1 PUSH3 0x225 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x240 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x226 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x25B PUSH3 0x255 DUP5 PUSH3 0x33C JUMP JUMPDEST PUSH3 0x313 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x27A JUMPI PUSH3 0x279 PUSH3 0x477 JUMP JUMPDEST JUMPDEST PUSH3 0x287 DUP5 DUP3 DUP6 PUSH3 0x372 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A7 JUMPI PUSH3 0x2A6 PUSH3 0x472 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x244 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2DB JUMPI PUSH3 0x2DA PUSH3 0x481 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2FC JUMPI PUSH3 0x2FB PUSH3 0x47C JUMP JUMPDEST JUMPDEST PUSH3 0x30A DUP5 DUP3 DUP6 ADD PUSH3 0x28F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31F PUSH3 0x332 JUMP JUMPDEST SWAP1 POP PUSH3 0x32D DUP3 DUP3 PUSH3 0x3DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x35A JUMPI PUSH3 0x359 PUSH3 0x443 JUMP JUMPDEST JUMPDEST PUSH3 0x365 DUP3 PUSH3 0x486 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x392 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x375 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x3A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3D8 JUMPI PUSH3 0x3D7 PUSH3 0x414 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E9 DUP3 PUSH3 0x486 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x40B JUMPI PUSH3 0x40A PUSH3 0x443 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1668 DUP1 PUSH3 0x4A7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1EAABF GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7E1EAABF EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xC63BC456 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD4C892C4 EQ PUSH2 0x139 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1309A563 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x322F0ECE EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x5A8BC1A9 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x67818243 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0x236 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C3 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x277 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x388 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP PUSH1 0x96 PUSH1 0x5 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST DUP1 PUSH2 0x3B8 JUMPI POP PUSH2 0x15E PUSH1 0x6 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI POP PUSH1 0x1 DUP2 EQ JUMPDEST JUMPDEST DUP1 PUSH2 0x3D3 JUMPI POP PUSH2 0x1F4 PUSH1 0x7 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x3D2 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x537 JUMPI PUSH2 0x3E0 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C6174696E756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x436 SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x44A SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F6C6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4BC SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x535 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696C7665720000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x52E SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5D6 PUSH2 0x542 PUSH2 0x78D JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x553 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x11E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x648 SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x65A PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x70B PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x853 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP PUSH2 0x874 DUP2 PUSH1 0x0 DUP8 PUSH2 0x865 DUP9 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x86E DUP9 PUSH2 0x96F JUMP JUMPDEST DUP8 PUSH2 0x9E9 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x951 SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x968 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9F1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x98E JUMPI PUSH2 0x98D PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9BC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9D4 JUMPI PUSH2 0x9D3 PUSH2 0x137F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA10 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD8 JUMP JUMPDEST ISZERO PUSH2 0xBD0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAA1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB47 JUMPI PUSH2 0xAAD PUSH2 0x13DD JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xB0A JUMPI POP PUSH2 0xAC2 PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH2 0xACD JUMPI POP PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3E SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xBF7 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xC19 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC60 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xC32 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC60 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC60 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC5F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC44 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC8A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xC72 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC9D DUP2 PUSH2 0x1604 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCB2 DUP2 PUSH2 0x161B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x13FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCDC DUP5 DUP3 DUP6 ADD PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0x13FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD09 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1B DUP2 PUSH2 0x1140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD2A DUP2 PUSH2 0x112E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD41 PUSH2 0xD3C DUP3 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD50 DUP2 PUSH2 0x1152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD61 DUP3 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0xD6B DUP2 DUP6 PUSH2 0x10B6 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0xDA4 DUP2 DUP6 PUSH2 0x10C7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xDBD DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 PUSH1 0x34 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP3 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF8 PUSH1 0x28 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP3 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH1 0x18 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE26 DUP3 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3E PUSH1 0x12 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE49 DUP3 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 PUSH1 0x21 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6C DUP3 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE97 PUSH2 0xE92 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x12B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA9 DUP3 DUP6 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xEB9 DUP3 DUP5 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xEF9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xF06 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xF13 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0xF20 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE77 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xF32 DUP2 DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF53 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 DUP5 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF94 DUP2 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB4 DUP2 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD4 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF4 DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1014 DUP2 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1030 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x104B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x1058 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1074 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x1081 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x108E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x10EE DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1123 JUMPI PUSH2 0x1122 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP3 PUSH2 0x118A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114B DUP3 PUSH2 0x118A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1213 JUMPI PUSH2 0x1212 PUSH2 0x1350 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP3 PUSH2 0x1404 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1255 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1288 JUMPI PUSH2 0x1287 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129E DUP3 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CC DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x12D7 DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12E7 JUMPI PUSH2 0x12E6 PUSH2 0x1321 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x13F9 PUSH1 0x0 MLOAD PUSH2 0x1422 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E79784E6674204F776E65722063616E204163636573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973205061757365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x157E JUMPI PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x1586 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15AE JUMPI POP POP PUSH2 0x1601 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CC JUMPI POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x15E9 JUMPI POP POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x15F8 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1219 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x160D DUP2 PUSH2 0x112E JUMP JUMPDEST DUP2 EQ PUSH2 0x1618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1624 DUP2 PUSH2 0x115E JUMP JUMPDEST DUP2 EQ PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH4 0xB2C559FE PUSH24 0x9D3275054AE7631699EE9268EE648DD8731E197B5887E8AF 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "122:2387:2:-:0;;;190:15;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;815:4;792:27;;;;;;;;;;;;;;;;;;;;891:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;941:4;933:5;:12;;;;;;;;;;;;:::i;:::-;;971:10;955:5;;:27;;;;;;;;;;;;;;;;;;1008:1;992:15;:17;;;;1048:1;1036:11;:13;;;;1105:1;1096:8;:10;;;;1133:1;1128:4;:6;;;;1151:1;1144:6;:8;;;;891:268;122:2387;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:8:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;122:2387:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@IsPaused_374": {
									"entryPoint": 361,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Owner_376": {
									"entryPoint": 1695,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SwitchSaleState_453": {
									"entryPoint": 566,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TotalNFTsMinted_329": {
									"entryPoint": 380,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_808": {
									"entryPoint": 2415,
									"id": 808,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_717": {
									"entryPoint": 2537,
									"id": 717,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_780": {
									"entryPoint": 2545,
									"id": 780,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_699": {
									"entryPoint": 2009,
									"id": 699,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": 1933,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkMintedCategory_433": {
									"entryPoint": 1733,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@dropsite_NFT_Owner_341": {
									"entryPoint": 1909,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finishDropsite_597": {
									"entryPoint": 386,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_19": {
									"entryPoint": 3032,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@randomMint_587": {
									"entryPoint": 807,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@random_478": {
									"entryPoint": 1941,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 3235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16493:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "239:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "233:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "281:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "255:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "255:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "255:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "192:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "200:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "208:5:8",
														"type": ""
													}
												],
												"src": "152:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "411:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "413:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "413:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "413:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "395:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "407:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:32:8"
															},
															"nodeType": "YulIf",
															"src": "375:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "504:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "519:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "533:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "523:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "548:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "583:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "594:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "579:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "579:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "603:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "558:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "548:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "335:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "346:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "358:6:8",
														"type": ""
													}
												],
												"src": "299:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "710:273:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "758:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "758:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "758:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "731:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "740:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "727:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "723:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:32:8"
															},
															"nodeType": "YulIf",
															"src": "720:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "849:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "864:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "868:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "893:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "938:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "949:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "934:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "958:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "903:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "893:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "680:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "691:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "703:6:8",
														"type": ""
													}
												],
												"src": "634:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1118:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1092:25:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:45:8"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1058:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1065:3:8",
														"type": ""
													}
												],
												"src": "989:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1219:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1242:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1224:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1212:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1190:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1197:3:8",
														"type": ""
													}
												],
												"src": "1137:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1344:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1361:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1404:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1386:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1386:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1366:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1354:58:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1332:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1339:3:8",
														"type": ""
													}
												],
												"src": "1261:157:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1500:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1520:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1505:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1505:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1493:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1471:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1478:3:8",
														"type": ""
													}
												],
												"src": "1424:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:270:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1639:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1685:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1653:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1643:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1700:77:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1765:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1707:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:70:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1812:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1819:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1808:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1826:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1831:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1786:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1786:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1847:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1858:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1863:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1863:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1847:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1610:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1617:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1625:3:8",
														"type": ""
													}
												],
												"src": "1539:360:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1997:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2007:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2054:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2021:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2011:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2069:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2135:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2140:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2076:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2182:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2189:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2196:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2201:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2156:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2217:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2228:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2255:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2233:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2224:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1978:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1985:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1993:3:8",
														"type": ""
													}
												],
												"src": "1905:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2421:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2431:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2497:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2438:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2603:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "2514:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2514:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2514:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2616:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2632:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2409:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2417:3:8",
														"type": ""
													}
												],
												"src": "2275:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2793:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2803:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2874:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2810:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2803:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2975:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "2886:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2886:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2886:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2988:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2999:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2988:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2781:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2789:3:8",
														"type": ""
													}
												],
												"src": "2647:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3165:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3175:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3241:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3246:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3182:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3175:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3347:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d",
																	"nodeType": "YulIdentifier",
																	"src": "3258:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3258:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3360:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3371:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3376:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3360:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3153:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3161:3:8",
														"type": ""
													}
												],
												"src": "3019:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3547:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3613:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3618:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3554:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3547:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3719:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9",
																	"nodeType": "YulIdentifier",
																	"src": "3630:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3630:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3732:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3743:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3748:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3739:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3525:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3533:3:8",
														"type": ""
													}
												],
												"src": "3391:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3909:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3919:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3985:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3990:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3926:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3919:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4091:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																	"nodeType": "YulIdentifier",
																	"src": "4002:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4002:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4002:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4104:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4115:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4120:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4104:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3897:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3905:3:8",
														"type": ""
													}
												],
												"src": "3763:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4200:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4217:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4240:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4222:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4222:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4210:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4188:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4195:3:8",
														"type": ""
													}
												],
												"src": "4135:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4342:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4359:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4402:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4384:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4384:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4364:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4364:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4352:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4352:58:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4330:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4337:3:8",
														"type": ""
													}
												],
												"src": "4259:157:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4566:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4639:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4648:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4577:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:75:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4577:75:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4661:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4672:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4661:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4752:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4761:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4690:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:75:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:75:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4774:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4785:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4774:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4803:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4810:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4537:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4543:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4551:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4562:3:8",
														"type": ""
													}
												],
												"src": "4422:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4939:140:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4949:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4949:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5045:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5058:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5069:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5054:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4985:59:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:87:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4985:87:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4911:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4923:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4934:4:8",
														"type": ""
													}
												],
												"src": "4825:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5313:523:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5323:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5335:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5323:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5404:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5428:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5413:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5360:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5360:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5360:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5485:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5498:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5509:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5441:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5441:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5441:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5567:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5580:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5591:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5576:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5576:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5523:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5523:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5649:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5662:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5673:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5658:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5658:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5605:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5605:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5698:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5709:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5694:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5719:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5725:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5687:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5687:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5745:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5824:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5753:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5745:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5253:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5265:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5273:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5281:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5289:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5297:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5308:4:8",
														"type": ""
													}
												],
												"src": "5085:751:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5934:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5956:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5967:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5944:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6018:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5980:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5980:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5980:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5906:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5918:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5929:4:8",
														"type": ""
													}
												],
												"src": "5842:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6176:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6186:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6198:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6186:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6233:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6244:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6229:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6229:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6252:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6258:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6248:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6222:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6278:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6350:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6359:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6286:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6278:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6148:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6160:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6171:4:8",
														"type": ""
													}
												],
												"src": "6058:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6548:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6558:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6570:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6581:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6558:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6605:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6616:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6601:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6601:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6624:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6630:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6620:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6594:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6594:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6594:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6650:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6784:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6658:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6650:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6528:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6543:4:8",
														"type": ""
													}
												],
												"src": "6377:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6973:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6983:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6995:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7006:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7030:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7041:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7049:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7045:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7019:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7019:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7075:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7209:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7083:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7075:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6953:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6968:4:8",
														"type": ""
													}
												],
												"src": "6802:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7398:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7408:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7420:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7431:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7416:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7408:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7455:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7466:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7451:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7480:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7470:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7470:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7500:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7634:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7508:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7500:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7378:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7393:4:8",
														"type": ""
													}
												],
												"src": "7227:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7823:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7833:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7845:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7833:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7880:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7891:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7899:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7895:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7925:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8059:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7933:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7925:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7803:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7818:4:8",
														"type": ""
													}
												],
												"src": "7652:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8248:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8258:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8270:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8281:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8266:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8266:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8258:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8305:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8316:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8301:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8324:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8330:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8320:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8320:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8294:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8294:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8350:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8484:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8358:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8350:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8243:4:8",
														"type": ""
													}
												],
												"src": "8077:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8600:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8610:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8622:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8633:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8618:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8618:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8610:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8690:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8714:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8646:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8572:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8584:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8595:4:8",
														"type": ""
													}
												],
												"src": "8502:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8856:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8866:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8878:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8889:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8874:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8866:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8946:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8959:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8970:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8955:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8902:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8902:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9027:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9040:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9051:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9036:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8983:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8983:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8820:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8832:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8840:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8851:4:8",
														"type": ""
													}
												],
												"src": "8730:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9222:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9232:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9244:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9255:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9240:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9232:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9312:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9325:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9336:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9321:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9268:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9268:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9268:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9406:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9417:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9402:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9402:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9349:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9349:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9475:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9488:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9499:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9484:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9484:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9431:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9431:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9178:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9190:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9198:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9206:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9217:4:8",
														"type": ""
													}
												],
												"src": "9068:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9556:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9566:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9582:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9576:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9576:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9566:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9549:6:8",
														"type": ""
													}
												],
												"src": "9516:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9655:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9666:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9682:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9676:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9676:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9666:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9638:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9648:6:8",
														"type": ""
													}
												],
												"src": "9597:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9760:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9771:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9787:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9781:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9771:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9743:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9753:6:8",
														"type": ""
													}
												],
												"src": "9701:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9901:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9918:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9923:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9911:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9939:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9958:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9954:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9939:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9873:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9878:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9889:11:8",
														"type": ""
													}
												],
												"src": "9806:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10076:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10093:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10098:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10086:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10086:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10086:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10114:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10133:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10138:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10129:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10129:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10114:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10048:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10053:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10064:11:8",
														"type": ""
													}
												],
												"src": "9980:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10199:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10209:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10232:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10214:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10214:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10209:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10243:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10266:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10248:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10248:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10243:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10406:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10408:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10408:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10408:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10327:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10334:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10402:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10330:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10324:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:81:8"
															},
															"nodeType": "YulIf",
															"src": "10321:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10438:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10449:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10452:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10445:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10445:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10438:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10186:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10189:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10195:3:8",
														"type": ""
													}
												],
												"src": "10155:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10503:7:8",
														"type": ""
													}
												],
												"src": "10466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10621:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10631:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10660:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10642:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10631:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10603:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10613:7:8",
														"type": ""
													}
												],
												"src": "10568:104:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10720:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10730:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10755:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10748:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10748:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10741:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10730:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10702:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10712:7:8",
														"type": ""
													}
												],
												"src": "10678:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10818:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10828:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10843:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10850:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10839:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10828:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10800:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10810:7:8",
														"type": ""
													}
												],
												"src": "10774:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10974:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10984:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10999:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11006:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10995:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10995:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10984:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10956:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10966:7:8",
														"type": ""
													}
												],
												"src": "10929:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11106:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11116:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11127:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11116:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11088:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11098:7:8",
														"type": ""
													}
												],
												"src": "11061:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11193:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11203:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11212:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11207:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11272:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11297:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11302:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11293:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11293:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11316:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11321:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11312:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11312:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11306:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11306:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11286:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11286:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11286:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11233:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11236:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11230:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11244:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11246:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11255:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11258:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11251:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11251:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11246:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11226:3:8",
																"statements": []
															},
															"src": "11222:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11369:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11419:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11424:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11415:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11415:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11433:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11408:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11408:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11408:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11350:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11353:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11347:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11347:13:8"
															},
															"nodeType": "YulIf",
															"src": "11344:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11175:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11185:6:8",
														"type": ""
													}
												],
												"src": "11144:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11508:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11518:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11532:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11538:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11518:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11549:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11579:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11585:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11575:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11553:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11626:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11640:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11654:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11662:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11650:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11650:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11640:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11606:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11599:26:8"
															},
															"nodeType": "YulIf",
															"src": "11596:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11729:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11743:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11743:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11743:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11693:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11716:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11724:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11713:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11713:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11690:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11690:38:8"
															},
															"nodeType": "YulIf",
															"src": "11687:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11492:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11501:6:8",
														"type": ""
													}
												],
												"src": "11457:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11826:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11836:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "11858:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "11888:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11866:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11866:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11854:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "11840:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12005:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12007:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12007:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12007:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11948:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11960:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11945:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11945:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11984:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11996:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11981:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11981:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11942:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11942:62:8"
															},
															"nodeType": "YulIf",
															"src": "11939:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12043:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12047:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12036:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12036:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12036:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11812:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11820:4:8",
														"type": ""
													}
												],
												"src": "11783:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12113:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12123:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12150:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12132:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12132:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12123:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12246:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12248:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12248:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12248:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12171:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12178:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12168:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12168:77:8"
															},
															"nodeType": "YulIf",
															"src": "12165:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12277:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12288:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12295:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12284:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12284:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12277:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12099:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12109:3:8",
														"type": ""
													}
												],
												"src": "12070:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12356:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12366:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12397:5:8"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12377:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12377:26:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "12366:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12338:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "12348:7:8",
														"type": ""
													}
												],
												"src": "12309:100:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12462:47:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12472:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12497:5:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "12483:13:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12483:20:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "12472:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12444:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "12454:7:8",
														"type": ""
													}
												],
												"src": "12415:94:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12562:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12572:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12583:5:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "12572:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12544:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "12554:7:8",
														"type": ""
													}
												],
												"src": "12515:79:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12634:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12644:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12667:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12649:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12644:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12678:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12701:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12683:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12683:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12678:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12725:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12727:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12727:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12727:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12722:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12715:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12715:9:8"
															},
															"nodeType": "YulIf",
															"src": "12712:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12756:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12765:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12768:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12761:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12761:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12756:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12623:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12626:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12632:1:8",
														"type": ""
													}
												],
												"src": "12600:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12810:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12827:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12830:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12820:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12820:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12820:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12927:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12917:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12917:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12917:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12951:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12941:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12941:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12941:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12782:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12996:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13013:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13016:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13006:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13006:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13006:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13110:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13113:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13103:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13103:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13134:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13137:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13127:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13127:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12968:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13182:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13199:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13202:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13192:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13192:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13296:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13299:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13289:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13289:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13289:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13320:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13323:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13313:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13313:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13313:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13154:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13368:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13385:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13388:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13378:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13378:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13378:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13482:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13485:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13475:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13475:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13475:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13506:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13509:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13499:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13499:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13499:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13340:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13554:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13571:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13574:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13564:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13564:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13671:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13661:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13661:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13692:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13685:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13685:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13526:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13751:144:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13788:101:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13817:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13820:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13823:1:8",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "13802:14:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13802:23:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13802:23:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13838:41:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13876:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13870:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13870:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "13845:24:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13845:34:8"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "13838:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13767:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13767:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13785:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13764:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13764:23:8"
															},
															"nodeType": "YulIf",
															"src": "13761:128:8"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "13747:3:8",
														"type": ""
													}
												],
												"src": "13712:183:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13990:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14007:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14010:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14000:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14000:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14000:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13901:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14113:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14130:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14133:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14123:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14123:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14024:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14195:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14205:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14223:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14230:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14219:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14219:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14239:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14235:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14215:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14215:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14205:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14178:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14188:6:8",
														"type": ""
													}
												],
												"src": "14147:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14297:52:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14307:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14332:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14336:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "14328:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14328:14:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "14307:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14278:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "14288:8:8",
														"type": ""
													}
												],
												"src": "14255:94:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14408:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14418:36:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14443:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14448:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14439:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14439:15:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "14418:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14389:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "14399:8:8",
														"type": ""
													}
												],
												"src": "14355:106:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14573:133:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14595:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14603:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14591:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14591:14:8"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14607:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14584:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14584:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14584:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14663:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14671:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14659:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14659:15:8"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14676:22:8",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14652:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14652:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14565:6:8",
														"type": ""
													}
												],
												"src": "14467:239:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14818:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14840:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14848:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14836:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14836:14:8"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14852:34:8",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14829:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14829:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14908:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14916:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14904:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14904:15:8"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14921:10:8",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14897:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14897:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14897:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14810:6:8",
														"type": ""
													}
												],
												"src": "14712:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15051:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15073:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15081:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15069:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15069:14:8"
																	},
																	{
																		"hexValue": "4f6e79784e6674204f776e65722063616e20416363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15085:26:8",
																		"type": "",
																		"value": "OnyxNft Owner can Access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15062:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15062:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15062:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15043:6:8",
														"type": ""
													}
												],
												"src": "14945:174:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15231:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15253:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15261:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15249:14:8"
																	},
																	{
																		"hexValue": "436f6e747261637420697320506175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15265:20:8",
																		"type": "",
																		"value": "Contract is Paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15242:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15223:6:8",
														"type": ""
													}
												],
												"src": "15125:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15405:114:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15427:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15435:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15423:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15423:14:8"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15439:34:8",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15416:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15416:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15416:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15495:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15503:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15491:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15491:15:8"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15508:3:8",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15484:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15484:28:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15484:28:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15397:6:8",
														"type": ""
													}
												],
												"src": "15299:220:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15568:668:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15608:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15610:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15584:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15584:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15602:4:8",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15581:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15581:26:8"
															},
															"nodeType": "YulIf",
															"src": "15578:39:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15627:32:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "15639:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15639:20:8"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15631:4:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15683:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15689:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15696:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15696:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15714:1:8",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15692:24:8"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15668:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15668:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15668:49:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15727:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15747:4:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15741:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15741:11:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15731:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15878:29:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15892:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15783:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15791:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15780:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15780:30:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15831:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15839:4:8",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15827:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15827:17:8"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15846:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15846:16:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15824:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15824:39:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15764:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15764:113:8"
															},
															"nodeType": "YulIf",
															"src": "15761:146:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15917:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15932:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15938:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15928:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15928:17:8"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15921:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15954:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15974:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15968:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15968:10:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15958:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16021:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16023:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15993:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16001:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15990:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15990:30:8"
															},
															"nodeType": "YulIf",
															"src": "15987:43:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16040:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "16059:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16064:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16055:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16055:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16071:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16051:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16051:27:8"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "16044:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16135:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16137:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "16093:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "16102:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16112:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16112:16:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16130:1:8",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "16108:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16108:24:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16098:35:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16090:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16090:44:8"
															},
															"nodeType": "YulIf",
															"src": "16087:57:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16174:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16184:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16196:4:8",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16202:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16192:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16192:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16180:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16180:30:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16154:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16154:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16154:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16220:10:8",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16227:3:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16220:3:8"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15564:3:8",
														"type": ""
													}
												],
												"src": "15525:711:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16285:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16342:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16351:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16354:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16344:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16344:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16344:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16308:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16333:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "16315:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16315:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16305:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16305:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16298:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16298:43:8"
															},
															"nodeType": "YulIf",
															"src": "16295:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16278:5:8",
														"type": ""
													}
												],
												"src": "16242:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16412:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16468:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16477:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16480:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16470:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16470:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16470:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16435:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16459:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "16442:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16442:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16432:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16432:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16425:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16425:42:8"
															},
															"nodeType": "YulIf",
															"src": "16422:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16405:5:8",
														"type": ""
													}
												],
												"src": "16370:120:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnyxNft Owner can Access\")\n\n    }\n\n    function store_literal_in_memory_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract is Paused\")\n\n    }\n\n    function store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: mint to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80637e1eaabf1161005b5780637e1eaabf146100dd578063b4a99a4e146100fb578063c63bc45614610119578063d4c892c41461013957610088565b80631309a5631461008d578063322f0ece146100ab5780635a8bc1a9146100c957806367818243146100d3575b600080fd5b610095610169565b6040516100a29190610f3e565b60405180910390f35b6100b361017c565b6040516100c0919061101b565b60405180910390f35b6100d1610182565b005b6100db610236565b005b6100e5610327565b6040516100f2919061101b565b60405180910390f35b61010361069f565b6040516101109190610ec9565b60405180910390f35b6101216106c5565b6040516101309392919061105f565b60405180910390f35b610153600480360381019061014e9190610cb8565b610775565b604051610160919061101b565b60405180910390f35b600b60009054906101000a900460ff1681565b60035481565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101c361078d565b73ffffffffffffffffffffffffffffffffffffffff1614610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610fbb565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661027761078d565b73ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490610fbb565b60405180910390fd5b60011515600b60009054906101000a900460ff1615151415610309576000600b60006101000a81548160ff021916908315150217905550610325565b6001600b60006101000a81548160ff0219169083151502179055505b565b6000801515600b60009054906101000a900460ff1615151461037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610fdb565b60405180910390fd5b6000610388610795565b905060966005541115801561039d5750600081145b806103b8575061015e600654111580156103b75750600181145b5b806103d357506101f4600754111580156103d25750600281145b5b15610537576103e0610795565b90506000811415610454576040518060400160405280600881526020017f506c6174696e756d00000000000000000000000000000000000000000000000081525060029080519060200190610436929190610beb565b506005600081548092919061044a9061124a565b9190505550610536565b60018114156104c6576040518060400160405280600481526020017f476f6c6400000000000000000000000000000000000000000000000000000000815250600290805190602001906104a8929190610beb565b50600660008154809291906104bc9061124a565b9190505550610535565b6002811415610534576040518060400160405280600681526020017f53696c76657200000000000000000000000000000000000000000000000000008152506002908051906020019061051a929190610beb565b506007600081548092919061052e9061124a565b91905055505b5b5b5b6105d661054261078d565b8260045460028054610553906111e7565b80601f016020809104026020016040519081016040528092919081815260200182805461057f906111e7565b80156105cc5780601f106105a1576101008083540402835291602001916105cc565b820191906000526020600020905b8154815290600101906020018083116105af57829003601f168201915b50505050506107d9565b6001600960006105e461078d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008154809291906106489061124a565b9190505550806008600061065a61078d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508091505090565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661070b61078d565b73ffffffffffffffffffffffffffffffffffffffff1614610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075890610fbb565b60405180910390fd5b600554600654600754925092509250909192565b60086020528060005260406000206000915090505481565b600033905090565b600080600342336040516020016107ad929190610e9d565b6040516020818303038152906040528051906020012060001c6107d091906112c1565b90508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090610ffb565b60405180910390fd5b600061085361078d565b9050610874816000876108658861096f565b61086e8861096f565b876109e9565b8260008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d391906110d8565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051610951929190611036565b60405180910390a4610968816000878787876109f1565b5050505050565b60606000600167ffffffffffffffff81111561098e5761098d6113ae565b5b6040519080825280602002602001820160405280156109bc5781602001602082028036833780820191505090505b50905082816000815181106109d4576109d361137f565b5b60200260200101818152505080915050919050565b505050505050565b610a108473ffffffffffffffffffffffffffffffffffffffff16610bd8565b15610bd0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610a56959493929190610ee4565b602060405180830381600087803b158015610a7057600080fd5b505af1925050508015610aa157506040513d601f19601f82011682018060405250810190610a9e9190610ce5565b60015b610b4757610aad6113dd565b806308c379a01415610b0a5750610ac261156e565b80610acd5750610b0c565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b019190610f59565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e90610f7b565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590610f9b565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054610bf7906111e7565b90600052602060002090601f016020900481019282610c195760008555610c60565b82601f10610c3257805160ff1916838001178555610c60565b82800160010185558215610c60579182015b82811115610c5f578251825591602001919060010190610c44565b5b509050610c6d9190610c71565b5090565b5b80821115610c8a576000816000905550600101610c72565b5090565b600081359050610c9d81611604565b92915050565b600081519050610cb28161161b565b92915050565b600060208284031215610cce57610ccd6113ff565b5b6000610cdc84828501610c8e565b91505092915050565b600060208284031215610cfb57610cfa6113ff565b5b6000610d0984828501610ca3565b91505092915050565b610d1b81611140565b82525050565b610d2a8161112e565b82525050565b610d41610d3c8261112e565b611293565b82525050565b610d5081611152565b82525050565b6000610d61826110a0565b610d6b81856110b6565b9350610d7b8185602086016111b4565b610d8481611404565b840191505092915050565b6000610d9a826110ab565b610da481856110c7565b9350610db48185602086016111b4565b610dbd81611404565b840191505092915050565b6000610dd56034836110c7565b9150610de08261142f565b604082019050919050565b6000610df86028836110c7565b9150610e038261147e565b604082019050919050565b6000610e1b6018836110c7565b9150610e26826114cd565b602082019050919050565b6000610e3e6012836110c7565b9150610e49826114f6565b602082019050919050565b6000610e616021836110c7565b9150610e6c8261151f565b604082019050919050565b610e80816111aa565b82525050565b610e97610e92826111aa565b6112b7565b82525050565b6000610ea98285610e86565b602082019150610eb98284610d30565b6014820191508190509392505050565b6000602082019050610ede6000830184610d12565b92915050565b600060a082019050610ef96000830188610d21565b610f066020830187610d21565b610f136040830186610e77565b610f206060830185610e77565b8181036080830152610f328184610d56565b90509695505050505050565b6000602082019050610f536000830184610d47565b92915050565b60006020820190508181036000830152610f738184610d8f565b905092915050565b60006020820190508181036000830152610f9481610dc8565b9050919050565b60006020820190508181036000830152610fb481610deb565b9050919050565b60006020820190508181036000830152610fd481610e0e565b9050919050565b60006020820190508181036000830152610ff481610e31565b9050919050565b6000602082019050818103600083015261101481610e54565b9050919050565b60006020820190506110306000830184610e77565b92915050565b600060408201905061104b6000830185610e77565b6110586020830184610e77565b9392505050565b60006060820190506110746000830186610e77565b6110816020830185610e77565b61108e6040830184610e77565b949350505050565b6000604051905090565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110e3826111aa565b91506110ee836111aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611123576111226112f2565b5b828201905092915050565b60006111398261118a565b9050919050565b600061114b8261118a565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156111d25780820151818401526020810190506111b7565b838111156111e1576000848401525b50505050565b600060028204905060018216806111ff57607f821691505b6020821081141561121357611212611350565b5b50919050565b61122282611404565b810181811067ffffffffffffffff82111715611241576112406113ae565b5b80604052505050565b6000611255826111aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611288576112876112f2565b5b600182019050919050565b600061129e826112a5565b9050919050565b60006112b082611415565b9050919050565b6000819050919050565b60006112cc826111aa565b91506112d7836111aa565b9250826112e7576112e6611321565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156113fc5760046000803e6113f9600051611422565b90505b90565b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f4f6e79784e6674204f776e65722063616e204163636573730000000000000000600082015250565b7f436f6e7472616374206973205061757365640000000000000000000000000000600082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d101561157e57611601565b611586611096565b60043d036004823e80513d602482011167ffffffffffffffff821117156115ae575050611601565b808201805167ffffffffffffffff8111156115cc5750505050611601565b80602083010160043d0385018111156115e9575050505050611601565b6115f882602001850186611219565b82955050505050505b90565b61160d8161112e565b811461161857600080fd5b50565b6116248161115e565b811461162f57600080fd5b5056fea2646970667358221220d663b2c559fe779d3275054ae7631699ee9268ee648dd8731e197b5887e8afda64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1EAABF GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7E1EAABF EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xC63BC456 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD4C892C4 EQ PUSH2 0x139 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1309A563 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x322F0ECE EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x5A8BC1A9 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x67818243 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0x236 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C3 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x277 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x388 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP PUSH1 0x96 PUSH1 0x5 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST DUP1 PUSH2 0x3B8 JUMPI POP PUSH2 0x15E PUSH1 0x6 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI POP PUSH1 0x1 DUP2 EQ JUMPDEST JUMPDEST DUP1 PUSH2 0x3D3 JUMPI POP PUSH2 0x1F4 PUSH1 0x7 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x3D2 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x537 JUMPI PUSH2 0x3E0 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C6174696E756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x436 SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x44A SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F6C6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4BC SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x535 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696C7665720000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x52E SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5D6 PUSH2 0x542 PUSH2 0x78D JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x553 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x11E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x648 SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x65A PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x70B PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x853 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP PUSH2 0x874 DUP2 PUSH1 0x0 DUP8 PUSH2 0x865 DUP9 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x86E DUP9 PUSH2 0x96F JUMP JUMPDEST DUP8 PUSH2 0x9E9 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x951 SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x968 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9F1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x98E JUMPI PUSH2 0x98D PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9BC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9D4 JUMPI PUSH2 0x9D3 PUSH2 0x137F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA10 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD8 JUMP JUMPDEST ISZERO PUSH2 0xBD0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAA1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB47 JUMPI PUSH2 0xAAD PUSH2 0x13DD JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xB0A JUMPI POP PUSH2 0xAC2 PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH2 0xACD JUMPI POP PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3E SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xBF7 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xC19 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC60 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xC32 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC60 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC60 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC5F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC44 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC8A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xC72 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC9D DUP2 PUSH2 0x1604 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCB2 DUP2 PUSH2 0x161B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x13FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCDC DUP5 DUP3 DUP6 ADD PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0x13FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD09 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1B DUP2 PUSH2 0x1140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD2A DUP2 PUSH2 0x112E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD41 PUSH2 0xD3C DUP3 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD50 DUP2 PUSH2 0x1152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD61 DUP3 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0xD6B DUP2 DUP6 PUSH2 0x10B6 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0xDA4 DUP2 DUP6 PUSH2 0x10C7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xDBD DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 PUSH1 0x34 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP3 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF8 PUSH1 0x28 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP3 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH1 0x18 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE26 DUP3 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3E PUSH1 0x12 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE49 DUP3 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 PUSH1 0x21 DUP4 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6C DUP3 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE97 PUSH2 0xE92 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x12B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA9 DUP3 DUP6 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xEB9 DUP3 DUP5 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xEF9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xF06 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xF13 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0xF20 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE77 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xF32 DUP2 DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF53 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 DUP5 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF94 DUP2 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB4 DUP2 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD4 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF4 DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1014 DUP2 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1030 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x104B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x1058 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1074 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x1081 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x108E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x10EE DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1123 JUMPI PUSH2 0x1122 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP3 PUSH2 0x118A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114B DUP3 PUSH2 0x118A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1213 JUMPI PUSH2 0x1212 PUSH2 0x1350 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP3 PUSH2 0x1404 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1255 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1288 JUMPI PUSH2 0x1287 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129E DUP3 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CC DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x12D7 DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12E7 JUMPI PUSH2 0x12E6 PUSH2 0x1321 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x13F9 PUSH1 0x0 MLOAD PUSH2 0x1422 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E79784E6674204F776E65722063616E204163636573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973205061757365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x157E JUMPI PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x1586 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15AE JUMPI POP POP PUSH2 0x1601 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CC JUMPI POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x15E9 JUMPI POP POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x15F8 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1219 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x160D DUP2 PUSH2 0x112E JUMP JUMPDEST DUP2 EQ PUSH2 0x1618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1624 DUP2 PUSH2 0x115E JUMP JUMPDEST DUP2 EQ PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH4 0xB2C559FE PUSH24 0x9D3275054AE7631699EE9268EE648DD8731E197B5887E8AF 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "122:2387:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;792:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;212;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2434:72;;;:::i;:::-;;1301:176;;;:::i;:::-;;1669:760;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1171:124;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;406:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:27;;;;;;;;;;;;;:::o;212:::-;;;;:::o;2434:72::-;578:5;;;;;;;;;;;562:21;;:12;:10;:12::i;:::-;:21;;;554:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2495:4:::1;2486:8;;:13;;;;;;;;;;;;;;;;;;2434:72::o:0;1301:176::-;578:5;;;;;;;;;;;562:21;;:12;:10;:12::i;:::-;:21;;;554:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1371:4:::1;1359:16;;:8;;;;;;;;;;;:16;;;1355:116;;;1401:5;1390:8;;:16;;;;;;;;;;;;;;;;;;1355:116;;;1456:4;1445:8;;:15;;;;;;;;;;;;;;;;;;1355:116;1301:176::o:0;1669:760::-;1727:4;738:5;726:17;;:8;;;;;;;;;;;:17;;;717:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1743:10:::1;1756:8;:6;:8::i;:::-;1743:21;;1784:3;1774:8;;:13;;:25;;;;;1798:1;1791:5;:8;1774:25;1773:54;;;;1811:3;1805:4;;:9;;:21;;;;;1825:1;1818:5;:8;1805:21;1773:54;:83;;;;1840:3;1832:6;;:11;;:23;;;;;1854:1;1847:5;:8;1832:23;1773:83;1770:477;;;1888:8;:6;:8::i;:::-;1880:16;;1920:1;1913:5;:8;1910:327;;;1953:15;;;;;;;;;;;;;;;;::::0;:4:::1;:15;;;;;;;;;;;;:::i;:::-;;1986:8;;:10;;;;;;;;;:::i;:::-;;;;;;1910:327;;;2039:1;2032:5;:8;2029:208;;;2072:11;;;;;;;;;;;;;;;;::::0;:4:::1;:11;;;;;;;;;;;;:::i;:::-;;2101:4;;:6;;;;;;;;;:::i;:::-;;;;;;2029:208;;;2150:1;2143:5;:8;2140:97;;;2183:13;;;;;;;;;;;;;;;;::::0;:4:::1;:13;;;;;;;;;;;;:::i;:::-;;2214:6;;:8;;;;;;;;;:::i;:::-;;;;;;2140:97;2029:208;1910:327;1770:477;2258:45;2264:12;:10;:12::i;:::-;2278:5;2285:11;;2298:4;2258:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:45::i;:::-;2333:4;2309:9;:23;2319:12;:10;:12::i;:::-;2309:23;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2343:15;;:17;;;;;;;;;:::i;:::-;;;;;;2399:5;2366:18;:32;2385:12;:10;:12::i;:::-;2366:32;;;;;;;;;;;;;;;:38;;;;2417:5;2410:12;;;1669:760:::0;:::o;825:29::-;;;;;;;;;;;;;:::o;1171:124::-;1232:4;1237;1242;578:5;;;;;;;;;;;562:21;;:12;:10;:12::i;:::-;:21;;;554:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1266:8:::1;;1275:4;;1280:6;;1258:29;;;;;;1171:124:::0;;;:::o;406:49::-;;;;;;;;;;;;;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;1487:171:2:-;1528:4;1540:17;1625:1;1592:15;1609:10;1575:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1565:56;;;;;;1560:62;;:66;;;;:::i;:::-;1540:86;;1639:12;1632:19;;;1487:171;:::o;835:551:3:-;996:1;982:16;;:2;:16;;;;974:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1047:16;1066:12;:10;:12::i;:::-;1047:31;;1089:102;1110:8;1128:1;1132:2;1136:21;1154:2;1136:17;:21::i;:::-;1159:25;1177:6;1159:17;:25::i;:::-;1186:4;1089:20;:102::i;:::-;1222:6;1201:9;:13;1211:2;1201:13;;;;;;;;;;;:17;1215:2;1201:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;1280:2;1243:52;;1276:1;1243:52;;1258:8;1243:52;;;1284:2;1288:6;1243:52;;;;;;;:::i;:::-;;;;;;;;1305:74;1336:8;1354:1;1358:2;1362;1366:6;1374:4;1305:30;:74::i;:::-;964:422;835:551;;;;:::o;2344:193::-;2410:16;2438:22;2477:1;2463:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:41;;2500:7;2489:5;2495:1;2489:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;2525:5;2518:12;;;2344:193;;;:::o;1393:214::-;;;;;;;:::o;1613:725::-;1820:15;:2;:13;;;:15::i;:::-;1816:516;;;1872:2;1855:38;;;1894:8;1904:4;1910:2;1914:6;1922:4;1855:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1851:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2198:6;2191:14;;;;;;;;;;;:::i;:::-;;;;;;;;1851:471;;;2245:62;;;;;;;;;;:::i;:::-;;;;;;;;1851:471;1988:43;;;1976:55;;;:8;:55;;;;1972:152;;2055:50;;;;;;;;;;:::i;:::-;;;;;;;;1972:152;1928:210;1816:516;1613:725;;;;;;:::o;771:377:0:-;831:4;1034:12;1099:7;1087:20;1079:28;;1140:1;1133:4;:8;1126:15;;;771:377;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:141::-;208:5;239:6;233:13;224:22;;255:32;281:5;255:32;:::i;:::-;152:141;;;;:::o;299:329::-;358:6;407:2;395:9;386:7;382:23;378:32;375:119;;;413:79;;:::i;:::-;375:119;533:1;558:53;603:7;594:6;583:9;579:22;558:53;:::i;:::-;548:63;;504:117;299:329;;;;:::o;634:349::-;703:6;752:2;740:9;731:7;727:23;723:32;720:119;;;758:79;;:::i;:::-;720:119;878:1;903:63;958:7;949:6;938:9;934:22;903:63;:::i;:::-;893:73;;849:127;634:349;;;;:::o;989:142::-;1092:32;1118:5;1092:32;:::i;:::-;1087:3;1080:45;989:142;;:::o;1137:118::-;1224:24;1242:5;1224:24;:::i;:::-;1219:3;1212:37;1137:118;;:::o;1261:157::-;1366:45;1386:24;1404:5;1386:24;:::i;:::-;1366:45;:::i;:::-;1361:3;1354:58;1261:157;;:::o;1424:109::-;1505:21;1520:5;1505:21;:::i;:::-;1500:3;1493:34;1424:109;;:::o;1539:360::-;1625:3;1653:38;1685:5;1653:38;:::i;:::-;1707:70;1770:6;1765:3;1707:70;:::i;:::-;1700:77;;1786:52;1831:6;1826:3;1819:4;1812:5;1808:16;1786:52;:::i;:::-;1863:29;1885:6;1863:29;:::i;:::-;1858:3;1854:39;1847:46;;1629:270;1539:360;;;;:::o;1905:364::-;1993:3;2021:39;2054:5;2021:39;:::i;:::-;2076:71;2140:6;2135:3;2076:71;:::i;:::-;2069:78;;2156:52;2201:6;2196:3;2189:4;2182:5;2178:16;2156:52;:::i;:::-;2233:29;2255:6;2233:29;:::i;:::-;2228:3;2224:39;2217:46;;1997:272;1905:364;;;;:::o;2275:366::-;2417:3;2438:67;2502:2;2497:3;2438:67;:::i;:::-;2431:74;;2514:93;2603:3;2514:93;:::i;:::-;2632:2;2627:3;2623:12;2616:19;;2275:366;;;:::o;2647:::-;2789:3;2810:67;2874:2;2869:3;2810:67;:::i;:::-;2803:74;;2886:93;2975:3;2886:93;:::i;:::-;3004:2;2999:3;2995:12;2988:19;;2647:366;;;:::o;3019:::-;3161:3;3182:67;3246:2;3241:3;3182:67;:::i;:::-;3175:74;;3258:93;3347:3;3258:93;:::i;:::-;3376:2;3371:3;3367:12;3360:19;;3019:366;;;:::o;3391:::-;3533:3;3554:67;3618:2;3613:3;3554:67;:::i;:::-;3547:74;;3630:93;3719:3;3630:93;:::i;:::-;3748:2;3743:3;3739:12;3732:19;;3391:366;;;:::o;3763:::-;3905:3;3926:67;3990:2;3985:3;3926:67;:::i;:::-;3919:74;;4002:93;4091:3;4002:93;:::i;:::-;4120:2;4115:3;4111:12;4104:19;;3763:366;;;:::o;4135:118::-;4222:24;4240:5;4222:24;:::i;:::-;4217:3;4210:37;4135:118;;:::o;4259:157::-;4364:45;4384:24;4402:5;4384:24;:::i;:::-;4364:45;:::i;:::-;4359:3;4352:58;4259:157;;:::o;4422:397::-;4562:3;4577:75;4648:3;4639:6;4577:75;:::i;:::-;4677:2;4672:3;4668:12;4661:19;;4690:75;4761:3;4752:6;4690:75;:::i;:::-;4790:2;4785:3;4781:12;4774:19;;4810:3;4803:10;;4422:397;;;;;:::o;4825:254::-;4934:4;4972:2;4961:9;4957:18;4949:26;;4985:87;5069:1;5058:9;5054:17;5045:6;4985:87;:::i;:::-;4825:254;;;;:::o;5085:751::-;5308:4;5346:3;5335:9;5331:19;5323:27;;5360:71;5428:1;5417:9;5413:17;5404:6;5360:71;:::i;:::-;5441:72;5509:2;5498:9;5494:18;5485:6;5441:72;:::i;:::-;5523;5591:2;5580:9;5576:18;5567:6;5523:72;:::i;:::-;5605;5673:2;5662:9;5658:18;5649:6;5605:72;:::i;:::-;5725:9;5719:4;5715:20;5709:3;5698:9;5694:19;5687:49;5753:76;5824:4;5815:6;5753:76;:::i;:::-;5745:84;;5085:751;;;;;;;;:::o;5842:210::-;5929:4;5967:2;5956:9;5952:18;5944:26;;5980:65;6042:1;6031:9;6027:17;6018:6;5980:65;:::i;:::-;5842:210;;;;:::o;6058:313::-;6171:4;6209:2;6198:9;6194:18;6186:26;;6258:9;6252:4;6248:20;6244:1;6233:9;6229:17;6222:47;6286:78;6359:4;6350:6;6286:78;:::i;:::-;6278:86;;6058:313;;;;:::o;6377:419::-;6543:4;6581:2;6570:9;6566:18;6558:26;;6630:9;6624:4;6620:20;6616:1;6605:9;6601:17;6594:47;6658:131;6784:4;6658:131;:::i;:::-;6650:139;;6377:419;;;:::o;6802:::-;6968:4;7006:2;6995:9;6991:18;6983:26;;7055:9;7049:4;7045:20;7041:1;7030:9;7026:17;7019:47;7083:131;7209:4;7083:131;:::i;:::-;7075:139;;6802:419;;;:::o;7227:::-;7393:4;7431:2;7420:9;7416:18;7408:26;;7480:9;7474:4;7470:20;7466:1;7455:9;7451:17;7444:47;7508:131;7634:4;7508:131;:::i;:::-;7500:139;;7227:419;;;:::o;7652:::-;7818:4;7856:2;7845:9;7841:18;7833:26;;7905:9;7899:4;7895:20;7891:1;7880:9;7876:17;7869:47;7933:131;8059:4;7933:131;:::i;:::-;7925:139;;7652:419;;;:::o;8077:::-;8243:4;8281:2;8270:9;8266:18;8258:26;;8330:9;8324:4;8320:20;8316:1;8305:9;8301:17;8294:47;8358:131;8484:4;8358:131;:::i;:::-;8350:139;;8077:419;;;:::o;8502:222::-;8595:4;8633:2;8622:9;8618:18;8610:26;;8646:71;8714:1;8703:9;8699:17;8690:6;8646:71;:::i;:::-;8502:222;;;;:::o;8730:332::-;8851:4;8889:2;8878:9;8874:18;8866:26;;8902:71;8970:1;8959:9;8955:17;8946:6;8902:71;:::i;:::-;8983:72;9051:2;9040:9;9036:18;9027:6;8983:72;:::i;:::-;8730:332;;;;;:::o;9068:442::-;9217:4;9255:2;9244:9;9240:18;9232:26;;9268:71;9336:1;9325:9;9321:17;9312:6;9268:71;:::i;:::-;9349:72;9417:2;9406:9;9402:18;9393:6;9349:72;:::i;:::-;9431;9499:2;9488:9;9484:18;9475:6;9431:72;:::i;:::-;9068:442;;;;;;:::o;9516:75::-;9549:6;9582:2;9576:9;9566:19;;9516:75;:::o;9597:98::-;9648:6;9682:5;9676:12;9666:22;;9597:98;;;:::o;9701:99::-;9753:6;9787:5;9781:12;9771:22;;9701:99;;;:::o;9806:168::-;9889:11;9923:6;9918:3;9911:19;9963:4;9958:3;9954:14;9939:29;;9806:168;;;;:::o;9980:169::-;10064:11;10098:6;10093:3;10086:19;10138:4;10133:3;10129:14;10114:29;;9980:169;;;;:::o;10155:305::-;10195:3;10214:20;10232:1;10214:20;:::i;:::-;10209:25;;10248:20;10266:1;10248:20;:::i;:::-;10243:25;;10402:1;10334:66;10330:74;10327:1;10324:81;10321:107;;;10408:18;;:::i;:::-;10321:107;10452:1;10449;10445:9;10438:16;;10155:305;;;;:::o;10466:96::-;10503:7;10532:24;10550:5;10532:24;:::i;:::-;10521:35;;10466:96;;;:::o;10568:104::-;10613:7;10642:24;10660:5;10642:24;:::i;:::-;10631:35;;10568:104;;;:::o;10678:90::-;10712:7;10755:5;10748:13;10741:21;10730:32;;10678:90;;;:::o;10774:149::-;10810:7;10850:66;10843:5;10839:78;10828:89;;10774:149;;;:::o;10929:126::-;10966:7;11006:42;10999:5;10995:54;10984:65;;10929:126;;;:::o;11061:77::-;11098:7;11127:5;11116:16;;11061:77;;;:::o;11144:307::-;11212:1;11222:113;11236:6;11233:1;11230:13;11222:113;;;11321:1;11316:3;11312:11;11306:18;11302:1;11297:3;11293:11;11286:39;11258:2;11255:1;11251:10;11246:15;;11222:113;;;11353:6;11350:1;11347:13;11344:101;;;11433:1;11424:6;11419:3;11415:16;11408:27;11344:101;11193:258;11144:307;;;:::o;11457:320::-;11501:6;11538:1;11532:4;11528:12;11518:22;;11585:1;11579:4;11575:12;11606:18;11596:81;;11662:4;11654:6;11650:17;11640:27;;11596:81;11724:2;11716:6;11713:14;11693:18;11690:38;11687:84;;;11743:18;;:::i;:::-;11687:84;11508:269;11457:320;;;:::o;11783:281::-;11866:27;11888:4;11866:27;:::i;:::-;11858:6;11854:40;11996:6;11984:10;11981:22;11960:18;11948:10;11945:34;11942:62;11939:88;;;12007:18;;:::i;:::-;11939:88;12047:10;12043:2;12036:22;11826:238;11783:281;;:::o;12070:233::-;12109:3;12132:24;12150:5;12132:24;:::i;:::-;12123:33;;12178:66;12171:5;12168:77;12165:103;;;12248:18;;:::i;:::-;12165:103;12295:1;12288:5;12284:13;12277:20;;12070:233;;;:::o;12309:100::-;12348:7;12377:26;12397:5;12377:26;:::i;:::-;12366:37;;12309:100;;;:::o;12415:94::-;12454:7;12483:20;12497:5;12483:20;:::i;:::-;12472:31;;12415:94;;;:::o;12515:79::-;12554:7;12583:5;12572:16;;12515:79;;;:::o;12600:176::-;12632:1;12649:20;12667:1;12649:20;:::i;:::-;12644:25;;12683:20;12701:1;12683:20;:::i;:::-;12678:25;;12722:1;12712:35;;12727:18;;:::i;:::-;12712:35;12768:1;12765;12761:9;12756:14;;12600:176;;;;:::o;12782:180::-;12830:77;12827:1;12820:88;12927:4;12924:1;12917:15;12951:4;12948:1;12941:15;12968:180;13016:77;13013:1;13006:88;13113:4;13110:1;13103:15;13137:4;13134:1;13127:15;13154:180;13202:77;13199:1;13192:88;13299:4;13296:1;13289:15;13323:4;13320:1;13313:15;13340:180;13388:77;13385:1;13378:88;13485:4;13482:1;13475:15;13509:4;13506:1;13499:15;13526:180;13574:77;13571:1;13564:88;13671:4;13668:1;13661:15;13695:4;13692:1;13685:15;13712:183;13747:3;13785:1;13767:16;13764:23;13761:128;;;13823:1;13820;13817;13802:23;13845:34;13876:1;13870:8;13845:34;:::i;:::-;13838:41;;13761:128;13712:183;:::o;14024:117::-;14133:1;14130;14123:12;14147:102;14188:6;14239:2;14235:7;14230:2;14223:5;14219:14;14215:28;14205:38;;14147:102;;;:::o;14255:94::-;14288:8;14336:5;14332:2;14328:14;14307:35;;14255:94;;;:::o;14355:106::-;14399:8;14448:5;14443:3;14439:15;14418:36;;14355:106;;;:::o;14467:239::-;14607:34;14603:1;14595:6;14591:14;14584:58;14676:22;14671:2;14663:6;14659:15;14652:47;14467:239;:::o;14712:227::-;14852:34;14848:1;14840:6;14836:14;14829:58;14921:10;14916:2;14908:6;14904:15;14897:35;14712:227;:::o;14945:174::-;15085:26;15081:1;15073:6;15069:14;15062:50;14945:174;:::o;15125:168::-;15265:20;15261:1;15253:6;15249:14;15242:44;15125:168;:::o;15299:220::-;15439:34;15435:1;15427:6;15423:14;15416:58;15508:3;15503:2;15495:6;15491:15;15484:28;15299:220;:::o;15525:711::-;15564:3;15602:4;15584:16;15581:26;15578:39;;;15610:5;;15578:39;15639:20;;:::i;:::-;15714:1;15696:16;15692:24;15689:1;15683:4;15668:49;15747:4;15741:11;15846:16;15839:4;15831:6;15827:17;15824:39;15791:18;15783:6;15780:30;15764:113;15761:146;;;15892:5;;;;15761:146;15938:6;15932:4;15928:17;15974:3;15968:10;16001:18;15993:6;15990:30;15987:43;;;16023:5;;;;;;15987:43;16071:6;16064:4;16059:3;16055:14;16051:27;16130:1;16112:16;16108:24;16102:4;16098:35;16093:3;16090:44;16087:57;;;16137:5;;;;;;;16087:57;16154;16202:6;16196:4;16192:17;16184:6;16180:30;16174:4;16154:57;:::i;:::-;16227:3;16220:10;;15568:668;;;;;15525:711;;:::o;16242:122::-;16315:24;16333:5;16315:24;:::i;:::-;16308:5;16305:35;16295:63;;16354:1;16351;16344:12;16295:63;16242:122;:::o;16370:120::-;16442:23;16459:5;16442:23;:::i;:::-;16435:5;16432:34;16422:62;;16480:1;16477;16470:12;16422:62;16370:120;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1147200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"IsPaused()": "2472",
								"Owner()": "2586",
								"SwitchSaleState()": "28918",
								"TotalNFTsMinted()": "2452",
								"checkMintedCategory()": "infinite",
								"dropsite_NFT_Owner(address)": "2880",
								"finishDropsite()": "26711",
								"randomMint()": "infinite"
							},
							"internal": {
								"random()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 190,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 190,
									"end": 205,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 815,
									"end": 819,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 819,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 792,
									"end": 819,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 819,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 792,
									"end": 819,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 792,
									"end": 819,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 819,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 941,
									"end": 945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 938,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 971,
									"end": 981,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 955,
									"end": 960,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 955,
									"end": 960,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 955,
									"end": 982,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 955,
									"end": 982,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 955,
									"end": 982,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 955,
									"end": 982,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1008,
									"end": 1009,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1007,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 992,
									"end": 1009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 992,
									"end": 1009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 992,
									"end": 1009,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 992,
									"end": 1009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1048,
									"end": 1049,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1036,
									"end": 1047,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1036,
									"end": 1049,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1049,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1049,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1049,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 1104,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1096,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1096,
									"end": 1106,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1096,
									"end": 1106,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1096,
									"end": 1106,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1133,
									"end": 1134,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1132,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1128,
									"end": 1134,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1134,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1134,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1134,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1144,
									"end": 1152,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1152,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1152,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1152,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 891,
									"end": 1159,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 2509,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d663b2c559fe779d3275054ae7631699ee9268ee648dd8731e197b5887e8afda64736f6c63430008070033",
									".code": [
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "7E1EAABF"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "7E1EAABF"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "B4A99A4E"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "C63BC456"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "D4C892C4"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "1309A563"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "322F0ECE"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "5A8BC1A9"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "67818243"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 2509,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 792,
											"end": 819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 819,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 212,
											"end": 239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 562,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2486,
											"end": 2494,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2486,
											"end": 2494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 562,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1359,
											"end": 1367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1390,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1445,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1445,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1355,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1477,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 726,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 726,
											"end": 734,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 726,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 726,
											"end": 734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 726,
											"end": 743,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 717,
											"end": 767,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 717,
											"end": 767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1773,
											"end": 1827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1811,
											"end": 1814,
											"name": "PUSH",
											"source": 2,
											"value": "15E"
										},
										{
											"begin": 1805,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1805,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1826,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1827,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1773,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1773,
											"end": 1856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "PUSH",
											"source": 2,
											"value": "1F4"
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1773,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 2247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1770,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "506C6174696E756D000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1986,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 2037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2040,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "476F6C6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2140,
											"end": 2237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "53696C7665720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2140,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2029,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1910,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1770,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2283,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2258,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2319,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2319,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2385,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2404,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 854,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 562,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 583,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 554,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 554,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1274,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1266,
											"end": 1274,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1280,
											"end": 1286,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1295,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1658,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1487,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1592,
											"end": 1607,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1621,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1622,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1560,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1658,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 998,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 982,
											"end": 984,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 982,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 998,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 982,
											"end": 998,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 982,
											"end": 998,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1110,
											"end": 1118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1154,
											"end": 1156,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1217,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 1284,
											"end": 1286,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1336,
											"end": 1344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1378,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1305,
											"end": 1379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1379,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1305,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 964,
											"end": 1386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2530,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A0"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 2138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "161"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "162"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "161"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "162"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "163"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "163"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 293,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 152,
											"end": 293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 208,
											"end": 213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 233,
											"end": 246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 224,
											"end": 246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 224,
											"end": 246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 255,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 255,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 255,
											"end": 287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 255,
											"end": 287,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 255,
											"end": 287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 293,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 293,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 299,
											"end": 628,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 299,
											"end": 628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 358,
											"end": 364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 382,
											"end": 405,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 375,
											"end": 494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 375,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 375,
											"end": 494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 413,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 413,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 413,
											"end": 492,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 492,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 413,
											"end": 492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 375,
											"end": 494,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 375,
											"end": 494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 603,
											"end": 610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 594,
											"end": 600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 583,
											"end": 592,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 579,
											"end": 601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 558,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 558,
											"end": 611,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 558,
											"end": 611,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 558,
											"end": 611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 548,
											"end": 611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 548,
											"end": 611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 504,
											"end": 621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 299,
											"end": 628,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 299,
											"end": 628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 299,
											"end": 628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 299,
											"end": 628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 299,
											"end": 628,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 983,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 634,
											"end": 983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 703,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 731,
											"end": 738,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 727,
											"end": 750,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 723,
											"end": 755,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 720,
											"end": 839,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 720,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 720,
											"end": 839,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 758,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 758,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 758,
											"end": 837,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 837,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 758,
											"end": 837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 720,
											"end": 839,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 720,
											"end": 839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 958,
											"end": 965,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 938,
											"end": 947,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 934,
											"end": 956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 903,
											"end": 966,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 966,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 903,
											"end": 966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 966,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 893,
											"end": 966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 849,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 634,
											"end": 983,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 634,
											"end": 983,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 634,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 634,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 634,
											"end": 983,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 989,
											"end": 1131,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 989,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1125,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1131,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1222,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1418,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1261,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1404,
											"end": 1409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1366,
											"end": 1411,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1366,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1418,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1533,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1424,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1520,
											"end": 1525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1503,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1493,
											"end": 1527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1533,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1685,
											"end": 1690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1768,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1707,
											"end": 1777,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1707,
											"end": 1777,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1707,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1829,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1893,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1893,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1899,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 1996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2021,
											"end": 2060,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2060,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2021,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2135,
											"end": 2138,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2069,
											"end": 2147,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2069,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2193,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2187,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2233,
											"end": 2262,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2262,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2233,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 2269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2275,
											"end": 2641,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2275,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2502,
											"end": 2504,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2497,
											"end": 2500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2438,
											"end": 2505,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2505,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2438,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2603,
											"end": 2606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2514,
											"end": 2607,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2514,
											"end": 2607,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2514,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2641,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2647,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2647,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2886,
											"end": 2979,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 2979,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2886,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 3013,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 3013,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3019,
											"end": 3385,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3019,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3241,
											"end": 3244,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3182,
											"end": 3249,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3182,
											"end": 3249,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3182,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3347,
											"end": 3350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3258,
											"end": 3351,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3351,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3258,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3378,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3385,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3391,
											"end": 3757,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3391,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3618,
											"end": 3620,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3613,
											"end": 3616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3554,
											"end": 3621,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3621,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3554,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3719,
											"end": 3722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3630,
											"end": 3723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3630,
											"end": 3723,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3630,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3763,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3763,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3990,
											"end": 3992,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3985,
											"end": 3988,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3926,
											"end": 3993,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3926,
											"end": 3993,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3926,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4091,
											"end": 4094,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4002,
											"end": 4095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4002,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4115,
											"end": 4118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 4129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 4129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 4129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 4129,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4135,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 4135,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4240,
											"end": 4245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4247,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4253,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4259,
											"end": 4416,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4259,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4364,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4402,
											"end": 4407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4364,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4364,
											"end": 4409,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4364,
											"end": 4409,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4364,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4362,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4352,
											"end": 4410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4416,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4648,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4577,
											"end": 4652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4577,
											"end": 4652,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4577,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4672,
											"end": 4675,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4661,
											"end": 4680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4661,
											"end": 4680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4761,
											"end": 4764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4690,
											"end": 4765,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4765,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4690,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4793,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4793,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4810,
											"end": 4813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4819,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5054,
											"end": 5071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4985,
											"end": 5072,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4985,
											"end": 5072,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4985,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5360,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5360,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5360,
											"end": 5431,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5360,
											"end": 5431,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 5360,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5485,
											"end": 5491,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5441,
											"end": 5513,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5441,
											"end": 5513,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5441,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5573,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5523,
											"end": 5595,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5595,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5523,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5605,
											"end": 5677,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5605,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 5605,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5725,
											"end": 5734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5719,
											"end": 5723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5715,
											"end": 5735,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5712,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5698,
											"end": 5707,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5753,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5824,
											"end": 5828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5821,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5753,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5753,
											"end": 5829,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5753,
											"end": 5829,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5753,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5836,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6040,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6024,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5980,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 6052,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6198,
											"end": 6207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6258,
											"end": 6267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6268,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6229,
											"end": 6246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6222,
											"end": 6269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6286,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6286,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6286,
											"end": 6364,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6286,
											"end": 6364,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 6286,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6278,
											"end": 6364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6278,
											"end": 6364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6543,
											"end": 6547,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6566,
											"end": 6584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6620,
											"end": 6640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6616,
											"end": 6617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6614,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6650,
											"end": 6789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6650,
											"end": 6789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6802,
											"end": 7221,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 6802,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 6972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7008,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7041,
											"end": 7042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7019,
											"end": 7066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7083,
											"end": 7214,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7083,
											"end": 7214,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 7083,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7075,
											"end": 7214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7075,
											"end": 7214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 7221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 7221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 7221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 7221,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7227,
											"end": 7646,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 7227,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7420,
											"end": 7429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7408,
											"end": 7434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7408,
											"end": 7434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 7508,
											"end": 7639,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7508,
											"end": 7639,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 7508,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7646,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7646,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 7859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 7859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7895,
											"end": 7915,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7891,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8077,
											"end": 8496,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 8077,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8247,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8283,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8270,
											"end": 8279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8341,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8358,
											"end": 8489,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8358,
											"end": 8489,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8358,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8496,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8496,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8595,
											"end": 8599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8699,
											"end": 8716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8502,
											"end": 8724,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8878,
											"end": 8887,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 8970,
											"end": 8971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8959,
											"end": 8968,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8955,
											"end": 8972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8946,
											"end": 8952,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8902,
											"end": 8973,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 8973,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 8902,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8983,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 9051,
											"end": 9053,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9040,
											"end": 9049,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8983,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8983,
											"end": 9055,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8983,
											"end": 9055,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 8983,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 9062,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9257,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9244,
											"end": 9253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9325,
											"end": 9334,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9321,
											"end": 9338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9349,
											"end": 9421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9417,
											"end": 9419,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9406,
											"end": 9415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9349,
											"end": 9421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9349,
											"end": 9421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9349,
											"end": 9421,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9349,
											"end": 9421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9499,
											"end": 9501,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9484,
											"end": 9502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9475,
											"end": 9481,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9431,
											"end": 9503,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9431,
											"end": 9503,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9431,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9510,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9516,
											"end": 9591,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 9516,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9584,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9585,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9591,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9597,
											"end": 9695,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 9597,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9695,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9701,
											"end": 9800,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 9701,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9753,
											"end": 9759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9793,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9800,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 9900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9923,
											"end": 9929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9918,
											"end": 9921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 9968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 9968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9806,
											"end": 9974,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10064,
											"end": 10075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10086,
											"end": 10105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10142,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10129,
											"end": 10143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10114,
											"end": 10143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10114,
											"end": 10143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 10149,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10195,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 10214,
											"end": 10234,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10214,
											"end": 10234,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10214,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10248,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10248,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 10248,
											"end": 10268,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10248,
											"end": 10268,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 10248,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10243,
											"end": 10268,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10243,
											"end": 10268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10400,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10330,
											"end": 10404,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10327,
											"end": 10328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10324,
											"end": 10405,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 10321,
											"end": 10428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10428,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 10321,
											"end": 10428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10452,
											"end": 10453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10449,
											"end": 10450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10460,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10466,
											"end": 10562,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 10466,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10503,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10532,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10550,
											"end": 10555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10532,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10532,
											"end": 10556,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10532,
											"end": 10556,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10532,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10562,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10568,
											"end": 10672,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 10568,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10613,
											"end": 10620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 10660,
											"end": 10665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10642,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10642,
											"end": 10666,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10642,
											"end": 10666,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 10642,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10631,
											"end": 10666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10631,
											"end": 10666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10672,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10678,
											"end": 10768,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 10678,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10712,
											"end": 10719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10755,
											"end": 10760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10730,
											"end": 10762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10730,
											"end": 10762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10768,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10774,
											"end": 10923,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 10774,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10810,
											"end": 10817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 10916,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10843,
											"end": 10848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 10917,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10828,
											"end": 10917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10828,
											"end": 10917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10774,
											"end": 10923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10774,
											"end": 10923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10774,
											"end": 10923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10774,
											"end": 10923,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10929,
											"end": 11055,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10929,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11048,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10999,
											"end": 11004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10995,
											"end": 11049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 11055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 11055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 11055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 11055,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11061,
											"end": 11138,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 11061,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11098,
											"end": 11105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11127,
											"end": 11132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11116,
											"end": 11132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11116,
											"end": 11132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11138,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11138,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11144,
											"end": 11451,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 11144,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11233,
											"end": 11234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11243,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11321,
											"end": 11322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11316,
											"end": 11319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11312,
											"end": 11323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11302,
											"end": 11303,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11300,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11286,
											"end": 11325,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11260,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11251,
											"end": 11261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 11222,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11353,
											"end": 11359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11347,
											"end": 11360,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11344,
											"end": 11445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11430,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11422,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11415,
											"end": 11431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11408,
											"end": 11435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11445,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11344,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11451,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11457,
											"end": 11777,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11457,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11538,
											"end": 11539,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 11532,
											"end": 11536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11528,
											"end": 11540,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11518,
											"end": 11540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11518,
											"end": 11540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11585,
											"end": 11586,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11579,
											"end": 11583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11575,
											"end": 11587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11606,
											"end": 11624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 11596,
											"end": 11677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11662,
											"end": 11666,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 11654,
											"end": 11660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11650,
											"end": 11667,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11677,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 11596,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11724,
											"end": 11726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11716,
											"end": 11722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11713,
											"end": 11727,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11690,
											"end": 11728,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11687,
											"end": 11771,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11687,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 11687,
											"end": 11771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11687,
											"end": 11771,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 11687,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11508,
											"end": 11777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11457,
											"end": 11777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11457,
											"end": 11777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11457,
											"end": 11777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11457,
											"end": 11777,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11783,
											"end": 12064,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 11783,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 11888,
											"end": 11892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11854,
											"end": 11894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11996,
											"end": 12002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 12003,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11948,
											"end": 11958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11945,
											"end": 11979,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11942,
											"end": 12004,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 12027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 11939,
											"end": 12027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12007,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 12007,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 12007,
											"end": 12025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12007,
											"end": 12025,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 12007,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 12027,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 11939,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12047,
											"end": 12057,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12043,
											"end": 12045,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12036,
											"end": 12058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11826,
											"end": 12064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 12064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 12064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 12064,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12070,
											"end": 12303,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 12070,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12132,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 12150,
											"end": 12155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12132,
											"end": 12156,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12132,
											"end": 12156,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 12132,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12123,
											"end": 12156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12123,
											"end": 12156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12244,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12171,
											"end": 12176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12168,
											"end": 12245,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12268,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12165,
											"end": 12268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12268,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12165,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12284,
											"end": 12297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12303,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12309,
											"end": 12409,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 12309,
											"end": 12409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12348,
											"end": 12355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12377,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12397,
											"end": 12402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12377,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 12377,
											"end": 12403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12377,
											"end": 12403,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12377,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12309,
											"end": 12409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12309,
											"end": 12409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12309,
											"end": 12409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12309,
											"end": 12409,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12415,
											"end": 12509,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 12415,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12454,
											"end": 12461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 12497,
											"end": 12502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12472,
											"end": 12503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12472,
											"end": 12503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12509,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12515,
											"end": 12594,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 12515,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12554,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12583,
											"end": 12588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12594,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12594,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12632,
											"end": 12633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12649,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 12667,
											"end": 12668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12649,
											"end": 12669,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12649,
											"end": 12669,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 12649,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12644,
											"end": 12669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12644,
											"end": 12669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12683,
											"end": 12703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 12701,
											"end": 12702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12683,
											"end": 12703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12683,
											"end": 12703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12683,
											"end": 12703,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 12683,
											"end": 12703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12678,
											"end": 12703,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12678,
											"end": 12703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12722,
											"end": 12723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12712,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 12712,
											"end": 12747,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 12727,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 12727,
											"end": 12745,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12727,
											"end": 12745,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 12727,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12712,
											"end": 12747,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 12712,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12761,
											"end": 12770,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 12770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 12770,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12776,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12782,
											"end": 12962,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 12782,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12907,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12820,
											"end": 12908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12927,
											"end": 12931,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12917,
											"end": 12932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12951,
											"end": 12955,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12948,
											"end": 12949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12941,
											"end": 12956,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13148,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 12968,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13016,
											"end": 13093,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13013,
											"end": 13014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13006,
											"end": 13094,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13113,
											"end": 13117,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 13110,
											"end": 13111,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13134,
											"end": 13135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13127,
											"end": 13142,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13154,
											"end": 13334,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 13154,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13202,
											"end": 13279,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13199,
											"end": 13200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13192,
											"end": 13280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13299,
											"end": 13303,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 13296,
											"end": 13297,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13289,
											"end": 13304,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13323,
											"end": 13327,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13320,
											"end": 13321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13313,
											"end": 13328,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13520,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 13340,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13465,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13385,
											"end": 13386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13378,
											"end": 13466,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13489,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 13482,
											"end": 13483,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13475,
											"end": 13490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13509,
											"end": 13513,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13506,
											"end": 13507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13499,
											"end": 13514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13526,
											"end": 13706,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 13526,
											"end": 13706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13574,
											"end": 13651,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13571,
											"end": 13572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13564,
											"end": 13652,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13675,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13661,
											"end": 13676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13699,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13692,
											"end": 13693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13685,
											"end": 13700,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13712,
											"end": 13895,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 13712,
											"end": 13895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13750,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13785,
											"end": 13786,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 13767,
											"end": 13783,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 13787,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13761,
											"end": 13889,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13761,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 13761,
											"end": 13889,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13823,
											"end": 13824,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13820,
											"end": 13821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13802,
											"end": 13825,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 13845,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13870,
											"end": 13878,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13845,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 13845,
											"end": 13879,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13845,
											"end": 13879,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 13845,
											"end": 13879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13838,
											"end": 13879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13838,
											"end": 13879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13761,
											"end": 13889,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 13761,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13712,
											"end": 13895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13712,
											"end": 13895,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14024,
											"end": 14141,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 14024,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14133,
											"end": 14134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14130,
											"end": 14131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14123,
											"end": 14135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14188,
											"end": 14194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14241,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14235,
											"end": 14242,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14230,
											"end": 14232,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14223,
											"end": 14228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14215,
											"end": 14243,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14255,
											"end": 14349,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14255,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14288,
											"end": 14296,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14341,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14332,
											"end": 14334,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14328,
											"end": 14342,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 14307,
											"end": 14342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14307,
											"end": 14342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14255,
											"end": 14349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14255,
											"end": 14349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14255,
											"end": 14349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14255,
											"end": 14349,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14355,
											"end": 14461,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 14355,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14399,
											"end": 14407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14448,
											"end": 14453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14443,
											"end": 14446,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 14439,
											"end": 14454,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 14418,
											"end": 14454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14418,
											"end": 14454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14355,
											"end": 14461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14355,
											"end": 14461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14355,
											"end": 14461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14355,
											"end": 14461,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14467,
											"end": 14706,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 14467,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14607,
											"end": 14641,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 14603,
											"end": 14604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14595,
											"end": 14601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14591,
											"end": 14605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14584,
											"end": 14642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14676,
											"end": 14698,
											"name": "PUSH",
											"source": 8,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 14671,
											"end": 14673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14659,
											"end": 14674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14652,
											"end": 14699,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14467,
											"end": 14706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14467,
											"end": 14706,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14712,
											"end": 14939,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 14712,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14852,
											"end": 14886,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 14848,
											"end": 14849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14840,
											"end": 14846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14836,
											"end": 14850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14829,
											"end": 14887,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14921,
											"end": 14931,
											"name": "PUSH",
											"source": 8,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14916,
											"end": 14918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14908,
											"end": 14914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14904,
											"end": 14919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14712,
											"end": 14939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14712,
											"end": 14939,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14945,
											"end": 15119,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 14945,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15085,
											"end": 15111,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E79784E6674204F776E65722063616E204163636573730000000000000000"
										},
										{
											"begin": 15081,
											"end": 15082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15073,
											"end": 15079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15069,
											"end": 15083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15062,
											"end": 15112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 15119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 15119,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15125,
											"end": 15293,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 15125,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15285,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E7472616374206973205061757365640000000000000000000000000000"
										},
										{
											"begin": 15261,
											"end": 15262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15253,
											"end": 15259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15249,
											"end": 15263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15242,
											"end": 15286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15293,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15299,
											"end": 15519,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 15299,
											"end": 15519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15439,
											"end": 15473,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 15435,
											"end": 15436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15427,
											"end": 15433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15423,
											"end": 15437,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "PUSH",
											"source": 8,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15503,
											"end": 15505,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15495,
											"end": 15501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15491,
											"end": 15506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15484,
											"end": 15512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15519,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15525,
											"end": 16236,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 15525,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15564,
											"end": 15567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15602,
											"end": 15606,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 15584,
											"end": 15600,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15607,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15578,
											"end": 15617,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15578,
											"end": 15617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 15578,
											"end": 15617,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15610,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 15610,
											"end": 15615,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15578,
											"end": 15617,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 15578,
											"end": 15617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15639,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 15639,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 15639,
											"end": 15659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15639,
											"end": 15659,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 15639,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15714,
											"end": 15715,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15696,
											"end": 15712,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15692,
											"end": 15716,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15689,
											"end": 15690,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15683,
											"end": 15687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15668,
											"end": 15717,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 15747,
											"end": 15751,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15741,
											"end": 15752,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15846,
											"end": 15862,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15839,
											"end": 15843,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15831,
											"end": 15837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15827,
											"end": 15844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15824,
											"end": 15863,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 15809,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15783,
											"end": 15789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15780,
											"end": 15810,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15764,
											"end": 15877,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15907,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15761,
											"end": 15907,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15892,
											"end": 15897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15892,
											"end": 15897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15892,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 15892,
											"end": 15897,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15907,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15761,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15938,
											"end": 15944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15932,
											"end": 15936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15928,
											"end": 15945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 15977,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15968,
											"end": 15978,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16001,
											"end": 16019,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15993,
											"end": 15999,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 16020,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15987,
											"end": 16030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15987,
											"end": 16030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15987,
											"end": 16030,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 16023,
											"end": 16028,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15987,
											"end": 16030,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15987,
											"end": 16030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16071,
											"end": 16077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16068,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16059,
											"end": 16062,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16055,
											"end": 16069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16051,
											"end": 16078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16130,
											"end": 16131,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16112,
											"end": 16128,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16108,
											"end": 16132,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16102,
											"end": 16106,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16098,
											"end": 16133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16093,
											"end": 16096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16090,
											"end": 16134,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16087,
											"end": 16144,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16087,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 16087,
											"end": 16144,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16087,
											"end": 16144,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 16087,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 16202,
											"end": 16208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16196,
											"end": 16200,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16192,
											"end": 16209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16184,
											"end": 16190,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16180,
											"end": 16210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16174,
											"end": 16178,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 16154,
											"end": 16211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16154,
											"end": 16211,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 16154,
											"end": 16211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16227,
											"end": 16230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16220,
											"end": 16230,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 16220,
											"end": 16230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 16236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 16236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 16236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 16236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 16236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15525,
											"end": 16236,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 15525,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15525,
											"end": 16236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15525,
											"end": 16236,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16242,
											"end": 16364,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 16242,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16315,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16333,
											"end": 16338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16315,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 16315,
											"end": 16339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16315,
											"end": 16339,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16315,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16308,
											"end": 16313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16305,
											"end": 16340,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 16295,
											"end": 16358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16354,
											"end": 16355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16351,
											"end": 16352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16344,
											"end": 16356,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16358,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 16295,
											"end": 16358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16242,
											"end": 16364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16242,
											"end": 16364,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16370,
											"end": 16490,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 16370,
											"end": 16490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16442,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 16459,
											"end": 16464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16442,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 16442,
											"end": 16465,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16442,
											"end": 16465,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 16442,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16435,
											"end": 16440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16432,
											"end": 16466,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16422,
											"end": 16484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 16422,
											"end": 16484,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16480,
											"end": 16481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16470,
											"end": 16482,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16422,
											"end": 16484,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 16422,
											"end": 16484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16370,
											"end": 16490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16370,
											"end": 16490,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"IsPaused()": "1309a563",
							"Owner()": "b4a99a4e",
							"SwitchSaleState()": "67818243",
							"TotalNFTsMinted()": "322f0ece",
							"checkMintedCategory()": "c63bc456",
							"dropsite_NFT_Owner(address)": "d4c892c4",
							"finishDropsite()": "5a8bc1a9",
							"randomMint()": "7e1eaabf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwitchSaleState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMintedCategory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dropsite_NFT_Owner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dropsite.sol\":\"Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"Dropsite.sol\":{\"keccak256\":\"0x0f0f04266f5e6e6ac53203f30f50d2af3ce2c4c708b95a8a6f72d992ef8ac52d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523e0496c8c517a5a335a9cee99ce88d92636fba4784f241758c32a7116e759b\",\"dweb:/ipfs/QmZKY59GeNHH2yXrY9jKaeKKg2z7CEunRYyL7tGyd3X99b\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x28c510daf568ac9c7d497374b30484b0745aec24e11616ede9a3952b9464c9ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e7bef451bca8bb57e09907ada3e4aebca220958275913e0d368aa138970de1b\",\"dweb:/ipfs/QmXUJfyWjaYXKAuSBwx7G3JJpq8HB8hhakYZWhsgQLi6ix\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0x0c49d24959555e256f391b1b813a5f1b522d2a92bf4cffa08ff837f23d357264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b5063b0a495f2f3a189ead3ca4461989b45d4e97c450c5036f188bda2c9f35\",\"dweb:/ipfs/QmUf7NW8PudnRWS84YW79gMZN5kvCwrHpYy1ETX1VRAmWm\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155_Dropsite.sol": {
				"ERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155_Dropsite.sol\":490:2539  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155_Dropsite.sol\":490:2539  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122091f31655d6e78b74ff2054b787f81d392f9104220d2aab5d38f5bb263babb41164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122091f31655d6e78b74ff2054b787f81d392f9104220d2aab5d38f5bb263babb41164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 RETURN AND SSTORE 0xD6 0xE7 DUP12 PUSH21 0xFF2054B787F81D392F9104220D2AAB5D38F5BB263B 0xAB 0xB4 GT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:2049:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122091f31655d6e78b74ff2054b787f81d392f9104220d2aab5d38f5bb263babb41164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 RETURN AND SSTORE 0xD6 0xE7 DUP12 PUSH21 0xFF2054B787F81D392F9104220D2AAB5D38F5BB263B 0xAB 0xB4 GT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:2049:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091f31655d6e78b74ff2054b787f81d392f9104220d2aab5d38f5bb263babb41164736f6c63430008070033",
									".code": [
										{
											"begin": 490,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155_Dropsite.sol\":\"ERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x28c510daf568ac9c7d497374b30484b0745aec24e11616ede9a3952b9464c9ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e7bef451bca8bb57e09907ada3e4aebca220958275913e0d368aa138970de1b\",\"dweb:/ipfs/QmXUJfyWjaYXKAuSBwx7G3JJpq8HB8hhakYZWhsgQLi6ix\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0x0c49d24959555e256f391b1b813a5f1b522d2a92bf4cffa08ff837f23d357264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b5063b0a495f2f3a189ead3ca4461989b45d4e97c450c5036f188bda2c9f35\",\"dweb:/ipfs/QmUf7NW8PudnRWS84YW79gMZN5kvCwrHpYy1ETX1VRAmWm\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165_Dropsite.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165_Dropsite.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver_Dropsite.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver_Dropsite.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0x0c49d24959555e256f391b1b813a5f1b522d2a92bf4cffa08ff837f23d357264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b5063b0a495f2f3a189ead3ca4461989b45d4e97c450c5036f188bda2c9f35\",\"dweb:/ipfs/QmUf7NW8PudnRWS84YW79gMZN5kvCwrHpYy1ETX1VRAmWm\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155_Dropsite.sol": {
				"IERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155_Dropsite.sol\":\"IERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165_Dropsite.sol": {
				"IERC165_Dropsite": {
					"abi": [],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165_Dropsite.sol\":\"IERC165_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"Dropsite": [
							598
						],
						"ERC1155_Dropsite": [
							809
						],
						"ERC165": [
							832
						],
						"IERC1155Receiver": [
							873
						],
						"IERC1155_Dropsite": [
							893
						],
						"IERC165_Dropsite": [
							897
						]
					},
					"id": 599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "54:33:2"
						},
						{
							"absolutePath": "ERC1155_Dropsite.sol",
							"file": "./ERC1155_Dropsite.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 599,
							"sourceUnit": 810,
							"src": "88:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 323,
										"name": "ERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "143:16:2"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "143:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 598,
							"linearizedBaseContracts": [
								598,
								809,
								893,
								897,
								318
							],
							"name": "Dropsite",
							"nameLocation": "131:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "190:15:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 325,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "190:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"hexValue": "",
										"id": 326,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "203:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "322f0ece",
									"id": 329,
									"mutability": "mutable",
									"name": "TotalNFTsMinted",
									"nameLocation": "224:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "212:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 328,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "212:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "numOfCopies",
									"nameLocation": "267:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "262:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 330,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "262:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "Platinum",
									"nameLocation": "348:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "343:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "343:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "Gold",
									"nameLocation": "379:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "374:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "374:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "394:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "389:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "389:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d4c892c4",
									"id": 341,
									"mutability": "mutable",
									"name": "dropsite_NFT_Owner",
									"nameLocation": "437:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "406:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 340,
										"keyType": {
											"id": 338,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 339,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "424:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 345,
									"mutability": "mutable",
									"name": "nftExists",
									"nameLocation": "487:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "461:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 344,
										"keyType": {
											"id": 342,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "470:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "461:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 343,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "481:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "NFT_Owner",
									"nameLocation": "512:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "502:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 346,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 347,
										"nodeType": "ArrayTypeName",
										"src": "502:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "544:86:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 351,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "562:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 353,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "578:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "562:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e79784e6674204f776e65722063616e20416363657373",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "585:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d",
																"typeString": "literal_string \"OnyxNft Owner can Access\""
															},
															"value": "OnyxNft Owner can Access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d",
																"typeString": "literal_string \"OnyxNft Owner can Access\""
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "554:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "554:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "554:58:2"
											},
											{
												"id": 358,
												"nodeType": "PlaceholderStatement",
												"src": "622:1:2"
											}
										]
									},
									"id": 360,
									"name": "OnlyOwner",
									"nameLocation": "534:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:0:2"
									},
									"src": "525:105:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "707:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "726:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "738:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "726:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320506175736564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "745:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9",
																"typeString": "literal_string \"Contract is Paused\""
															},
															"value": "Contract is Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9",
																"typeString": "literal_string \"Contract is Paused\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "717:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "717:50:2"
											},
											{
												"id": 369,
												"nodeType": "PlaceholderStatement",
												"src": "777:1:2"
											}
										]
									},
									"id": 371,
									"name": "contractIsNotPaused",
									"nameLocation": "686:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:2"
									},
									"src": "677:108:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1309a563",
									"id": 374,
									"mutability": "mutable",
									"name": "IsPaused",
									"nameLocation": "804:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "792:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 372,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "792:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "815:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 376,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "849:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "825:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 375,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "825:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "875:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "860:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 377,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "860:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "923:236:2",
										"statements": [
											{
												"expression": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "933:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 384,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "941:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "933:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "933:12:2"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "955:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 390,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "971:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "971:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "963:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 388,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "963:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "963:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "955:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "955:27:2"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 395,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "992:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1008:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "992:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "992:17:2"
											},
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 399,
														"name": "numOfCopies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1036:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1048:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1036:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "1036:13:2"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 403,
														"name": "Platinum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1096:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1105:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1096:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1096:10:2"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 407,
														"name": "Gold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1128:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1133:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1128:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "1128:6:2"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "Silver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1144:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "1144:8:2"
											}
										]
									},
									"id": 416,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "904:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 379,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "904:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:20:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:2"
									},
									"scope": 598,
									"src": "891:268:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1247:48:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 427,
															"name": "Platinum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "1266:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 428,
															"name": "Gold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1275:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 429,
															"name": "Silver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1280:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 430,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1265:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 426,
												"id": 431,
												"nodeType": "Return",
												"src": "1258:29:2"
											}
										]
									},
									"functionSelector": "c63bc456",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 418,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "1214:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1214:9:2"
										}
									],
									"name": "checkMintedCategory",
									"nameLocation": "1180:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1232:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1237:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1237:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1242:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1242:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:16:2"
									},
									"scope": 598,
									"src": "1171:124:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1345:132:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1359:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1371:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1359:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "1431:40:2",
													"statements": [
														{
															"expression": {
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 446,
																	"name": "IsPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1445:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1456:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1445:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 449,
															"nodeType": "ExpressionStatement",
															"src": "1445:15:2"
														}
													]
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "1355:116:2",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1376:41:2",
													"statements": [
														{
															"expression": {
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 441,
																	"name": "IsPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1390:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1401:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1390:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 444,
															"nodeType": "ExpressionStatement",
															"src": "1390:16:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "67818243",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 436,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 435,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "1335:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1335:9:2"
										}
									],
									"name": "SwitchSaleState",
									"nameLocation": "1310:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:0:2"
									},
									"scope": 598,
									"src": "1301:176:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "1534:124:2",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "randomnumber",
														"nameLocation": "1545:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "1540:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 458,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1540:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 465,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1592:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1592:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 467,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1609:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1609:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 463,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1575:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1575:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1575:45:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 462,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1565:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1565:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1560:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 460,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1560:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:62:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "33",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1625:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1560:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1540:86:2"
											},
											{
												"expression": {
													"id": 475,
													"name": "randomnumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "1639:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 457,
												"id": 476,
												"nodeType": "Return",
												"src": "1632:19:2"
											}
										]
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "1496:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1502:2:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1528:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:6:2"
									},
									"scope": 598,
									"src": "1487:171:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "1733:696:2",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "1748:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "1743:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1743:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 487,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "1756:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1756:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1743:21:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "Platinum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 333,
																			"src": "1774:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "313530",
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1784:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"src": "1774:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 493,
																			"name": "nftId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "1791:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1798:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1791:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1774:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 497,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1773:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 498,
																			"name": "Gold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 335,
																			"src": "1805:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "333530",
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1811:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_350_by_1",
																				"typeString": "int_const 350"
																			},
																			"value": "350"
																		},
																		"src": "1805:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 501,
																			"name": "nftId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "1818:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1825:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1818:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1805:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 505,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1804:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1773:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 507,
																		"name": "Silver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "1832:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "353030",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1840:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_500_by_1",
																			"typeString": "int_const 500"
																		},
																		"value": "500"
																	},
																	"src": "1832:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 510,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "1847:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1854:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1847:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1832:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 514,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1831:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1773:83:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "1770:477:2",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "1866:381:2",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 516,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1880:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 517,
																		"name": "random",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "1888:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1888:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1880:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "1880:16:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 521,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1913:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1920:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1913:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 532,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "2032:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2039:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2032:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 543,
																			"name": "nftId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2143:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2150:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2143:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 554,
																	"nodeType": "IfStatement",
																	"src": "2140:97:2",
																	"trueBody": {
																		"id": 553,
																		"nodeType": "Block",
																		"src": "2165:72:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 546,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 327,
																						"src": "2183:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_storage",
																							"typeString": "bytes storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "53696c766572",
																						"id": 547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2188:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_580396b706c510b55b097eb36445183c918e5a4f9ac52a70d27fca23c3b3aab1",
																							"typeString": "literal_string \"Silver\""
																						},
																						"value": "Silver"
																					},
																					"src": "2183:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage",
																						"typeString": "bytes storage ref"
																					}
																				},
																				"id": 549,
																				"nodeType": "ExpressionStatement",
																				"src": "2183:13:2"
																			},
																			{
																				"expression": {
																					"id": 551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "2214:8:2",
																					"subExpression": {
																						"id": 550,
																						"name": "Silver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 337,
																						"src": "2214:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 552,
																				"nodeType": "ExpressionStatement",
																				"src": "2214:8:2"
																			}
																		]
																	}
																},
																"id": 555,
																"nodeType": "IfStatement",
																"src": "2029:208:2",
																"trueBody": {
																	"id": 542,
																	"nodeType": "Block",
																	"src": "2054:68:2",
																	"statements": [
																		{
																			"expression": {
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 535,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "2072:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage",
																						"typeString": "bytes storage ref"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "476f6c64",
																					"id": 536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2077:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff",
																						"typeString": "literal_string \"Gold\""
																					},
																					"value": "Gold"
																				},
																				"src": "2072:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage",
																					"typeString": "bytes storage ref"
																				}
																			},
																			"id": 538,
																			"nodeType": "ExpressionStatement",
																			"src": "2072:11:2"
																		},
																		{
																			"expression": {
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "2101:6:2",
																				"subExpression": {
																					"id": 539,
																					"name": "Gold",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 335,
																					"src": "2101:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 541,
																			"nodeType": "ExpressionStatement",
																			"src": "2101:6:2"
																		}
																	]
																}
															},
															"id": 556,
															"nodeType": "IfStatement",
															"src": "1910:327:2",
															"trueBody": {
																"id": 531,
																"nodeType": "Block",
																"src": "1935:76:2",
																"statements": [
																	{
																		"expression": {
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 524,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "1953:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage",
																					"typeString": "bytes storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "506c6174696e756d",
																				"id": 525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1958:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_ecadc0d3992a7a94d19327888a16aecb280514d608e8377a0d15dcf293020373",
																					"typeString": "literal_string \"Platinum\""
																				},
																				"value": "Platinum"
																			},
																			"src": "1953:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage",
																				"typeString": "bytes storage ref"
																			}
																		},
																		"id": 527,
																		"nodeType": "ExpressionStatement",
																		"src": "1953:15:2"
																	},
																	{
																		"expression": {
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1986:10:2",
																			"subExpression": {
																				"id": 528,
																				"name": "Platinum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "1986:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 530,
																		"nodeType": "ExpressionStatement",
																		"src": "1986:10:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 560,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2264:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2264:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2278:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 563,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2285:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2298:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"id": 559,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "2258:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2258:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2258:45:2"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 567,
															"name": "nftExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "2309:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 570,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 568,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2319:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2309:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2333:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2309:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "2309:28:2"
											},
											{
												"expression": {
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2343:17:2",
													"subExpression": {
														"id": 574,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2343:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "2343:17:2"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 577,
															"name": "dropsite_NFT_Owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "2366:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 580,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 578,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2385:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2385:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2366:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 581,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2399:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2366:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "2366:38:2"
											},
											{
												"expression": {
													"id": 584,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 486,
													"src": "2417:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 484,
												"id": 585,
												"nodeType": "Return",
												"src": "2410:12:2"
											}
										]
									},
									"functionSelector": "7e1eaabf",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 481,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 480,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "1691:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1691:19:2"
										}
									],
									"name": "randomMint",
									"nameLocation": "1678:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1688:2:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "1727:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1727:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:6:2"
									},
									"scope": 598,
									"src": "1669:760:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "2476:30:2",
										"statements": [
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 592,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "2486:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2495:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2486:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "2486:13:2"
											}
										]
									},
									"functionSelector": "5a8bc1a9",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 590,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 589,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "2467:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2467:9:2"
										}
									],
									"name": "finishDropsite",
									"nameLocation": "2443:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:2:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2476:0:2"
									},
									"scope": 598,
									"src": "2434:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 599,
							"src": "122:2387:2",
							"usedErrors": []
						}
					],
					"src": "30:2479:2"
				},
				"id": 2
			},
			"ERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC1155_Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155_Dropsite": [
							809
						],
						"ERC165": [
							832
						],
						"IERC1155Receiver": [
							873
						],
						"IERC1155_Dropsite": [
							893
						],
						"IERC165_Dropsite": [
							897
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155_Dropsite.sol",
							"file": "./IERC1155_Dropsite.sol",
							"id": 601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 894,
							"src": "119:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver_Dropsite.sol",
							"file": "./IERC1155Receiver_Dropsite.sol",
							"id": 602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 874,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 603,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 297,
							"src": "195:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 604,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 319,
							"src": "219:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165_Dropsite.sol",
							"file": "./ERC165_Dropsite.sol",
							"id": 605,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 833,
							"src": "243:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 607,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "519:7:3"
									},
									"id": 608,
									"nodeType": "InheritanceSpecifier",
									"src": "519:7:3"
								},
								{
									"baseName": {
										"id": 609,
										"name": "IERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 893,
										"src": "528:17:3"
									},
									"id": 610,
									"nodeType": "InheritanceSpecifier",
									"src": "528:17:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 606,
								"nodeType": "StructuredDocumentation",
								"src": "275:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809,
								893,
								897,
								318
							],
							"name": "ERC1155_Dropsite",
							"nameLocation": "499:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 613,
									"libraryName": {
										"id": 611,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "559:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "553:26:3",
									"typeName": {
										"id": 612,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 619,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "691:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 809,
									"src": "634:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 618,
										"keyType": {
											"id": 614,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "642:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "634:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 617,
											"keyType": {
												"id": 615,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "661:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "653:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 616,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 625,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "810:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 809,
									"src": "757:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 624,
										"keyType": {
											"id": 620,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "757:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 623,
											"keyType": {
												"id": 621,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "776:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 622,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "795:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "964:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "982:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "996:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "988:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "988:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "988:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "982:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1000:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "974:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "974:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "974:62:3"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "1055:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "1047:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 646,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1047:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 648,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1066:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1047:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1110:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1128:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1120:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1120:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1120:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "1132:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 659,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "1154:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 658,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "1136:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1136:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 662,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "1177:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 661,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "1159:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1159:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 664,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1186:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 651,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "1089:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "1089:102:3"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 667,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "1201:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 670,
															"indexExpression": {
																"id": 668,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "1211:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1201:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 671,
														"indexExpression": {
															"id": 669,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "1215:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1201:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 672,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "1222:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1201:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "1201:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 676,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1258:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1276:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1268:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1268:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1268:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "1280:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "1284:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 683,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "1288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "1243:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "EmitStatement",
												"src": "1238:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1336:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1346:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 688,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1346:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1346:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "1358:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "1362:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 694,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "1366:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 695,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1374:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 686,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1305:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1305:74:3"
											}
										]
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "844:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "867:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "859:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "887:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "879:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "907:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "936:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "923:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "923:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:97:3"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:0:3"
									},
									"scope": 809,
									"src": "835:551:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "1605:2:3",
										"statements": []
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1402:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1440:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1432:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1466:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1458:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1488:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1480:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1517:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1500:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 706,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1500:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 707,
													"nodeType": "ArrayTypeName",
													"src": "1500:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1547:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1530:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 709,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1530:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 710,
													"nodeType": "ArrayTypeName",
													"src": "1530:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1564:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1564:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:165:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:0:3"
									},
									"scope": 809,
									"src": "1393:214:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "1806:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "1820:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1820:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "1816:516:3",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "1837:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 759,
																		"nodeType": "Block",
																		"src": "1954:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 752,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 748,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 746,
																						"src": "1976:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 749,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 873,
																								"src": "1988:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$873_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 750,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 854,
																							"src": "1988:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1988:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1976:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 758,
																				"nodeType": "IfStatement",
																				"src": "1972:152:3",
																				"trueBody": {
																					"id": 757,
																					"nodeType": "Block",
																					"src": "2033:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 754,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2062:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 753,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "2055:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 755,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2055:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 756,
																							"nodeType": "ExpressionStatement",
																							"src": "2055:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 760,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 747,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 746,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "1944:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 760,
																				"src": "1937:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 745,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1937:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1936:17:3"
																	},
																	"src": "1928:210:3"
																},
																{
																	"block": {
																		"id": 768,
																		"nodeType": "Block",
																		"src": "2173:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 765,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 762,
																							"src": "2198:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 764,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2191:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 766,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2191:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 767,
																				"nodeType": "ExpressionStatement",
																				"src": "2191:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 769,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 763,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 762,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "2165:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 769,
																				"src": "2151:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 761,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2151:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2150:22:3"
																	},
																	"src": "2139:81:3"
																},
																{
																	"block": {
																		"id": 774,
																		"nodeType": "Block",
																		"src": "2227:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 771,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2252:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 770,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2245:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2245:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 773,
																				"nodeType": "ExpressionStatement",
																				"src": "2245:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 775,
																	"nodeType": "TryCatchClause",
																	"src": "2221:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 739,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "1894:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 740,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "1904:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "1910:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 742,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "1914:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 743,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 729,
																		"src": "1922:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 736,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "1872:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 735,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 873,
																			"src": "1855:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$873_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1855:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$873",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 854,
																	"src": "1855:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1855:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 776,
															"nodeType": "TryStatement",
															"src": "1851:471:3"
														}
													]
												}
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "1622:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1670:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1662:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1696:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1688:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1738:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1730:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1758:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1750:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1774:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1774:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1652:145:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:0:3"
									},
									"scope": 809,
									"src": "1613:725:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "2428:109:3",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "2455:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 807,
														"src": "2438:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 790,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2438:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 791,
															"nodeType": "ArrayTypeName",
															"src": "2438:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2477:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2463:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 793,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2467:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 794,
															"nodeType": "ArrayTypeName",
															"src": "2467:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2438:41:3"
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 799,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "2489:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 801,
														"indexExpression": {
															"hexValue": "30",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2495:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2489:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "2500:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2489:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2489:18:3"
											},
											{
												"expression": {
													"id": 805,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "2525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 787,
												"id": 806,
												"nodeType": "Return",
												"src": "2518:12:3"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "2353:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "2379:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2371:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:17:3"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2410:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 784,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2410:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 785,
													"nodeType": "ArrayTypeName",
													"src": "2410:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:18:3"
									},
									"scope": 809,
									"src": "2344:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 810,
							"src": "490:2049:3",
							"usedErrors": []
						}
					],
					"src": "94:2445:3"
				},
				"id": 3
			},
			"ERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC165_Dropsite.sol",
					"exportedSymbols": {
						"ERC165": [
							832
						],
						"IERC165_Dropsite": [
							897
						]
					},
					"id": 833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 833,
							"sourceUnit": 898,
							"src": "124:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 814,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 897,
										"src": "763:16:4"
									},
									"id": 815,
									"nodeType": "InheritanceSpecifier",
									"src": "763:16:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 813,
								"nodeType": "StructuredDocumentation",
								"src": "158:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 832,
							"linearizedBaseContracts": [
								832,
								897
							],
							"name": "ERC165",
							"nameLocation": "753:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "930:73:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "947:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 825,
																	"name": "IERC165_Dropsite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$897_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$897_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																],
																"id": 824,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "962:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_Dropsite_$897",
																"typeString": "type(contract IERC165_Dropsite)"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "962:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "947:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 822,
												"id": 829,
												"nodeType": "Return",
												"src": "940:56:4"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "786:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "856:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "881:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "874:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 817,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:20:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "924:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:4"
									},
									"scope": 832,
									"src": "847:156:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 833,
							"src": "735:270:4",
							"usedErrors": []
						}
					],
					"src": "99:906:4"
				},
				"id": 4
			},
			"IERC1155Receiver_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							873
						],
						"IERC165_Dropsite": [
							897
						]
					},
					"id": 874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 874,
							"sourceUnit": 898,
							"src": "127:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 837,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 897,
										"src": "231:16:5"
									},
									"id": 838,
									"nodeType": "InheritanceSpecifier",
									"src": "231:16:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 836,
								"nodeType": "StructuredDocumentation",
								"src": "161:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 873,
							"linearizedBaseContracts": [
								873,
								897
							],
							"name": "IERC1155Receiver",
							"nameLocation": "211:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "254:826:5",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1094:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1129:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1121:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1155:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1147:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1177:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1169:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1189:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1227:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1212:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:126:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1256:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 851,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1256:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:8:5"
									},
									"scope": 873,
									"src": "1085:179:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1270:994:5",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2278:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2318:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2310:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2344:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2336:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2377:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2358:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 860,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2358:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 861,
													"nodeType": "ArrayTypeName",
													"src": "2358:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2409:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2390:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 863,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2390:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 864,
													"nodeType": "ArrayTypeName",
													"src": "2390:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2440:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2425:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2425:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:150:5"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2469:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 869,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:8:5"
									},
									"scope": 873,
									"src": "2269:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 874,
							"src": "201:2278:5",
							"usedErrors": []
						}
					],
					"src": "103:2376:5"
				},
				"id": 5
			},
			"IERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155_Dropsite": [
							893
						],
						"IERC165_Dropsite": [
							897
						]
					},
					"id": 894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 898,
							"src": "171:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 878,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 897,
										"src": "403:16:6"
									},
									"id": 879,
									"nodeType": "InheritanceSpecifier",
									"src": "403:16:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "205:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 893,
							"linearizedBaseContracts": [
								893,
								897
							],
							"name": "IERC1155_Dropsite",
							"nameLocation": "381:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "426:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 892,
									"name": "TransferSingle",
									"nameLocation": "558:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "589:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "573:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "615:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "599:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "637:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "621:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "641:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "661:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "653:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:95:6"
									},
									"src": "552:116:6"
								}
							],
							"scope": 894,
							"src": "371:2545:6",
							"usedErrors": []
						}
					],
					"src": "95:2821:6"
				},
				"id": 6
			},
			"IERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC165_Dropsite.sol",
					"exportedSymbols": {
						"IERC165_Dropsite": [
							897
						]
					},
					"id": 898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 896,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": true,
							"id": 897,
							"linearizedBaseContracts": [
								897
							],
							"name": "IERC165_Dropsite",
							"nameLocation": "415:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 898,
							"src": "405:458:7",
							"usedErrors": []
						}
					],
					"src": "100:763:7"
				},
				"id": 7
			}
		}
	}
}