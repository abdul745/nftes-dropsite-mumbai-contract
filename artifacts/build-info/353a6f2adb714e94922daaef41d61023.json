{
	"id": "353a6f2adb714e94922daaef41d61023",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155_Dropsite.sol\"; \nimport \"./Strings.sol\";\ncontract Dropsite is ERC1155_Dropsite  { \n\n    //NFT category\n    // NFT Description & URL\n    string  data =\"\";\n\n    //NFTs distribution w.r.t Probabilities\n    //Max probability of Diamond(id=0) = 0.5%\n    //Max probability of Gold(id=1) = 10%\n    //Max probability of Silver(id=2) = 85%\n    uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; \n    \n    uint TotalNFTsMinted;     //Total NFTs\n    uint numOfCopies;         //A user can mint only 1 NFT\n    uint mintFees;\n\n    //Initial Minting\n    uint Diamond;            \n    uint Gold;\n    uint Silver; \n\n    //owner-NFT-ID Mapping\n    //Won NFTs w.r.t Addresses\n    struct nft_Owner{\n        uint[] owned_Dropsite_NFTs;\n    }\n    mapping (address=>nft_Owner)  dropsite_NFT_Owner;\n    \n\n    //payments Mapping\n     mapping (address => uint) deposits;\n  modifier OnlyOwner {\n        require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\");\n        _;\n    }\n\n    //Pausing and activating the contract\n    modifier contractIsNotPaused(){\n        require (IsPaused == false, \"Dropsite is not Opened Yet.\" );\n        _;\n    }\n      bool public IsPaused = true;\n    address payable public  Owner;\n    string private _name;\n    constructor (string memory name){\n        _name = name;\n        Owner = payable(msg.sender);\n\n        TotalNFTsMinted=0;     //Total NFTs Minted\n        numOfCopies=1;         //A user can mint only 1 NFT\n        Diamond=0;            \n        Gold=0;\n        Silver=0;\n    }\n     \n     //To Check issues NFTs Category Wise\n     function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){\n         return (Diamond,Gold,Silver);\n     }\n\n    function setMintFee(uint _mintFee) public OnlyOwner {\n        mintFees=_mintFee;\n    }\n     //To Check total Minted NFTs\n    function checkTotalMinted() public view OnlyOwner returns(uint){\n         return TotalNFTsMinted;\n     }\n     function stopDropsite() public OnlyOwner{\n        require(IsPaused==false, \"Dropsite is already Stopped\");\n        IsPaused=true;\n    }\n\n     function openDropsite() public OnlyOwner {\n        require(IsPaused==true, \"Dropsite is already Running\");\n        IsPaused=false;\n    }\n    \n     //To WithDraw All Ammount from Contract to Owners Address or any other Address \n    function withDraw(address payable to) public payable OnlyOwner {\n        uint Balance = address(this).balance;\n        require(Balance > 0 wei, \"Error! No Balance to withdraw\"); \n        to.transfer(Balance);\n    }  \n    \n    //To Check Contract Balance in Wei\n      function ContractBalance() public view OnlyOwner returns (uint){\n        return address(this).balance;\n    }\n\n    //Random Number to Select an item from nums Array(Probabilities)\n\n    function random() internal view returns (uint) {\n        // Returns 0-10\n    uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20;\n    return randomnumber;\n    }\n\n    //random number will be generated which will be the index to nums array.\n    //The number on that index will be considered as an nftID and will be alloted to the minter(user).\n   function updateConditions() internal contractIsNotPaused returns(uint) {\n       uint index = random();\n        uint nftId = nums[index];\n\n        // if nftID is 0, and less than 51 so 50 MAX - Diamond Category           \n        if(nftId == 0 && Diamond < 50) {\n             Diamond++;\n            data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)));\n            \n            return nftId;\n\n        // if nftID is 0 or 1 and Diamond is more than 150, it will go there in Gold Category\n        } else if(nftId <= 1 && Gold < 100) {\n            Gold++;\n            data = string(abi.encodePacked(\"Gold_\",Strings.toString(Gold)));\n            return nftId;\n\n        // if any of the above conditions are filled it will mint silver if enough silver available\n        } else if(nftId <= 2 && Silver <= 850) {\n            Silver++;\n            data=data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver)));\n            \n            return nftId;\n        }\n        else {\n            \n            //if nft ID is either 1 or 2, but Slots in Gold or Diamond are remaining, \n            //First Gold category will be filled then Diamond\n\n            if(Gold < 100) {\n                nftId = 1;\n                Gold++;\n                data = string(abi.encodePacked(\"Gold_\",Strings.toString(Gold)));\n                 \n                return nftId;\n            } else {\n                nftId = 0;\n                Diamond++;\n                data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)));\n                \n                return nftId;\n            }   \n    }\n   }\n\n    //Random minting after Fiat Payments\n    function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n   // we're assuming that random() returns only 0,1,2    \n   uint nftId = updateConditions();\n    _mint(user_addr, nftId, numOfCopies, data);\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId);\n    return (nftId,string(data));\n    }\n\n    //MATIC Amount will be deposited  \n    function depositAmount(address payee,uint amountToDeposit) internal {\n        deposits[payee] += amountToDeposit;\n    }\n    \n    //Random minting after Crypto Payments\n    function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n     require(msg.value == mintFees, \"Not Enough Balance\");\n\n   // nftId = random(); // we're assuming that random() returns only 0,1,2\n   uint nftId = updateConditions();\n    _mint(user_addr, nftId, numOfCopies, data);\n    depositAmount(_msgSender(), msg.value);\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId);\n    return (nftId,string(data));\n    }\n}"
			},
			"Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.;\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}"
			},
			"ERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155_Dropsite.sol\";\nimport \"./IERC1155Receiver_Dropsite.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165_Dropsite.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155_Dropsite is Context, IERC1155_Dropsite  {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        string memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165_Dropsite {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual  returns (bool) {\n        return interfaceId == type(IERC165_Dropsite).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165_Dropsite {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        string calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155_Dropsite  is IERC165_Dropsite {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    // event TransferBatch(\n    //     address indexed operator,\n    //     address indexed from,\n    //     address indexed to,\n    //     uint256[] ids,\n    //     uint256[] values\n    // );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    // event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    // event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n//     function balanceOf(address account, uint256 id) external view returns (uint256);\n\n//     /**\n//      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n//      *\n//      * Requirements:\n//      *\n//      * - `accounts` and `ids` must have the same length.\n//      */\n//     function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n//         external\n//         view\n//         returns (uint256[] memory);\n\n//     /**\n//      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n//      *\n//      * Emits an {ApprovalForAll} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `operator` cannot be the caller.\n//      */\n//     function setApprovalForAll(address operator, bool approved) external;\n\n//     /**\n//      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n//      *\n//      * See {setApprovalForAll}.\n//      */\n//     function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165_Dropsite {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n   // function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH13 0x26B1CD6618E7CFCB6B7E5C1BBD PUSH11 0x1C0BA9EDB855FD0FD2A4AD DUP7 0xAB 0xBB KECCAK256 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH13 0x26B1CD6618E7CFCB6B7E5C1BBD PUSH11 0x1C0BA9EDB855FD0FD2A4AD DUP7 0xAB 0xBB KECCAK256 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dropsite.sol": {
				"Dropsite": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "CryptoRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "FiatRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkMintedCategoryWise",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkTotalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintFee",
									"type": "uint256"
								}
							],
							"name": "setMintFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  0xa0\n    /* \"Dropsite.sol\":146:6129  contract Dropsite is ERC1155_Dropsite  { ... */\n  0x40\n    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  dup2\n  swap1\n  mstore\n  0x00\n    /* \"Dropsite.sol\":146:6129  contract Dropsite is ERC1155_Dropsite  { ... */\n  0x80\n    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  0x02\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x40\n  dup1\n  mload\n  0x0280\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"Dropsite.sol\":468:469  1 */\n  0x01\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x20\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  swap2\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"Dropsite.sol\":472:473  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x60\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x80\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xa0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xc0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xe0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0100\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0120\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0140\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0160\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0180\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01a0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01c0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01e0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0200\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0220\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0240\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0260\n  dup3\n  add\n  mstore\n  tag_3\n  swap1\n  0x03\n  swap1\n  0x14\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"Dropsite.sol\":1251:1278  bool public IsPaused = true */\n  0x0c\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Dropsite.sol\":1274:1278  true */\n  0x01\n    /* \"Dropsite.sol\":1251:1278  bool public IsPaused = true */\n  or\n  swap1\n  sstore\n    /* \"Dropsite.sol\":1345:1620  constructor (string memory name){... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"Dropsite.sol\":1387:1399  _name = name */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"Dropsite.sol\":1387:1392  _name */\n  0x0d\n  swap1\n    /* \"Dropsite.sol\":1387:1399  _name = name */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"Dropsite.sol\":1409:1414  Owner */\n  0x0c\n    /* \"Dropsite.sol\":1409:1436  Owner = payable(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n    /* \"Dropsite.sol\":1425:1435  msg.sender */\n  caller\n    /* \"Dropsite.sol\":1409:1436  Owner = payable(msg.sender) */\n  0x0100\n  mul\n  or\n  swap1\n  sstore\n  0x00\n    /* \"Dropsite.sol\":1447:1462  TotalNFTsMinted */\n  0x04\n    /* \"Dropsite.sol\":1447:1464  TotalNFTsMinted=0 */\n  dup2\n  swap1\n  sstore\n  0x01\n    /* \"Dropsite.sol\":1498:1509  numOfCopies */\n  0x05\n    /* \"Dropsite.sol\":1498:1511  numOfCopies=1 */\n  sstore\n  0x07\n    /* \"Dropsite.sol\":1558:1567  Diamond=0 */\n  dup2\n  swap1\n  sstore\n  0x08\n    /* \"Dropsite.sol\":1589:1595  Gold=0 */\n  dup2\n  swap1\n  sstore\n    /* \"Dropsite.sol\":1605:1611  Silver */\n  0x09\n    /* \"Dropsite.sol\":1605:1613  Silver=0 */\n  sstore\n    /* \"Dropsite.sol\":146:6129  contract Dropsite is ERC1155_Dropsite  { ... */\n  jump(tag_28)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_4:\n  0x01\n  dup4\n  add\n  swap2\n  dup4\n  swap1\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_22:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_22)\ntag_23:\n  dup1\n  iszero\n  tag_24\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_23)\ntag_24:\n  pop\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\ntag_20:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_26)\n    /* \"#utility.yul\":14:1101   */\ntag_7:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_30:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_31:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_32:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_37\n  tag_35\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_38:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_39:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_42:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_44:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_45:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_35:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_28:\n    /* \"Dropsite.sol\":146:6129  contract Dropsite is ERC1155_Dropsite  { ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dropsite.sol\":146:6129  contract Dropsite is ERC1155_Dropsite  { ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3b668059\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x3b668059\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3d65df70\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x60daa851\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xaa90c726\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xeddd0d9c\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0390c11c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0a67d2c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1309a563\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15460259\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x32b61b4c\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dropsite.sol\":1932:2036  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":7925:7950   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7913:7915   */\n      0x20\n        /* \"#utility.yul\":7898:7916   */\n      add\n        /* \"Dropsite.sol\":1932:2036  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2415:2629  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_3:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Dropsite.sol\":1251:1278  bool public IsPaused = true */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x0c)\n      tag_24\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":3811:3825   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3804:3826   */\n      iszero\n        /* \"#utility.yul\":3786:3827   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3774:3776   */\n      0x20\n        /* \"#utility.yul\":3759:3777   */\n      add\n        /* \"Dropsite.sol\":1251:1278  bool public IsPaused = true */\n      tag_17\n        /* \"#utility.yul\":3646:3833   */\n      jump\n        /* \"Dropsite.sol\":2184:2320  function openDropsite() public OnlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_19\n      tag_30\n      jump\t// in\n        /* \"Dropsite.sol\":4896:5342  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"Dropsite.sol\":2682:2790  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_15\n      tag_40\n      jump\t// in\n        /* \"Dropsite.sol\":5559:6127  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_8:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"Dropsite.sol\":1674:1801  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8712:8737   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8768:8770   */\n      0x20\n        /* \"#utility.yul\":8753:8771   */\n      dup5\n      add\n        /* \"#utility.yul\":8746:8780   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8796:8814   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8789:8823   */\n      mstore\n        /* \"#utility.yul\":8700:8702   */\n      0x60\n        /* \"#utility.yul\":8685:8703   */\n      add\n        /* \"Dropsite.sol\":1674:1801  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n      tag_17\n        /* \"#utility.yul\":8510:8829   */\n      jump\n        /* \"Dropsite.sol\":2042:2177  function stopDropsite() public OnlyOwner{... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_19\n      tag_53\n      jump\t// in\n        /* \"Dropsite.sol\":1284:1313  address payable public  Owner */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      sload(0x0c)\n      tag_55\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3034:3066   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3016:3067   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3004:3006   */\n      0x20\n        /* \"#utility.yul\":2989:3007   */\n      add\n        /* \"Dropsite.sol\":1284:1313  address payable public  Owner */\n      tag_17\n        /* \"#utility.yul\":2854:3073   */\n      jump\n        /* \"Dropsite.sol\":1807:1893  function setMintFee(uint _mintFee) public OnlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_19\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"Dropsite.sol\":1932:2036  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_16:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n        /* \"Dropsite.sol\":1990:1994  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n      pop\n        /* \"Dropsite.sol\":2013:2028  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":1071:1072  _ */\n    tag_70:\n        /* \"Dropsite.sol\":1932:2036  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":2415:2629  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_22:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_73:\n        /* \"Dropsite.sol\":2503:2524  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2542:2557  Balance > 0 wei */\n      dup1\n        /* \"Dropsite.sol\":2534:2591  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7221:7223   */\n      0x20\n        /* \"Dropsite.sol\":2534:2591  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7203:7224   */\n      mstore\n        /* \"#utility.yul\":7260:7262   */\n      0x1d\n        /* \"#utility.yul\":7240:7258   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7233:7263   */\n      mstore\n        /* \"#utility.yul\":7299:7330   */\n      0x4572726f7221204e6f2042616c616e636520746f207769746864726177000000\n        /* \"#utility.yul\":7279:7297   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7272:7331   */\n      mstore\n        /* \"#utility.yul\":7348:7366   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2534:2591  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_68\n        /* \"#utility.yul\":7019:7372   */\n      jump\n        /* \"Dropsite.sol\":2534:2591  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n    tag_76:\n        /* \"Dropsite.sol\":2602:2622  to.transfer(Balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":2602:2613  to.transfer */\n      dup4\n      and\n      swap1\n        /* \"Dropsite.sol\":2602:2622  to.transfer(Balance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Dropsite.sol\":2614:2621  Balance */\n      dup4\n      swap1\n        /* \"Dropsite.sol\":2602:2622  to.transfer(Balance) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Dropsite.sol\":2614:2621  Balance */\n      dup6\n        /* \"Dropsite.sol\":2602:2613  to.transfer */\n      dup9\n        /* \"Dropsite.sol\":2602:2622  to.transfer(Balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n        /* \"Dropsite.sol\":2478:2629  {... */\n      pop\n        /* \"Dropsite.sol\":2415:2629  function withDraw(address payable to) public payable OnlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":2184:2320  function openDropsite() public OnlyOwner {... */\n    tag_30:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_83:\n        /* \"Dropsite.sol\":2243:2251  IsPaused */\n      and(0xff, sload(0x0c))\n        /* \"Dropsite.sol\":2243:2257  IsPaused==true */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":2243:2251  IsPaused */\n      0x01\n        /* \"Dropsite.sol\":2243:2257  IsPaused==true */\n      eq\n        /* \"Dropsite.sol\":2235:2289  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5442:5444   */\n      0x20\n        /* \"Dropsite.sol\":2235:2289  require(IsPaused==true, \"Dropsite is already Running\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5424:5445   */\n      mstore\n        /* \"#utility.yul\":5481:5483   */\n      0x1b\n        /* \"#utility.yul\":5461:5479   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5454:5484   */\n      mstore\n        /* \"#utility.yul\":5520:5549   */\n      0x44726f707369746520697320616c72656164792052756e6e696e670000000000\n        /* \"#utility.yul\":5500:5518   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5493:5550   */\n      mstore\n        /* \"#utility.yul\":5567:5585   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2235:2289  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_68\n        /* \"#utility.yul\":5240:5591   */\n      jump\n        /* \"Dropsite.sol\":2235:2289  require(IsPaused==true, \"Dropsite is already Running\") */\n    tag_86:\n        /* \"Dropsite.sol\":2299:2307  IsPaused */\n      0x0c\n        /* \"Dropsite.sol\":2299:2313  IsPaused=false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Dropsite.sol\":2184:2320  function openDropsite() public OnlyOwner {... */\n      jump\t// out\n        /* \"Dropsite.sol\":4896:5342  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_35:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n        /* \"Dropsite.sol\":4985:4989  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":4990:5003  string memory */\n      0x60\n      swap1\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_91:\n        /* \"Dropsite.sol\":1176:1184  IsPaused */\n      and(0xff, sload(0x0c))\n        /* \"Dropsite.sol\":1176:1193  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1167:1226  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_96\n      jump\t// in\n    tag_94:\n        /* \"Dropsite.sol\":5036:5040  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":5020:5035  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":5020:5040  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":5012:5070  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6867:6869   */\n      0x20\n        /* \"Dropsite.sol\":5012:5070  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6849:6870   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x19\n        /* \"#utility.yul\":6886:6904   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6879:6909   */\n      mstore\n      shl(0x3a, 0x13585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959)\n        /* \"#utility.yul\":6925:6943   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6918:6973   */\n      mstore\n        /* \"#utility.yul\":6990:7008   */\n      0x64\n      add\n        /* \"Dropsite.sol\":5012:5070  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_68\n        /* \"#utility.yul\":6665:7014   */\n      jump\n        /* \"Dropsite.sol\":5012:5070  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n    tag_98:\n        /* \"Dropsite.sol\":5133:5143  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":5146:5164  updateConditions() */\n      tag_101\n        /* \"Dropsite.sol\":5146:5162  updateConditions */\n      tag_102\n        /* \"Dropsite.sol\":5146:5164  updateConditions() */\n      jump\t// in\n    tag_101:\n        /* \"Dropsite.sol\":5133:5164  uint nftId = updateConditions() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":5170:5212  _mint(user_addr, nftId, numOfCopies, data) */\n      tag_103\n        /* \"Dropsite.sol\":5176:5185  user_addr */\n      dup5\n        /* \"Dropsite.sol\":5187:5192  nftId */\n      dup3\n        /* \"Dropsite.sol\":5194:5205  numOfCopies */\n      sload(0x05)\n        /* \"Dropsite.sol\":5207:5211  data */\n      0x02\n        /* \"Dropsite.sol\":5170:5212  _mint(user_addr, nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":5170:5175  _mint */\n      tag_110\n        /* \"Dropsite.sol\":5170:5212  _mint(user_addr, nftId, numOfCopies, data) */\n      jump\t// in\n    tag_103:\n        /* \"Dropsite.sol\":5218:5233  TotalNFTsMinted */\n      0x04\n        /* \"Dropsite.sol\":5218:5235  TotalNFTsMinted++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":5218:5233  TotalNFTsMinted */\n      0x00\n        /* \"Dropsite.sol\":5218:5235  TotalNFTsMinted++ */\n      tag_111\n      dup4\n      tag_112\n      jump\t// in\n    tag_111:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":5241:5270  dropsite_NFT_Owner[user_addr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":5241:5259  dropsite_NFT_Owner */\n      0x0a\n        /* \"Dropsite.sol\":5241:5270  dropsite_NFT_Owner[user_addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"Dropsite.sol\":5241:5302  dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"Dropsite.sol\":5329:5333  data */\n      0x02\n        /* \"Dropsite.sol\":5308:5335  return (nftId,string(data)) */\n      dup1\n      sload\n        /* \"Dropsite.sol\":5296:5301  nftId */\n      dup3\n      swap2\n        /* \"Dropsite.sol\":5329:5333  data */\n      swap1\n      dup2\n      swap1\n        /* \"Dropsite.sol\":5308:5335  return (nftId,string(data)) */\n      tag_114\n      swap1\n      tag_105\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_105\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Dropsite.sol\":4896:5342  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Dropsite.sol\":2682:2790  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_40:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n        /* \"Dropsite.sol\":2740:2744  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_121:\n      pop\n        /* \"Dropsite.sol\":2762:2783  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2682:2790  function ContractBalance() public view OnlyOwner returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":5559:6127  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_44:\n        /* \"Dropsite.sol\":1176:1184  IsPaused */\n      sload(0x0c)\n        /* \"Dropsite.sol\":5649:5653  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":5654:5667  string memory */\n      0x60\n      swap1\n        /* \"Dropsite.sol\":1176:1184  IsPaused */\n      0xff\n      and\n        /* \"Dropsite.sol\":1176:1193  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1167:1226  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_96\n      jump\t// in\n    tag_125:\n        /* \"Dropsite.sol\":5700:5704  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":5684:5699  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":5684:5704  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":5676:5734  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6867:6869   */\n      0x20\n        /* \"Dropsite.sol\":5676:5734  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6849:6870   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x19\n        /* \"#utility.yul\":6886:6904   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6879:6909   */\n      mstore\n      shl(0x3a, 0x13585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959)\n        /* \"#utility.yul\":6925:6943   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6918:6973   */\n      mstore\n        /* \"#utility.yul\":6990:7008   */\n      0x64\n      add\n        /* \"Dropsite.sol\":5676:5734  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_68\n        /* \"#utility.yul\":6665:7014   */\n      jump\n        /* \"Dropsite.sol\":5676:5734  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n    tag_128:\n        /* \"Dropsite.sol\":5762:5770  mintFees */\n      sload(0x06)\n        /* \"Dropsite.sol\":5749:5758  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":5749:5770  msg.value == mintFees */\n      eq\n        /* \"Dropsite.sol\":5741:5793  require(msg.value == mintFees, \"Not Enough Balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"Dropsite.sol\":5741:5793  require(msg.value == mintFees, \"Not Enough Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5077:5098   */\n      mstore\n        /* \"#utility.yul\":5134:5136   */\n      0x12\n        /* \"#utility.yul\":5114:5132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5107:5137   */\n      mstore\n      shl(0x70, 0x4e6f7420456e6f7567682042616c616e6365)\n        /* \"#utility.yul\":5153:5171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5146:5194   */\n      mstore\n        /* \"#utility.yul\":5211:5229   */\n      0x64\n      add\n        /* \"Dropsite.sol\":5741:5793  require(msg.value == mintFees, \"Not Enough Balance\") */\n      tag_68\n        /* \"#utility.yul\":4893:5235   */\n      jump\n        /* \"Dropsite.sol\":5741:5793  require(msg.value == mintFees, \"Not Enough Balance\") */\n    tag_130:\n        /* \"Dropsite.sol\":5874:5884  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":5887:5905  updateConditions() */\n      tag_133\n        /* \"Dropsite.sol\":5887:5903  updateConditions */\n      tag_102\n        /* \"Dropsite.sol\":5887:5905  updateConditions() */\n      jump\t// in\n    tag_133:\n        /* \"Dropsite.sol\":5874:5905  uint nftId = updateConditions() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":5911:5953  _mint(user_addr, nftId, numOfCopies, data) */\n      tag_134\n        /* \"Dropsite.sol\":5917:5926  user_addr */\n      dup5\n        /* \"Dropsite.sol\":5928:5933  nftId */\n      dup3\n        /* \"Dropsite.sol\":5935:5946  numOfCopies */\n      sload(0x05)\n        /* \"Dropsite.sol\":5948:5952  data */\n      0x02\n        /* \"Dropsite.sol\":5911:5953  _mint(user_addr, nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_134:\n        /* \"Dropsite.sol\":5959:5997  depositAmount(_msgSender(), msg.value) */\n      tag_103\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Dropsite.sol\":5987:5996  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":5959:5972  depositAmount */\n      tag_142\n        /* \"Dropsite.sol\":5959:5997  depositAmount(_msgSender(), msg.value) */\n      jump\t// in\n        /* \"Dropsite.sol\":1674:1801  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_48:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n        /* \"Dropsite.sol\":1739:1743  uint */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_152:\n      pop\n      pop\n        /* \"Dropsite.sol\":1773:1780  Diamond */\n      sload(0x07)\n        /* \"Dropsite.sol\":1781:1785  Gold */\n      sload(0x08)\n        /* \"Dropsite.sol\":1786:1792  Silver */\n      sload(0x09)\n        /* \"Dropsite.sol\":1773:1780  Diamond */\n      swap2\n      swap4\n        /* \"Dropsite.sol\":1781:1785  Gold */\n      swap1\n      swap3\n      pop\n        /* \"Dropsite.sol\":1674:1801  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n      jump\t// out\n        /* \"Dropsite.sol\":2042:2177  function stopDropsite() public OnlyOwner{... */\n    tag_53:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_157:\n        /* \"Dropsite.sol\":2100:2108  IsPaused */\n      and(0xff, sload(0x0c))\n        /* \"Dropsite.sol\":2100:2115  IsPaused==false */\n      iszero\n        /* \"Dropsite.sol\":2092:2147  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5798:5800   */\n      0x20\n        /* \"Dropsite.sol\":2092:2147  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5780:5801   */\n      mstore\n        /* \"#utility.yul\":5837:5839   */\n      0x1b\n        /* \"#utility.yul\":5817:5835   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5810:5840   */\n      mstore\n        /* \"#utility.yul\":5876:5905   */\n      0x44726f707369746520697320616c72656164792053746f707065640000000000\n        /* \"#utility.yul\":5856:5874   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5849:5906   */\n      mstore\n        /* \"#utility.yul\":5923:5941   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2092:2147  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_68\n        /* \"#utility.yul\":5596:5947   */\n      jump\n        /* \"Dropsite.sol\":2092:2147  require(IsPaused==false, \"Dropsite is already Stopped\") */\n    tag_160:\n        /* \"Dropsite.sol\":2157:2165  IsPaused */\n      0x0c\n        /* \"Dropsite.sol\":2157:2170  IsPaused=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Dropsite.sol\":2166:2170  true */\n      0x01\n        /* \"Dropsite.sol\":2157:2170  IsPaused=true */\n      or\n      swap1\n      sstore\n        /* \"Dropsite.sol\":2042:2177  function stopDropsite() public OnlyOwner{... */\n      jump\t// out\n        /* \"Dropsite.sol\":1807:1893  function setMintFee(uint _mintFee) public OnlyOwner {... */\n    tag_63:\n        /* \"Dropsite.sol\":1023:1028  Owner */\n      sload(0x0c)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1007:1028  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":999:1061  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_165:\n        /* \"Dropsite.sol\":1869:1877  mintFees */\n      0x06\n        /* \"Dropsite.sol\":1869:1886  mintFees=_mintFee */\n      sstore\n        /* \"Dropsite.sol\":1807:1893  function setMintFee(uint _mintFee) public OnlyOwner {... */\n      jump\t// out\n        /* \"Dropsite.sol\":3247:4849  function updateConditions() internal contractIsNotPaused returns(uint) {... */\n    tag_102:\n        /* \"Dropsite.sol\":1176:1184  IsPaused */\n      sload(0x0c)\n        /* \"Dropsite.sol\":3312:3316  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1176:1184  IsPaused */\n      0xff\n      and\n        /* \"Dropsite.sol\":1176:1193  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1167:1226  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_96\n      jump\t// in\n    tag_170:\n        /* \"Dropsite.sol\":3327:3337  uint index */\n      0x00\n        /* \"Dropsite.sol\":3340:3348  random() */\n      tag_173\n        /* \"Dropsite.sol\":3340:3346  random */\n      tag_174\n        /* \"Dropsite.sol\":3340:3348  random() */\n      jump\t// in\n    tag_173:\n        /* \"Dropsite.sol\":3327:3348  uint index = random() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":3358:3368  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":3371:3375  nums */\n      0x03\n        /* \"Dropsite.sol\":3376:3381  index */\n      dup3\n        /* \"Dropsite.sol\":3371:3382  nums[index] */\n      0x14\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      0x20\n      dup2\n      div\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      0x1f\n      swap1\n      swap3\n      and\n      0x0100\n      exp\n      swap1\n      div\n      and\n      swap1\n      pop\n        /* \"Dropsite.sol\":3479:3489  nftId == 0 */\n      dup1\n      iszero\n        /* \"Dropsite.sol\":3479:3505  nftId == 0 && Diamond < 50 */\n      dup1\n      iszero\n      tag_179\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3503:3505  50 */\n      0x32\n        /* \"Dropsite.sol\":3493:3500  Diamond */\n      sload(0x07)\n        /* \"Dropsite.sol\":3493:3505  Diamond < 50 */\n      lt\n        /* \"Dropsite.sol\":3479:3505  nftId == 0 && Diamond < 50 */\n    tag_179:\n        /* \"Dropsite.sol\":3476:4844  if(nftId == 0 && Diamond < 50) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"Dropsite.sol\":3522:3529  Diamond */\n      0x07\n        /* \"Dropsite.sol\":3522:3531  Diamond++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":3522:3529  Diamond */\n      0x00\n        /* \"Dropsite.sol\":3522:3531  Diamond++ */\n      tag_181\n      dup4\n      tag_112\n      jump\t// in\n    tag_181:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":3587:3612  Strings.toString(Diamond) */\n      tag_182\n        /* \"Dropsite.sol\":3604:3611  Diamond */\n      sload(0x07)\n        /* \"Dropsite.sol\":3587:3603  Strings.toString */\n      tag_183\n        /* \"Dropsite.sol\":3587:3612  Strings.toString(Diamond) */\n      jump\t// in\n    tag_182:\n        /* \"Dropsite.sol\":3559:3613  abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)) */\n      add(0x20, mload(0x40))\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":3545:3549  data */\n      0x02\n        /* \"Dropsite.sol\":3545:3614  data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond))) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      pop\n        /* \"Dropsite.sol\":3648:3653  nftId */\n      swap2\n      pop\n        /* \"Dropsite.sol\":3641:3653  return nftId */\n      tag_70\n      swap1\n      pop\n      jump\n        /* \"Dropsite.sol\":3476:4844  if(nftId == 0 && Diamond < 50) {... */\n    tag_180:\n        /* \"Dropsite.sol\":3777:3778  1 */\n      0x01\n        /* \"Dropsite.sol\":3768:3773  nftId */\n      dup2\n        /* \"Dropsite.sol\":3768:3778  nftId <= 1 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":3768:3792  nftId <= 1 && Gold < 100 */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3789:3792  100 */\n      0x64\n        /* \"Dropsite.sol\":3782:3786  Gold */\n      sload(0x08)\n        /* \"Dropsite.sol\":3782:3792  Gold < 100 */\n      lt\n        /* \"Dropsite.sol\":3768:3792  nftId <= 1 && Gold < 100 */\n    tag_189:\n        /* \"Dropsite.sol\":3765:4844  if(nftId <= 1 && Gold < 100) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"Dropsite.sol\":3808:3812  Gold */\n      0x08\n        /* \"Dropsite.sol\":3808:3814  Gold++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":3808:3812  Gold */\n      0x00\n        /* \"Dropsite.sol\":3808:3814  Gold++ */\n      tag_191\n      dup4\n      tag_112\n      jump\t// in\n    tag_191:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":3867:3889  Strings.toString(Gold) */\n      tag_192\n        /* \"Dropsite.sol\":3884:3888  Gold */\n      sload(0x08)\n        /* \"Dropsite.sol\":3867:3883  Strings.toString */\n      tag_183\n        /* \"Dropsite.sol\":3867:3889  Strings.toString(Gold) */\n      jump\t// in\n    tag_192:\n        /* \"Dropsite.sol\":3842:3890  abi.encodePacked(\"Gold_\",Strings.toString(Gold)) */\n      add(0x20, mload(0x40))\n      tag_184\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n        /* \"Dropsite.sol\":3765:4844  if(nftId <= 1 && Gold < 100) {... */\n    tag_190:\n        /* \"Dropsite.sol\":4047:4048  2 */\n      0x02\n        /* \"Dropsite.sol\":4038:4043  nftId */\n      dup2\n        /* \"Dropsite.sol\":4038:4048  nftId <= 2 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":4038:4065  nftId <= 2 && Silver <= 850 */\n      dup1\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"Dropsite.sol\":4062:4065  850 */\n      0x0352\n        /* \"Dropsite.sol\":4052:4058  Silver */\n      sload(0x09)\n        /* \"Dropsite.sol\":4052:4065  Silver <= 850 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":4038:4065  nftId <= 2 && Silver <= 850 */\n    tag_197:\n        /* \"Dropsite.sol\":4035:4844  if(nftId <= 2 && Silver <= 850) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"Dropsite.sol\":4081:4087  Silver */\n      0x09\n        /* \"Dropsite.sol\":4081:4089  Silver++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":4081:4087  Silver */\n      0x00\n        /* \"Dropsite.sol\":4081:4089  Silver++ */\n      tag_199\n      dup4\n      tag_112\n      jump\t// in\n    tag_199:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":4149:4173  Strings.toString(Silver) */\n      tag_200\n        /* \"Dropsite.sol\":4166:4172  Silver */\n      sload(0x09)\n        /* \"Dropsite.sol\":4149:4165  Strings.toString */\n      tag_183\n        /* \"Dropsite.sol\":4149:4173  Strings.toString(Silver) */\n      jump\t// in\n    tag_200:\n        /* \"Dropsite.sol\":4122:4174  abi.encodePacked(\"Silver_\",Strings.toString(Silver)) */\n      add(0x20, mload(0x40))\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":4108:4112  data */\n      0x02\n        /* \"Dropsite.sol\":4108:4175  data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver))) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_203\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_203:\n        /* \"Dropsite.sol\":4103:4107  data */\n      0x02\n        /* \"Dropsite.sol\":4103:4175  data=data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver))) */\n      swap1\n      dup1\n      sload\n      tag_204\n      swap1\n      tag_105\n      jump\t// in\n    tag_204:\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n        /* \"Dropsite.sol\":4035:4844  if(nftId <= 2 && Silver <= 850) {... */\n    tag_198:\n        /* \"Dropsite.sol\":4426:4429  100 */\n      0x64\n        /* \"Dropsite.sol\":4419:4423  Gold */\n      sload(0x08)\n        /* \"Dropsite.sol\":4419:4429  Gold < 100 */\n      lt\n        /* \"Dropsite.sol\":4416:4835  if(Gold < 100) {... */\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"Dropsite.sol\":4476:4480  Gold */\n      0x08\n        /* \"Dropsite.sol\":4476:4482  Gold++ */\n      dup1\n      sload\n        /* \"Dropsite.sol\":4457:4458  1 */\n      0x01\n      swap2\n        /* \"Dropsite.sol\":4476:4480  Gold */\n      0x00\n        /* \"Dropsite.sol\":4476:4482  Gold++ */\n      tag_191\n      dup4\n      tag_112\n      jump\t// in\n        /* \"Dropsite.sol\":4416:4835  if(Gold < 100) {... */\n    tag_208:\n      pop\n        /* \"Dropsite.sol\":4677:4684  Diamond */\n      0x07\n        /* \"Dropsite.sol\":4677:4686  Diamond++ */\n      dup1\n      sload\n        /* \"Dropsite.sol\":4658:4659  0 */\n      0x00\n      swap2\n      dup3\n        /* \"Dropsite.sol\":4677:4686  Diamond++ */\n      tag_181\n      dup4\n      tag_112\n      jump\t// in\n        /* \"ERC1155_Dropsite.sol\":835:1387  function _mint(... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":983:999  to != address(0) */\n      dup5\n      and\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7579:7581   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7561:7582   */\n      mstore\n        /* \"#utility.yul\":7618:7620   */\n      0x21\n        /* \"#utility.yul\":7598:7616   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7591:7621   */\n      mstore\n        /* \"#utility.yul\":7657:7691   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":7637:7655   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7630:7692   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7708:7726   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7701:7732   */\n      mstore\n        /* \"#utility.yul\":7749:7768   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_68\n        /* \"#utility.yul\":7377:7774   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_219:\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC1155_Dropsite.sol\":1090:1192  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_223\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1048:1064  address operator */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1133:1135  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1137:1158  _asSingletonArray(id) */\n      tag_224\n        /* \"ERC1155_Dropsite.sol\":1155:1157  id */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1137:1154  _asSingletonArray */\n      tag_225\n        /* \"ERC1155_Dropsite.sol\":1137:1158  _asSingletonArray(id) */\n      jump\t// in\n    tag_224:\n        /* \"ERC1155_Dropsite.sol\":1160:1185  _asSingletonArray(amount) */\n      tag_226\n        /* \"ERC1155_Dropsite.sol\":1178:1184  amount */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1160:1177  _asSingletonArray */\n      tag_225\n        /* \"ERC1155_Dropsite.sol\":1160:1185  _asSingletonArray(amount) */\n      jump\t// in\n    tag_226:\n        /* \"ERC1155_Dropsite.sol\":1394:1609  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"ERC1155_Dropsite.sol\":1090:1192  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_223:\n        /* \"ERC1155_Dropsite.sol\":1202:1211  _balances */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1202:1215  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1202:1219  _balances[id][to] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"ERC1155_Dropsite.sol\":1202:1229  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"ERC1155_Dropsite.sol\":1223:1229  amount */\n      dup6\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1202:1211  _balances */\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1202:1229  _balances[id][to] += amount */\n      tag_228\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1223:1229  amount */\n      dup5\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1202:1229  _balances[id][to] += amount */\n      tag_229\n      jump\t// in\n    tag_228:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8431:8456   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8487:8489   */\n      0x20\n        /* \"#utility.yul\":8472:8490   */\n      dup2\n      add\n        /* \"#utility.yul\":8465:8499   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup9\n      and\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1277:1278  0 */\n      0x00\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":8404:8422   */\n      add\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155_Dropsite.sol\":1306:1380  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_226\n        /* \"ERC1155_Dropsite.sol\":1337:1345  operator */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1355:1356  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1359:1361  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1363:1365  id */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1367:1373  amount */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1375:1379  data */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1306:1336  _doSafeTransferAcceptanceCheck */\n      tag_233\n        /* \"ERC1155_Dropsite.sol\":1306:1380  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n        /* \"Dropsite.sol\":5387:5506  function depositAmount(address payee,uint amountToDeposit) internal {... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":5465:5480  deposits[payee] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":5465:5473  deposits */\n      0x0b\n        /* \"Dropsite.sol\":5465:5480  deposits[payee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Dropsite.sol\":5465:5499  deposits[payee] += amountToDeposit */\n      dup1\n      sload\n        /* \"Dropsite.sol\":5484:5499  amountToDeposit */\n      dup4\n      swap3\n        /* \"Dropsite.sol\":5465:5480  deposits[payee] */\n      swap1\n        /* \"Dropsite.sol\":5465:5499  deposits[payee] += amountToDeposit */\n      tag_235\n      swap1\n        /* \"Dropsite.sol\":5484:5499  amountToDeposit */\n      dup5\n      swap1\n        /* \"Dropsite.sol\":5465:5499  deposits[payee] += amountToDeposit */\n      tag_229\n      jump\t// in\n    tag_235:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":5387:5506  function depositAmount(address payee,uint amountToDeposit) internal {... */\n      jump\t// out\n        /* \"Dropsite.sol\":2866:3062  function random() internal view returns (uint) {... */\n    tag_174:\n        /* \"Dropsite.sol\":2907:2911  uint */\n      0x00\n        /* \"Dropsite.sol\":2943:2960  uint randomnumber */\n      dup1\n        /* \"Dropsite.sol\":3028:3030  20 */\n      0x14\n        /* \"Dropsite.sol\":2995:3010  block.timestamp */\n      timestamp\n        /* \"Dropsite.sol\":3012:3022  msg.sender */\n      caller\n        /* \"Dropsite.sol\":2978:3023  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_237\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2712:2731   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2769:2771   */\n      0x60\n        /* \"#utility.yul\":2765:2780   */\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":2761:2814   */\n      and\n        /* \"#utility.yul\":2756:2758   */\n      0x20\n        /* \"#utility.yul\":2747:2759   */\n      dup3\n      add\n        /* \"#utility.yul\":2740:2815   */\n      mstore\n        /* \"#utility.yul\":2840:2842   */\n      0x34\n        /* \"#utility.yul\":2831:2843   */\n      add\n      swap1\n        /* \"#utility.yul\":2555:2849   */\n      jump\n        /* \"Dropsite.sol\":2978:3023  abi.encodePacked(block.timestamp, msg.sender) */\n    tag_237:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":2968:3024  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Dropsite.sol\":2963:3025  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"Dropsite.sol\":2963:3030  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20 */\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"Dropsite.sol\":2943:3030  uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20 */\n      swap3\n        /* \"Dropsite.sol\":2866:3062  function random() internal view returns (uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Strings.sol\":329:1032  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_183:\n        /* \"Strings.sol\":385:398  string memory */\n      0x60\n        /* \"Strings.sol\":602:612  value == 0 */\n      dup2\n        /* \"Strings.sol\":598:649  if (value == 0) {... */\n      tag_242\n      jumpi\n      pop\n      pop\n        /* \"Strings.sol\":628:638  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"Strings.sol\":329:1032  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"Strings.sol\":598:649  if (value == 0) {... */\n    tag_242:\n        /* \"Strings.sol\":673:678  value */\n      dup2\n        /* \"Strings.sol\":658:670  uint256 temp */\n      0x00\n        /* \"Strings.sol\":712:787  while (temp != 0) {... */\n    tag_243:\n        /* \"Strings.sol\":719:728  temp != 0 */\n      dup2\n      iszero\n        /* \"Strings.sol\":712:787  while (temp != 0) {... */\n      tag_244\n      jumpi\n        /* \"Strings.sol\":744:752  digits++ */\n      dup1\n      tag_245\n      dup2\n      tag_112\n      jump\t// in\n    tag_245:\n      swap2\n      pop\n        /* \"Strings.sol\":766:776  temp /= 10 */\n      tag_246\n      swap1\n      pop\n        /* \"Strings.sol\":774:776  10 */\n      0x0a\n        /* \"Strings.sol\":766:776  temp /= 10 */\n      dup4\n      tag_247\n      jump\t// in\n    tag_246:\n      swap2\n      pop\n        /* \"Strings.sol\":712:787  while (temp != 0) {... */\n      jump(tag_243)\n    tag_244:\n        /* \"Strings.sol\":796:815  bytes memory buffer */\n      0x00\n        /* \"Strings.sol\":828:834  digits */\n      dup2\n        /* \"Strings.sol\":818:835  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_249\n      jumpi\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_251:\n      pop\n        /* \"Strings.sol\":796:835  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"Strings.sol\":845:995  while (value != 0) {... */\n    tag_252:\n        /* \"Strings.sol\":852:862  value != 0 */\n      dup5\n      iszero\n        /* \"Strings.sol\":845:995  while (value != 0) {... */\n      tag_253\n      jumpi\n        /* \"Strings.sol\":878:889  digits -= 1 */\n      tag_254\n        /* \"Strings.sol\":888:889  1 */\n      0x01\n        /* \"Strings.sol\":878:889  digits -= 1 */\n      dup4\n      tag_255\n      jump\t// in\n    tag_254:\n      swap2\n      pop\n        /* \"Strings.sol\":946:956  value % 10 */\n      tag_256\n        /* \"Strings.sol\":954:956  10 */\n      0x0a\n        /* \"Strings.sol\":946:951  value */\n      dup7\n        /* \"Strings.sol\":946:956  value % 10 */\n      tag_240\n      jump\t// in\n    tag_256:\n        /* \"Strings.sol\":933:957  48 + uint256(value % 10) */\n      tag_257\n      swap1\n        /* \"Strings.sol\":933:935  48 */\n      0x30\n        /* \"Strings.sol\":933:957  48 + uint256(value % 10) */\n      tag_229\n      jump\t// in\n    tag_257:\n        /* \"Strings.sol\":920:959  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"Strings.sol\":903:909  buffer */\n      dup2\n        /* \"Strings.sol\":910:916  digits */\n      dup4\n        /* \"Strings.sol\":903:917  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_177\n      jump\t// in\n    tag_259:\n      0x20\n      add\n      add\n        /* \"Strings.sol\":903:959  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Strings.sol\":973:984  value /= 10 */\n      tag_260\n        /* \"Strings.sol\":982:984  10 */\n      0x0a\n        /* \"Strings.sol\":973:984  value /= 10 */\n      dup7\n      tag_247\n      jump\t// in\n    tag_260:\n      swap5\n      pop\n        /* \"Strings.sol\":845:995  while (value != 0) {... */\n      jump(tag_252)\n    tag_253:\n        /* \"Strings.sol\":1018:1024  buffer */\n      swap5\n        /* \"Strings.sol\":329:1032  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":2347:2540  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_225:\n        /* \"ERC1155_Dropsite.sol\":2466:2482  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"ERC1155_Dropsite.sol\":2480:2481  1 */\n      0x01\n        /* \"ERC1155_Dropsite.sol\":2466:2482  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"ERC1155_Dropsite.sol\":2413:2429  uint256[] memory */\n      0x60\n      swap2\n        /* \"ERC1155_Dropsite.sol\":2441:2463  uint256[] memory array */\n      0x00\n      swap2\n        /* \"ERC1155_Dropsite.sol\":2466:2482  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":2441:2482  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155_Dropsite.sol\":2503:2510  element */\n      dup3\n        /* \"ERC1155_Dropsite.sol\":2492:2497  array */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":2498:2499  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":2492:2500  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_266\n      jumpi\n      tag_266\n      tag_177\n      jump\t// in\n    tag_266:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ERC1155_Dropsite.sol\":2492:2510  array[0] = element */\n      mstore\n        /* \"ERC1155_Dropsite.sol\":2528:2533  array */\n      swap3\n        /* \"ERC1155_Dropsite.sol\":2347:2540  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1394:1609  function _beforeTokenTransfer(... */\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1615:2341  function _doSafeTransferAcceptanceCheck(... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1823:1836  to.isContract */\n      dup5\n      and\n        /* \"Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"ERC1155_Dropsite.sol\":1819:2335  if (to.isContract()) {... */\n      tag_227\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":1858:1930  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe3, 0x15d13449)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1858:1896  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xae89a248\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1858:1930  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_272\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1897:1905  operator */\n      dup10\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1907:1911  from */\n      dup10\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1913:1915  id */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1917:1923  amount */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1925:1929  data */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1858:1930  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_273\n      jump\t// in\n    tag_272:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_276\n      swap2\n      dup2\n      add\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      0x01\n    tag_275:\n        /* \"ERC1155_Dropsite.sol\":1854:2325  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_278\n      jumpi\n      tag_282\n      tag_283\n      jump\t// in\n    tag_282:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_281\n      jumpi\n      pop\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n      dup1\n      tag_286\n      jumpi\n      pop\n      jump(tag_280)\n    tag_286:\n        /* \"ERC1155_Dropsite.sol\":2201:2207  reason */\n      dup1\n        /* \"ERC1155_Dropsite.sol\":2194:2208  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n        /* \"ERC1155_Dropsite.sol\":1854:2325  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_281:\n      pop\n    tag_280:\n        /* \"ERC1155_Dropsite.sol\":2248:2310  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":2248:2310  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x34\n        /* \"#utility.yul\":4284:4302   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4437   */\n      mstore\n        /* \"#utility.yul\":4454:4473   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":2248:2310  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_68\n        /* \"#utility.yul\":4063:4479   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":1854:2325  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_278:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"ERC1155_Dropsite.sol\":1979:2034  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe3, 0x15d13449)\n      eq\n        /* \"ERC1155_Dropsite.sol\":1975:2127  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_292\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":2058:2108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":2058:2108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4668:4689   */\n      mstore\n        /* \"#utility.yul\":4725:4727   */\n      0x28\n        /* \"#utility.yul\":4705:4723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4698:4728   */\n      mstore\n        /* \"#utility.yul\":4764:4798   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":4744:4762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4737:4799   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":4815:4833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4808:4846   */\n      mstore\n        /* \"#utility.yul\":4863:4882   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":2058:2108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_68\n        /* \"#utility.yul\":4484:4888   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":1975:2127  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_292:\n        /* \"ERC1155_Dropsite.sol\":1931:2141  returns (bytes4 response) {... */\n      pop\n        /* \"ERC1155_Dropsite.sol\":1615:2341  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_187:\n      dup3\n      dup1\n      sload\n      tag_296\n      swap1\n      tag_105\n      jump\t// in\n    tag_296:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_298\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_301)\n    tag_298:\n      dup3\n      0x1f\n      lt\n      tag_299\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_301)\n    tag_299:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_301\n      jumpi\n      swap2\n      dup3\n      add\n    tag_300:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_300)\n    tag_301:\n      pop\n      tag_302\n      swap3\n      swap2\n      pop\n      tag_303\n      jump\t// in\n    tag_302:\n      pop\n      swap1\n      jump\t// out\n    tag_206:\n      dup3\n      dup1\n      sload\n      tag_304\n      swap1\n      tag_105\n      jump\t// in\n    tag_304:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_306\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_301)\n    tag_306:\n      dup3\n      0x1f\n      lt\n      tag_307\n      jumpi\n      dup1\n      sload\n      dup6\n      sstore\n      jump(tag_301)\n    tag_307:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_301\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap2\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup3\n      add\n    tag_308:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      dup3\n      sload\n      dup3\n      sstore\n      swap2\n      0x01\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_308)\n    tag_303:\n    tag_311:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_302\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_311)\n        /* \"#utility.yul\":14:261   */\n    tag_34:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_315:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_316\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":14:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":526:816   */\n    tag_277:\n        /* \"#utility.yul\":595:601   */\n      0x00\n        /* \"#utility.yul\":648:650   */\n      0x20\n        /* \"#utility.yul\":636:645   */\n      dup3\n        /* \"#utility.yul\":627:634   */\n      dup5\n        /* \"#utility.yul\":623:646   */\n      sub\n        /* \"#utility.yul\":619:651   */\n      slt\n        /* \"#utility.yul\":616:668   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":661:662   */\n      dup1\n        /* \"#utility.yul\":654:666   */\n      revert\n        /* \"#utility.yul\":616:668   */\n    tag_322:\n        /* \"#utility.yul\":690:706   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":735:767   */\n      dup2\n      and\n        /* \"#utility.yul\":725:768   */\n      dup2\n      eq\n        /* \"#utility.yul\":715:786   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":782:783   */\n      0x00\n        /* \"#utility.yul\":779:780   */\n      dup1\n        /* \"#utility.yul\":772:784   */\n      revert\n        /* \"#utility.yul\":821:1001   */\n    tag_62:\n        /* \"#utility.yul\":880:886   */\n      0x00\n        /* \"#utility.yul\":933:935   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup3\n        /* \"#utility.yul\":912:919   */\n      dup5\n        /* \"#utility.yul\":908:931   */\n      sub\n        /* \"#utility.yul\":904:936   */\n      slt\n        /* \"#utility.yul\":901:953   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":949:950   */\n      0x00\n        /* \"#utility.yul\":946:947   */\n      dup1\n        /* \"#utility.yul\":939:951   */\n      revert\n        /* \"#utility.yul\":901:953   */\n    tag_325:\n      pop\n        /* \"#utility.yul\":972:995   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":821:1001   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1006:1264   */\n    tag_326:\n        /* \"#utility.yul\":1048:1051   */\n      0x00\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1080:1092   */\n      mload\n        /* \"#utility.yul\":1113:1119   */\n      dup1\n        /* \"#utility.yul\":1108:1111   */\n      dup5\n        /* \"#utility.yul\":1101:1120   */\n      mstore\n        /* \"#utility.yul\":1129:1192   */\n      tag_328\n        /* \"#utility.yul\":1185:1191   */\n      dup2\n        /* \"#utility.yul\":1178:1182   */\n      0x20\n        /* \"#utility.yul\":1173:1176   */\n      dup7\n        /* \"#utility.yul\":1169:1183   */\n      add\n        /* \"#utility.yul\":1162:1166   */\n      0x20\n        /* \"#utility.yul\":1155:1160   */\n      dup7\n        /* \"#utility.yul\":1151:1167   */\n      add\n        /* \"#utility.yul\":1129:1192   */\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1246:1248   */\n      0x1f\n        /* \"#utility.yul\":1225:1240   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1221:1250   */\n      and\n        /* \"#utility.yul\":1212:1251   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1253:1257   */\n      0x20\n        /* \"#utility.yul\":1208:1258   */\n      add\n      swap3\n        /* \"#utility.yul\":1006:1264   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1269:1694   */\n    tag_185:\n      shl(0xc0, 0x4469616d6f6e645f)\n        /* \"#utility.yul\":1526:1529   */\n      dup2\n        /* \"#utility.yul\":1519:1542   */\n      mstore\n        /* \"#utility.yul\":1501:1504   */\n      0x00\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1565:1578   */\n      mload\n        /* \"#utility.yul\":1587:1648   */\n      tag_331\n        /* \"#utility.yul\":1641:1647   */\n      dup2\n        /* \"#utility.yul\":1637:1638   */\n      0x08\n        /* \"#utility.yul\":1632:1635   */\n      dup6\n        /* \"#utility.yul\":1628:1639   */\n      add\n        /* \"#utility.yul\":1621:1625   */\n      0x20\n        /* \"#utility.yul\":1613:1619   */\n      dup8\n        /* \"#utility.yul\":1609:1626   */\n      add\n        /* \"#utility.yul\":1587:1648   */\n      tag_329\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1668:1684   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1686:1687   */\n      0x08\n        /* \"#utility.yul\":1664:1688   */\n      add\n      swap3\n        /* \"#utility.yul\":1269:1694   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:2121   */\n    tag_194:\n      shl(0xd8, 0x476f6c645f)\n        /* \"#utility.yul\":1956:1959   */\n      dup2\n        /* \"#utility.yul\":1949:1969   */\n      mstore\n        /* \"#utility.yul\":1931:1934   */\n      0x00\n        /* \"#utility.yul\":1998:2004   */\n      dup3\n        /* \"#utility.yul\":1992:2005   */\n      mload\n        /* \"#utility.yul\":2014:2075   */\n      tag_333\n        /* \"#utility.yul\":2068:2074   */\n      dup2\n        /* \"#utility.yul\":2064:2065   */\n      0x05\n        /* \"#utility.yul\":2059:2062   */\n      dup6\n        /* \"#utility.yul\":2055:2066   */\n      add\n        /* \"#utility.yul\":2048:2052   */\n      0x20\n        /* \"#utility.yul\":2040:2046   */\n      dup8\n        /* \"#utility.yul\":2036:2053   */\n      add\n        /* \"#utility.yul\":2014:2075   */\n      tag_329\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2095:2111   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2113:2114   */\n      0x05\n        /* \"#utility.yul\":2091:2115   */\n      add\n      swap3\n        /* \"#utility.yul\":1699:2121   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2550   */\n    tag_202:\n      shl(0xc8, 0x53696c7665725f)\n        /* \"#utility.yul\":2383:2386   */\n      dup2\n        /* \"#utility.yul\":2376:2398   */\n      mstore\n        /* \"#utility.yul\":2358:2361   */\n      0x00\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2421:2434   */\n      mload\n        /* \"#utility.yul\":2443:2504   */\n      tag_335\n        /* \"#utility.yul\":2497:2503   */\n      dup2\n        /* \"#utility.yul\":2493:2494   */\n      0x07\n        /* \"#utility.yul\":2488:2491   */\n      dup6\n        /* \"#utility.yul\":2484:2495   */\n      add\n        /* \"#utility.yul\":2477:2481   */\n      0x20\n        /* \"#utility.yul\":2469:2475   */\n      dup8\n        /* \"#utility.yul\":2465:2482   */\n      add\n        /* \"#utility.yul\":2443:2504   */\n      tag_329\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2524:2540   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2542:2543   */\n      0x07\n        /* \"#utility.yul\":2520:2544   */\n      add\n      swap3\n        /* \"#utility.yul\":2126:2550   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3078:3641   */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3377:3392   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":3359:3393   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3429:3444   */\n      dup6\n      and\n        /* \"#utility.yul\":3424:3426   */\n      0x20\n        /* \"#utility.yul\":3409:3427   */\n      dup3\n      add\n        /* \"#utility.yul\":3402:3445   */\n      mstore\n        /* \"#utility.yul\":3476:3478   */\n      0x40\n        /* \"#utility.yul\":3461:3479   */\n      dup2\n      add\n        /* \"#utility.yul\":3454:3488   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3519:3521   */\n      0x60\n        /* \"#utility.yul\":3504:3522   */\n      dup2\n      add\n        /* \"#utility.yul\":3497:3531   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3339:3342   */\n      0xa0\n        /* \"#utility.yul\":3562:3565   */\n      0x80\n        /* \"#utility.yul\":3547:3566   */\n      dup3\n      add\n        /* \"#utility.yul\":3540:3572   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3302:3306   */\n      0x00\n      swap1\n        /* \"#utility.yul\":3589:3635   */\n      tag_339\n      swap1\n        /* \"#utility.yul\":3615:3634   */\n      dup4\n      add\n        /* \"#utility.yul\":3607:3613   */\n      dup5\n        /* \"#utility.yul\":3589:3635   */\n      tag_326\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3581:3635   */\n      swap8\n        /* \"#utility.yul\":3078:3641   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4058   */\n    tag_288:\n        /* \"#utility.yul\":3987:3989   */\n      0x20\n        /* \"#utility.yul\":3976:3985   */\n      dup2\n        /* \"#utility.yul\":3969:3990   */\n      mstore\n        /* \"#utility.yul\":3950:3954   */\n      0x00\n        /* \"#utility.yul\":4007:4052   */\n      tag_316\n        /* \"#utility.yul\":4048:4050   */\n      0x20\n        /* \"#utility.yul\":4037:4046   */\n      dup4\n        /* \"#utility.yul\":4033:4051   */\n      add\n        /* \"#utility.yul\":4025:4031   */\n      dup5\n        /* \"#utility.yul\":4007:4052   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":5952:6304   */\n    tag_69:\n        /* \"#utility.yul\":6154:6156   */\n      0x20\n        /* \"#utility.yul\":6136:6157   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6193:6195   */\n      0x1c\n        /* \"#utility.yul\":6173:6191   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6166:6196   */\n      mstore\n        /* \"#utility.yul\":6232:6262   */\n      0x4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000\n        /* \"#utility.yul\":6227:6229   */\n      0x40\n        /* \"#utility.yul\":6212:6230   */\n      dup3\n      add\n        /* \"#utility.yul\":6205:6263   */\n      mstore\n        /* \"#utility.yul\":6295:6297   */\n      0x60\n        /* \"#utility.yul\":6280:6298   */\n      add\n      swap1\n        /* \"#utility.yul\":5952:6304   */\n      jump\t// out\n        /* \"#utility.yul\":6309:6660   */\n    tag_96:\n        /* \"#utility.yul\":6511:6513   */\n      0x20\n        /* \"#utility.yul\":6493:6514   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6550:6552   */\n      0x1b\n        /* \"#utility.yul\":6530:6548   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6523:6553   */\n      mstore\n        /* \"#utility.yul\":6589:6618   */\n      0x44726f7073697465206973206e6f74204f70656e6564205965742e0000000000\n        /* \"#utility.yul\":6584:6586   */\n      0x40\n        /* \"#utility.yul\":6569:6587   */\n      dup3\n      add\n        /* \"#utility.yul\":6562:6619   */\n      mstore\n        /* \"#utility.yul\":6651:6653   */\n      0x60\n        /* \"#utility.yul\":6636:6654   */\n      add\n      swap1\n        /* \"#utility.yul\":6309:6660   */\n      jump\t// out\n        /* \"#utility.yul\":7961:8252   */\n    tag_37:\n        /* \"#utility.yul\":8138:8144   */\n      dup3\n        /* \"#utility.yul\":8127:8136   */\n      dup2\n        /* \"#utility.yul\":8120:8145   */\n      mstore\n        /* \"#utility.yul\":8181:8183   */\n      0x40\n        /* \"#utility.yul\":8176:8178   */\n      0x20\n        /* \"#utility.yul\":8165:8174   */\n      dup3\n        /* \"#utility.yul\":8161:8179   */\n      add\n        /* \"#utility.yul\":8154:8184   */\n      mstore\n        /* \"#utility.yul\":8101:8105   */\n      0x00\n        /* \"#utility.yul\":8201:8246   */\n      tag_253\n        /* \"#utility.yul\":8242:8244   */\n      0x40\n        /* \"#utility.yul\":8231:8240   */\n      dup4\n        /* \"#utility.yul\":8227:8245   */\n      add\n        /* \"#utility.yul\":8219:8225   */\n      dup5\n        /* \"#utility.yul\":8201:8246   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":8834:8962   */\n    tag_229:\n        /* \"#utility.yul\":8874:8877   */\n      0x00\n        /* \"#utility.yul\":8905:8906   */\n      dup3\n        /* \"#utility.yul\":8901:8907   */\n      not\n        /* \"#utility.yul\":8898:8899   */\n      dup3\n        /* \"#utility.yul\":8895:8908   */\n      gt\n        /* \"#utility.yul\":8892:8931   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":8911:8929   */\n      tag_360\n      tag_361\n      jump\t// in\n    tag_360:\n      pop\n        /* \"#utility.yul\":8947:8956   */\n      add\n      swap1\n        /* \"#utility.yul\":8834:8962   */\n      jump\t// out\n        /* \"#utility.yul\":8967:9087   */\n    tag_247:\n        /* \"#utility.yul\":9007:9008   */\n      0x00\n        /* \"#utility.yul\":9033:9034   */\n      dup3\n        /* \"#utility.yul\":9023:9058   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":9038:9056   */\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n      pop\n        /* \"#utility.yul\":9072:9081   */\n      div\n      swap1\n        /* \"#utility.yul\":8967:9087   */\n      jump\t// out\n        /* \"#utility.yul\":9092:9217   */\n    tag_255:\n        /* \"#utility.yul\":9132:9136   */\n      0x00\n        /* \"#utility.yul\":9160:9161   */\n      dup3\n        /* \"#utility.yul\":9157:9158   */\n      dup3\n        /* \"#utility.yul\":9154:9162   */\n      lt\n        /* \"#utility.yul\":9151:9185   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9165:9183   */\n      tag_368\n      tag_361\n      jump\t// in\n    tag_368:\n      pop\n        /* \"#utility.yul\":9202:9211   */\n      sub\n      swap1\n        /* \"#utility.yul\":9092:9217   */\n      jump\t// out\n        /* \"#utility.yul\":9222:9480   */\n    tag_329:\n        /* \"#utility.yul\":9294:9295   */\n      0x00\n        /* \"#utility.yul\":9304:9417   */\n    tag_370:\n        /* \"#utility.yul\":9318:9324   */\n      dup4\n        /* \"#utility.yul\":9315:9316   */\n      dup2\n        /* \"#utility.yul\":9312:9325   */\n      lt\n        /* \"#utility.yul\":9304:9417   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":9394:9405   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9388:9406   */\n      mload\n        /* \"#utility.yul\":9375:9386   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9368:9407   */\n      mstore\n        /* \"#utility.yul\":9340:9342   */\n      0x20\n        /* \"#utility.yul\":9333:9343   */\n      add\n        /* \"#utility.yul\":9304:9417   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":9435:9441   */\n      dup4\n        /* \"#utility.yul\":9432:9433   */\n      dup2\n        /* \"#utility.yul\":9429:9442   */\n      gt\n        /* \"#utility.yul\":9426:9474   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9470:9471   */\n      0x00\n        /* \"#utility.yul\":9461:9467   */\n      dup5\n        /* \"#utility.yul\":9456:9459   */\n      dup5\n        /* \"#utility.yul\":9452:9468   */\n      add\n        /* \"#utility.yul\":9445:9472   */\n      mstore\n        /* \"#utility.yul\":9426:9474   */\n    tag_373:\n      pop\n        /* \"#utility.yul\":9222:9480   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9485:9865   */\n    tag_105:\n        /* \"#utility.yul\":9564:9565   */\n      0x01\n        /* \"#utility.yul\":9560:9572   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9607:9619   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9628:9689   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":9682:9686   */\n      0x7f\n        /* \"#utility.yul\":9674:9680   */\n      dup3\n        /* \"#utility.yul\":9670:9687   */\n      and\n        /* \"#utility.yul\":9660:9687   */\n      swap2\n      pop\n        /* \"#utility.yul\":9628:9689   */\n    tag_375:\n        /* \"#utility.yul\":9735:9737   */\n      0x20\n        /* \"#utility.yul\":9727:9733   */\n      dup3\n        /* \"#utility.yul\":9724:9738   */\n      lt\n        /* \"#utility.yul\":9704:9722   */\n      dup2\n        /* \"#utility.yul\":9701:9739   */\n      eq\n        /* \"#utility.yul\":9698:9859   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":9781:9791   */\n      0x4e487b71\n        /* \"#utility.yul\":9776:9779   */\n      0xe0\n        /* \"#utility.yul\":9772:9792   */\n      shl\n        /* \"#utility.yul\":9769:9770   */\n      0x00\n        /* \"#utility.yul\":9762:9793   */\n      mstore\n        /* \"#utility.yul\":9816:9820   */\n      0x22\n        /* \"#utility.yul\":9813:9814   */\n      0x04\n        /* \"#utility.yul\":9806:9821   */\n      mstore\n        /* \"#utility.yul\":9844:9848   */\n      0x24\n        /* \"#utility.yul\":9841:9842   */\n      0x00\n        /* \"#utility.yul\":9834:9849   */\n      revert\n        /* \"#utility.yul\":9698:9859   */\n    tag_376:\n      pop\n        /* \"#utility.yul\":9485:9865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9870:10216   */\n    tag_377:\n        /* \"#utility.yul\":9980:9982   */\n      0x1f\n        /* \"#utility.yul\":9961:9974   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9957:9984   */\n      and\n        /* \"#utility.yul\":9945:9985   */\n      dup2\n      add\n        /* \"#utility.yul\":10015:10033   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10000:10034   */\n      dup2\n      gt\n        /* \"#utility.yul\":10036:10058   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":9997:10059   */\n      or\n        /* \"#utility.yul\":9994:10179   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":10101:10111   */\n      0x4e487b71\n        /* \"#utility.yul\":10096:10099   */\n      0xe0\n        /* \"#utility.yul\":10092:10112   */\n      shl\n        /* \"#utility.yul\":10089:10090   */\n      0x00\n        /* \"#utility.yul\":10082:10113   */\n      mstore\n        /* \"#utility.yul\":10136:10140   */\n      0x41\n        /* \"#utility.yul\":10133:10134   */\n      0x04\n        /* \"#utility.yul\":10126:10141   */\n      mstore\n        /* \"#utility.yul\":10164:10168   */\n      0x24\n        /* \"#utility.yul\":10161:10162   */\n      0x00\n        /* \"#utility.yul\":10154:10169   */\n      revert\n        /* \"#utility.yul\":9994:10179   */\n    tag_379:\n        /* \"#utility.yul\":10195:10197   */\n      0x40\n        /* \"#utility.yul\":10188:10210   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":9870:10216   */\n      jump\t// out\n        /* \"#utility.yul\":10221:10356   */\n    tag_112:\n        /* \"#utility.yul\":10260:10263   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10281:10298   */\n      dup3\n      eq\n        /* \"#utility.yul\":10278:10321   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":10301:10319   */\n      tag_382\n      tag_361\n      jump\t// in\n    tag_382:\n      pop\n        /* \"#utility.yul\":10348:10349   */\n      0x01\n        /* \"#utility.yul\":10337:10350   */\n      add\n      swap1\n        /* \"#utility.yul\":10221:10356   */\n      jump\t// out\n        /* \"#utility.yul\":10361:10473   */\n    tag_240:\n        /* \"#utility.yul\":10393:10394   */\n      0x00\n        /* \"#utility.yul\":10419:10420   */\n      dup3\n        /* \"#utility.yul\":10409:10444   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":10424:10442   */\n      tag_385\n      tag_365\n      jump\t// in\n    tag_385:\n      pop\n        /* \"#utility.yul\":10458:10467   */\n      mod\n      swap1\n        /* \"#utility.yul\":10361:10473   */\n      jump\t// out\n        /* \"#utility.yul\":10478:10605   */\n    tag_361:\n        /* \"#utility.yul\":10539:10549   */\n      0x4e487b71\n        /* \"#utility.yul\":10534:10537   */\n      0xe0\n        /* \"#utility.yul\":10530:10550   */\n      shl\n        /* \"#utility.yul\":10527:10528   */\n      0x00\n        /* \"#utility.yul\":10520:10551   */\n      mstore\n        /* \"#utility.yul\":10570:10574   */\n      0x11\n        /* \"#utility.yul\":10567:10568   */\n      0x04\n        /* \"#utility.yul\":10560:10575   */\n      mstore\n        /* \"#utility.yul\":10594:10598   */\n      0x24\n        /* \"#utility.yul\":10591:10592   */\n      0x00\n        /* \"#utility.yul\":10584:10599   */\n      revert\n        /* \"#utility.yul\":10610:10737   */\n    tag_365:\n        /* \"#utility.yul\":10671:10681   */\n      0x4e487b71\n        /* \"#utility.yul\":10666:10669   */\n      0xe0\n        /* \"#utility.yul\":10662:10682   */\n      shl\n        /* \"#utility.yul\":10659:10660   */\n      0x00\n        /* \"#utility.yul\":10652:10683   */\n      mstore\n        /* \"#utility.yul\":10702:10706   */\n      0x12\n        /* \"#utility.yul\":10699:10700   */\n      0x04\n        /* \"#utility.yul\":10692:10707   */\n      mstore\n        /* \"#utility.yul\":10726:10730   */\n      0x24\n        /* \"#utility.yul\":10723:10724   */\n      0x00\n        /* \"#utility.yul\":10716:10731   */\n      revert\n        /* \"#utility.yul\":10742:10869   */\n    tag_177:\n        /* \"#utility.yul\":10803:10813   */\n      0x4e487b71\n        /* \"#utility.yul\":10798:10801   */\n      0xe0\n        /* \"#utility.yul\":10794:10814   */\n      shl\n        /* \"#utility.yul\":10791:10792   */\n      0x00\n        /* \"#utility.yul\":10784:10815   */\n      mstore\n        /* \"#utility.yul\":10834:10838   */\n      0x32\n        /* \"#utility.yul\":10831:10832   */\n      0x04\n        /* \"#utility.yul\":10824:10839   */\n      mstore\n        /* \"#utility.yul\":10858:10862   */\n      0x24\n        /* \"#utility.yul\":10855:10856   */\n      0x00\n        /* \"#utility.yul\":10848:10863   */\n      revert\n        /* \"#utility.yul\":10874:11001   */\n    tag_250:\n        /* \"#utility.yul\":10935:10945   */\n      0x4e487b71\n        /* \"#utility.yul\":10930:10933   */\n      0xe0\n        /* \"#utility.yul\":10926:10946   */\n      shl\n        /* \"#utility.yul\":10923:10924   */\n      0x00\n        /* \"#utility.yul\":10916:10947   */\n      mstore\n        /* \"#utility.yul\":10966:10970   */\n      0x41\n        /* \"#utility.yul\":10963:10964   */\n      0x04\n        /* \"#utility.yul\":10956:10971   */\n      mstore\n        /* \"#utility.yul\":10990:10994   */\n      0x24\n        /* \"#utility.yul\":10987:10988   */\n      0x00\n        /* \"#utility.yul\":10980:10995   */\n      revert\n        /* \"#utility.yul\":11006:11185   */\n    tag_283:\n        /* \"#utility.yul\":11041:11044   */\n      0x00\n        /* \"#utility.yul\":11083:11084   */\n      0x03\n        /* \"#utility.yul\":11065:11081   */\n      returndatasize\n        /* \"#utility.yul\":11062:11085   */\n      gt\n        /* \"#utility.yul\":11059:11179   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":11129:11130   */\n      0x04\n        /* \"#utility.yul\":11126:11127   */\n      0x00\n        /* \"#utility.yul\":11123:11124   */\n      dup1\n        /* \"#utility.yul\":11108:11131   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":11166:11167   */\n      0x00\n        /* \"#utility.yul\":11160:11168   */\n      mload\n        /* \"#utility.yul\":11155:11158   */\n      0xe0\n        /* \"#utility.yul\":11151:11169   */\n      shr\n        /* \"#utility.yul\":11006:11185   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11190:11861   */\n    tag_285:\n        /* \"#utility.yul\":11229:11232   */\n      0x00\n        /* \"#utility.yul\":11271:11275   */\n      0x44\n        /* \"#utility.yul\":11253:11269   */\n      returndatasize\n        /* \"#utility.yul\":11250:11276   */\n      lt\n        /* \"#utility.yul\":11247:11286   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":11190:11861   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11247:11286   */\n    tag_393:\n        /* \"#utility.yul\":11313:11315   */\n      0x40\n        /* \"#utility.yul\":11307:11316   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":11378:11394   */\n      returndatasize\n        /* \"#utility.yul\":11374:11399   */\n      dup2\n      add\n        /* \"#utility.yul\":11371:11372   */\n      0x04\n        /* \"#utility.yul\":11307:11316   */\n      dup4\n        /* \"#utility.yul\":11350:11400   */\n      returndatacopy\n        /* \"#utility.yul\":11429:11433   */\n      dup2\n        /* \"#utility.yul\":11423:11434   */\n      mload\n        /* \"#utility.yul\":11453:11469   */\n      returndatasize\n        /* \"#utility.yul\":11488:11506   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11559:11561   */\n      dup2\n        /* \"#utility.yul\":11552:11556   */\n      0x24\n        /* \"#utility.yul\":11544:11550   */\n      dup5\n        /* \"#utility.yul\":11540:11557   */\n      add\n        /* \"#utility.yul\":11537:11562   */\n      gt\n        /* \"#utility.yul\":11532:11534   */\n      dup2\n        /* \"#utility.yul\":11524:11530   */\n      dup5\n        /* \"#utility.yul\":11521:11535   */\n      gt\n        /* \"#utility.yul\":11518:11563   */\n      or\n        /* \"#utility.yul\":11515:11573   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":11566:11571   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11190:11861   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11515:11573   */\n    tag_394:\n        /* \"#utility.yul\":11603:11609   */\n      dup3\n        /* \"#utility.yul\":11597:11601   */\n      dup6\n        /* \"#utility.yul\":11593:11610   */\n      add\n        /* \"#utility.yul\":11582:11610   */\n      swap2\n      pop\n        /* \"#utility.yul\":11639:11642   */\n      dup2\n        /* \"#utility.yul\":11633:11643   */\n      mload\n        /* \"#utility.yul\":11666:11668   */\n      dup2\n        /* \"#utility.yul\":11658:11664   */\n      dup2\n        /* \"#utility.yul\":11655:11669   */\n      gt\n        /* \"#utility.yul\":11652:11679   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":11672:11677   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11190:11861   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11652:11679   */\n    tag_395:\n        /* \"#utility.yul\":11756:11758   */\n      dup5\n        /* \"#utility.yul\":11737:11753   */\n      returndatasize\n        /* \"#utility.yul\":11731:11735   */\n      dup8\n        /* \"#utility.yul\":11727:11754   */\n      add\n        /* \"#utility.yul\":11723:11759   */\n      add\n        /* \"#utility.yul\":11716:11720   */\n      0x20\n        /* \"#utility.yul\":11707:11713   */\n      dup3\n        /* \"#utility.yul\":11702:11705   */\n      dup6\n        /* \"#utility.yul\":11698:11714   */\n      add\n        /* \"#utility.yul\":11694:11721   */\n      add\n        /* \"#utility.yul\":11691:11760   */\n      gt\n        /* \"#utility.yul\":11688:11770   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":11763:11768   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11190:11861   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11688:11770   */\n    tag_396:\n        /* \"#utility.yul\":11779:11836   */\n      tag_397\n        /* \"#utility.yul\":11830:11834   */\n      0x20\n        /* \"#utility.yul\":11821:11827   */\n      dup3\n        /* \"#utility.yul\":11813:11819   */\n      dup7\n        /* \"#utility.yul\":11809:11828   */\n      add\n        /* \"#utility.yul\":11805:11835   */\n      add\n        /* \"#utility.yul\":11799:11803   */\n      dup8\n        /* \"#utility.yul\":11779:11836   */\n      tag_377\n      jump\t// in\n    tag_397:\n      pop\n        /* \"#utility.yul\":11852:11855   */\n      swap1\n      swap6\n        /* \"#utility.yul\":11190:11861   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11866:11997   */\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11941:11972   */\n      dup2\n      and\n        /* \"#utility.yul\":11931:11973   */\n      dup2\n      eq\n        /* \"#utility.yul\":11921:11991   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":11987:11988   */\n      0x00\n        /* \"#utility.yul\":11984:11985   */\n      dup1\n        /* \"#utility.yul\":11977:11989   */\n      revert\n        /* \"#utility.yul\":11921:11991   */\n    tag_399:\n        /* \"#utility.yul\":11866:11997   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122040c72b607f9b4660158a34d2aec7f6264e406bb4dd642924b52113df28cd2d6d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_446": {
									"entryPoint": null,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:9"
															},
															"nodeType": "YulIf",
															"src": "136:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:9"
															},
															"nodeType": "YulIf",
															"src": "273:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:9"
															},
															"nodeType": "YulIf",
															"src": "357:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:9"
															},
															"nodeType": "YulIf",
															"src": "449:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:9"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:9"
															},
															"nodeType": "YulIf",
															"src": "632:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:9"
															},
															"nodeType": "YulIf",
															"src": "771:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:9",
																"statements": []
															},
															"src": "852:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:9"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:9"
															},
															"nodeType": "YulIf",
															"src": "990:80:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:9",
														"type": ""
													}
												],
												"src": "14:1087:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:9"
															},
															"nodeType": "YulIf",
															"src": "1249:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:9"
															},
															"nodeType": "YulIf",
															"src": "1319:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:9",
														"type": ""
													}
												],
												"src": "1106:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH3 0x1B SWAP2 PUSH1 0x2 SWAP2 PUSH3 0x159 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x280 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x180 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1A0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1C0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1E0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x200 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x220 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x240 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x260 DUP3 ADD MSTORE PUSH3 0xCE SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x14 PUSH3 0x1E8 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17FE CODESIZE SUB DUP1 PUSH3 0x17FE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x10C SWAP2 PUSH3 0x28F JUMP JUMPDEST DUP1 MLOAD PUSH3 0x121 SWAP1 PUSH1 0xD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x159 JUMP JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x9 SSTORE PUSH3 0x3BE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x167 SWAP1 PUSH3 0x36B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x18B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1D6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1D6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1D6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP PUSH3 0x1E4 SWAP3 SWAP2 POP PUSH3 0x278 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH3 0x1D6 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x23F JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x1FF JUMP JUMPDEST DUP1 ISZERO PUSH3 0x26E JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x23F JUMP JUMPDEST POP POP PUSH3 0x1E4 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1E4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x279 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x2E5 JUMPI PUSH3 0x2E5 PUSH3 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x310 JUMPI PUSH3 0x310 PUSH3 0x3A8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x34D JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x32E JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x35F JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x380 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1430 DUP1 PUSH3 0x3CE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B668059 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x32B61B4C EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0xF8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x13D PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x2E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP PUSH2 0x511 DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x521 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x563 SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE EQ PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420456E6F7567682042616C616E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x511 CALLER CALLVALUE PUSH2 0xB20 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E PUSH2 0xB51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x14 DUP2 LT PUSH2 0x885 JUMPI PUSH2 0x885 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x8AD JUMPI POP PUSH1 0x32 PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x910 JUMPI PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x8C2 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x8D2 PUSH1 0x7 SLOAD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x906 SWAP3 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST POP SWAP2 POP PUSH2 0x25E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x923 JUMPI POP PUSH1 0x64 PUSH1 0x8 SLOAD LT JUMPDEST ISZERO PUSH2 0x958 JUMPI PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x938 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x948 PUSH1 0x8 SLOAD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x96D JUMPI POP PUSH2 0x352 PUSH1 0x9 SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x9DF JUMPI PUSH1 0x9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x982 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x992 PUSH1 0x9 SLOAD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9C6 SWAP3 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x906 SWAP3 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x64 PUSH1 0x8 SLOAD LT ISZERO PUSH2 0x9FD JUMPI POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 PUSH2 0x938 DUP4 PUSH2 0x12B6 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x8C2 DUP4 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x250 JUMP JUMPDEST CALLER PUSH2 0xA90 DUP2 PUSH1 0x0 DUP8 PUSH2 0xA80 DUP9 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0xA89 DUP9 PUSH2 0xCB3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xAC0 SWAP1 DUP5 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA89 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB48 SWAP1 DUP5 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB84 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xBA7 SWAP2 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xBD1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xBFB JUMPI DUP1 PUSH2 0xBE5 DUP2 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF4 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x11E5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC16 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC40 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xCAB JUMPI PUSH2 0xC55 PUSH1 0x1 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC62 PUSH1 0xA DUP7 PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0xC6D SWAP1 PUSH1 0x30 PUSH2 0x11CD JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xCA4 PUSH1 0xA DUP7 PUSH2 0x11E5 JUMP JUMPDEST SWAP5 POP PUSH2 0xC44 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCED JUMPI PUSH2 0xCED PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15D13449 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xAE89A248 SWAP1 PUSH2 0xD4A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD94 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD91 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE41 JUMPI PUSH2 0xDA0 PUSH2 0x133D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xDDA JUMPI POP PUSH2 0xDB5 PUSH2 0x1358 JUMP JUMPDEST DUP1 PUSH2 0xDC0 JUMPI POP PUSH2 0xDDC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x15D13449 PUSH1 0xE3 SHL EQ PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x250 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xEC7 SWAP1 PUSH2 0x1240 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF2F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST POP PUSH2 0xF3B SWAP3 SWAP2 POP PUSH2 0xFBA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF4B SWAP1 PUSH2 0x1240 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF6D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF7E JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF2F JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF9F JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFEC DUP2 PUSH2 0x13E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x104E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x4469616D6F6E645F PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1085 DUP2 PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x8 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH5 0x476F6C645F PUSH1 0xD8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10B2 DUP2 PUSH1 0x5 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x5 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH7 0x53696C7665725F PUSH1 0xC8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10E1 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1128 SWAP1 DUP4 ADD DUP5 PUSH2 0x1036 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFEC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xCAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11E0 PUSH2 0x12E5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x12FB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120B PUSH2 0x12E5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x122B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1213 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1254 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1275 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12CA JUMPI PUSH2 0x12CA PUSH2 0x12E5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12E0 JUMPI PUSH2 0x12E0 PUSH2 0x12FB JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x25E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1366 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1396 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x13AE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13C8 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x127B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xC7 0x2B PUSH1 0x7F SWAP12 CHAINID PUSH1 0x15 DUP11 CALLVALUE 0xD2 0xAE 0xC7 0xF6 0x26 0x4E BLOCKHASH PUSH12 0xB4DD642924B52113DF28CD2D PUSH14 0x64736F6C63430008070033000000 ",
							"sourceMap": "241:16:2:-:0;146:5983;241:16;;;-1:-1:-1;146:5983:2;241:16;;;;;;;;:::i;:::-;-1:-1:-1;440:66:2;;;;;;;;-1:-1:-1;440:66:2;;468:1;440:66;;;;;;;;;;;;;472:1;440:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1251:27:2;;;-1:-1:-1;;1251:27:2;1274:4;1251:27;;;1345:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;;1409:5:2;:27;;-1:-1:-1;;;;;;1409:27:2;1425:10;1409:27;;;;;-1:-1:-1;1447:15:2;:17;;;-1:-1:-1;1498:11:2;:13;-1:-1:-1;1558:9:2;;;-1:-1:-1;1589:6:2;;;1605;:8;146:5983;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;146:5983:2;;;-1:-1:-1;146:5983:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;146:5983:2;;;-1:-1:-1;146:5983:2;;;;;;;;;;;;;;;14:1087:9;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:9;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:9;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:9:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;146:5983:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ContractBalance_562": {
									"entryPoint": 1517,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@CryptoRandomMint_874": {
									"entryPoint": 1581,
									"id": 874,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@FiatRandomMint_796": {
									"entryPoint": 957,
									"id": 796,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@IsPaused_404": {
									"entryPoint": null,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Owner_406": {
									"entryPoint": null,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_1085": {
									"entryPoint": 3251,
									"id": 1085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_994": {
									"entryPoint": 3326,
									"id": 994,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1057": {
									"entryPoint": 3334,
									"id": 1057,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_976": {
									"entryPoint": 2575,
									"id": 976,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkMintedCategoryWise_463": {
									"entryPoint": 1814,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@checkTotalMinted_485": {
									"entryPoint": 533,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositAmount_810": {
									"entryPoint": 2848,
									"id": 810,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@openDropsite_519": {
									"entryPoint": 802,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@random_587": {
									"entryPoint": 2897,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setMintFee_475": {
									"entryPoint": 2049,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stopDropsite_502": {
									"entryPoint": 1895,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_1259": {
									"entryPoint": 2989,
									"id": 1259,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateConditions_745": {
									"entryPoint": 2110,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withDraw_548": {
									"entryPoint": 609,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11999:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "392:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "392:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "392:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "365:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "374:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:32:9"
															},
															"nodeType": "YulIf",
															"src": "354:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "441:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "428:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "419:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "485:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "460:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "500:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "510:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "321:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:9",
														"type": ""
													}
												],
												"src": "266:255:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:210:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "652:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "661:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "654:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "654:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "654:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "627:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "619:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:32:9"
															},
															"nodeType": "YulIf",
															"src": "616:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "677:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "690:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "681:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "770:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "782:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "772:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "772:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "772:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "750:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "755:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "746:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "746:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "735:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "735:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "725:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:51:9"
															},
															"nodeType": "YulIf",
															"src": "715:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "795:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "805:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "572:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "583:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"src": "526:290:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "891:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "937:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "946:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "939:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "939:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "939:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "912:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "904:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:32:9"
															},
															"nodeType": "YulIf",
															"src": "901:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "962:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "985:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "972:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "962:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "857:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "868:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "880:6:9",
														"type": ""
													}
												],
												"src": "821:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1056:208:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1066:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1086:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1070:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1108:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1113:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1155:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1162:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1151:16:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1173:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1178:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1169:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1129:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:63:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1129:63:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1201:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1216:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1229:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1237:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1225:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1225:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1246:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1242:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1242:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1221:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1221:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1212:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1212:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1253:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1033:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1040:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1048:3:9",
														"type": ""
													}
												],
												"src": "1006:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:185:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1526:3:9"
																	},
																	{
																		"hexValue": "4469616d6f6e645f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1531:10:9",
																		"type": "",
																		"value": "Diamond_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:23:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:23:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1551:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1565:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1555:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1613:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1632:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1637:1:9",
																				"type": "",
																				"value": "8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:11:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1641:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1587:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1587:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1657:31:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1672:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1677:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1664:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:24:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1657:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1485:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1490:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1501:3:9",
														"type": ""
													}
												],
												"src": "1269:425:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1939:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:9"
																	},
																	{
																		"hexValue": "476f6c645f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1961:7:9",
																		"type": "",
																		"value": "Gold_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:20:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:20:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1978:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1992:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1982:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2040:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2048:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2059:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:1:9",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2055:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2055:11:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2014:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2014:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:31:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2099:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2104:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:1:9",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2091:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:24:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2084:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1915:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1920:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1931:3:9",
														"type": ""
													}
												],
												"src": "1699:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2366:184:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2383:3:9"
																	},
																	{
																		"hexValue": "53696c7665725f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2388:9:9",
																		"type": "",
																		"value": "Silver_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2407:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2421:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2411:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2469:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2477:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2465:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2465:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2488:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2493:1:9",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:11:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2497:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2443:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2443:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2513:31:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2528:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2533:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2542:1:9",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:24:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2342:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2358:3:9",
														"type": ""
													}
												],
												"src": "2126:424:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2702:147:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2719:3:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2724:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2756:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2747:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2769:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "2773:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2765:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2765:15:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2786:26:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2782:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2782:31:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2740:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2740:75:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2740:75:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2824:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2835:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2670:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2675:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2683:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2694:3:9",
														"type": ""
													}
												],
												"src": "2555:294:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2981:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2993:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2989:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2981:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3023:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3038:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3054:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3059:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3050:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3050:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3063:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3046:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3046:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3034:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2940:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2951:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2962:4:9",
														"type": ""
													}
												],
												"src": "2854:219:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3311:330:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3321:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3339:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3344:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3335:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3335:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3331:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3325:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3366:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3381:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3389:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3359:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3359:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3424:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3433:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3441:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3402:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3465:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3476:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3461:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3508:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3519:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3504:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3524:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3551:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3562:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3547:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3540:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3581:54:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3607:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3630:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3615:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3615:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3589:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:46:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3581:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3248:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3259:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3267:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3275:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3283:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3291:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3302:4:9",
														"type": ""
													}
												],
												"src": "3078:563:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3741:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3751:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3763:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3774:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3759:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3751:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3818:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3811:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3804:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3804:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3786:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3786:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3786:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3710:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3721:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3732:4:9",
														"type": ""
													}
												],
												"src": "3646:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3959:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3976:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3987:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3969:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3999:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4025:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4037:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4048:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4033:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4033:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4007:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4007:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3999:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3928:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3950:4:9",
														"type": ""
													}
												],
												"src": "3838:220:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4446:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4458:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4454:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4446:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:9",
														"type": ""
													}
												],
												"src": "4063:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4658:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4668:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4668:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4709:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4720:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4705:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4705:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4698:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4698:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4748:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4759:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4744:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4744:18:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4764:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4737:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4737:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4830:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:18:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4835:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4808:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4808:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4855:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4867:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4878:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4855:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4635:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4649:4:9",
														"type": ""
													}
												],
												"src": "4484:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5067:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5077:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5118:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5129:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5114:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5114:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5134:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5107:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5157:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5168:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5153:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5153:18:9"
																	},
																	{
																		"hexValue": "4e6f7420456e6f7567682042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5173:20:9",
																		"type": "",
																		"value": "Not Enough Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5146:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5203:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5215:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5226:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5211:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5211:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5203:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5044:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5058:4:9",
														"type": ""
													}
												],
												"src": "4893:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5414:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5431:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5442:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5465:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5476:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5461:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5461:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5481:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5454:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5454:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5515:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5500:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5500:18:9"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5520:29:9",
																		"type": "",
																		"value": "Dropsite is already Running"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5493:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5493:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5493:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5559:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5567:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5559:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5391:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5405:4:9",
														"type": ""
													}
												],
												"src": "5240:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5770:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5787:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5780:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5780:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5821:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5832:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5817:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5817:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5810:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5871:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:18:9"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5876:29:9",
																		"type": "",
																		"value": "Dropsite is already Stopped"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5849:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5915:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5927:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5923:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5915:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5747:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5761:4:9",
														"type": ""
													}
												],
												"src": "5596:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6143:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6154:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6136:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6177:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6188:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6173:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6173:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6193:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6166:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6166:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6216:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6227:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6212:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6212:18:9"
																	},
																	{
																		"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6232:30:9",
																		"type": "",
																		"value": "Only NFT-ES Owner can Access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6205:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6272:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6284:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6295:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6280:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6280:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6272:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6103:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6117:4:9",
														"type": ""
													}
												],
												"src": "5952:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6483:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6500:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6511:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6493:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6534:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6545:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6530:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6530:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6550:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6523:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6523:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6584:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6569:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6569:18:9"
																	},
																	{
																		"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6589:29:9",
																		"type": "",
																		"value": "Dropsite is not Opened Yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6562:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6562:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6562:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6628:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6640:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6651:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6636:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6628:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6460:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6474:4:9",
														"type": ""
													}
												],
												"src": "6309:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6839:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6856:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6867:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6849:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6890:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6901:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:9"
																	},
																	{
																		"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6945:27:9",
																		"type": "",
																		"value": "Max Minting Limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6982:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6994:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6990:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6816:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6830:4:9",
														"type": ""
													}
												],
												"src": "6665:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7193:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7210:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7221:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7203:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7203:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7203:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7244:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7255:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7240:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7233:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7283:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7294:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7279:18:9"
																	},
																	{
																		"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7299:31:9",
																		"type": "",
																		"value": "Error! No Balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7272:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7272:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7340:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7352:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7348:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7340:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7170:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7184:4:9",
														"type": ""
													}
												],
												"src": "7019:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7551:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7568:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7579:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7561:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7561:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7561:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7602:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7613:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7618:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7641:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7652:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7637:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7637:18:9"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7657:34:9",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7630:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7723:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7728:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7701:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7701:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7741:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7764:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7741:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7528:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7542:4:9",
														"type": ""
													}
												],
												"src": "7377:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7880:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7890:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7902:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7913:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7898:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7890:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7932:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7943:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7925:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7849:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7860:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7871:4:9",
														"type": ""
													}
												],
												"src": "7779:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8110:142:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8127:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8138:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8120:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8120:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8165:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8176:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8161:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8161:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8181:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8154:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8193:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8219:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8231:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8242:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8227:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8227:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8201:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8201:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8193:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8071:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8082:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8090:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8101:4:9",
														"type": ""
													}
												],
												"src": "7961:291:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8386:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8396:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8408:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8419:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8404:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8396:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8438:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8449:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8431:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8431:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8476:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8487:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8472:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8492:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8465:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8347:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8358:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8366:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8377:4:9",
														"type": ""
													}
												],
												"src": "8257:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8667:162:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8677:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8689:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8700:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8685:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8677:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8730:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8712:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8712:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8768:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8753:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8773:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8746:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8800:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8811:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8796:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8796:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8816:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8789:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8789:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8620:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8631:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8639:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8647:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8658:4:9",
														"type": ""
													}
												],
												"src": "8510:319:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8882:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8909:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8911:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8911:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8911:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8898:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8905:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8901:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8895:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:13:9"
															},
															"nodeType": "YulIf",
															"src": "8892:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8940:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8951:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8954:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8947:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8947:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8940:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8865:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8868:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8874:3:9",
														"type": ""
													}
												],
												"src": "8834:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9013:74:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9036:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9038:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9038:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9038:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9033:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9026:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9026:9:9"
															},
															"nodeType": "YulIf",
															"src": "9023:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9067:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9076:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9079:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9072:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9067:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8998:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9001:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9007:1:9",
														"type": ""
													}
												],
												"src": "8967:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9141:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9163:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9165:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9165:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9165:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9157:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9160:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9154:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9154:8:9"
															},
															"nodeType": "YulIf",
															"src": "9151:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9194:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9206:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9209:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9202:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9194:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9123:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9126:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9132:4:9",
														"type": ""
													}
												],
												"src": "9092:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9275:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9285:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9294:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9289:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9354:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9379:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9384:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9375:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9375:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9398:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9403:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9394:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9394:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9388:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9388:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9368:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9368:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9368:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9315:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9318:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9312:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9326:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9328:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9337:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9340:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9333:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9333:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9328:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9308:3:9",
																"statements": []
															},
															"src": "9304:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9443:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9456:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9461:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9452:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9452:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9470:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9445:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9445:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9445:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9432:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9435:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9429:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:13:9"
															},
															"nodeType": "YulIf",
															"src": "9426:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9253:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9258:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9263:6:9",
														"type": ""
													}
												],
												"src": "9222:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9540:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9550:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9564:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9567:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9560:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9560:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9581:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9611:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9617:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9585:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9658:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9660:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9674:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9682:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9670:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9670:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9660:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9638:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9631:26:9"
															},
															"nodeType": "YulIf",
															"src": "9628:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9748:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9769:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9776:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9781:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9772:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9772:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9762:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9762:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9762:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9813:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9816:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9806:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9806:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9806:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9841:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9844:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9834:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9834:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9834:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9704:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9727:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9735:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9724:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9724:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9701:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9701:38:9"
															},
															"nodeType": "YulIf",
															"src": "9698:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9520:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9529:6:9",
														"type": ""
													}
												],
												"src": "9485:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9917:299:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "9965:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9971:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9961:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9961:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9980:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9976:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9976:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10068:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10089:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10096:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10101:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10092:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10092:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10082:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10082:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10082:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10133:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10136:4:9",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10126:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10126:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10126:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10161:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10164:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10154:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10154:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10154:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10003:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10015:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10000:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10000:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10039:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10051:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10036:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9997:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9997:62:9"
															},
															"nodeType": "YulIf",
															"src": "9994:185:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10195:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10199:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10188:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10188:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10188:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9899:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9907:4:9",
														"type": ""
													}
												],
												"src": "9870:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10268:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10299:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10301:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10301:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10301:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10284:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10295:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10291:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10291:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10281:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:17:9"
															},
															"nodeType": "YulIf",
															"src": "10278:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10330:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10341:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10348:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10337:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10330:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10250:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10260:3:9",
														"type": ""
													}
												],
												"src": "10221:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10399:74:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10422:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10424:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10424:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10424:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10419:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10412:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:9:9"
															},
															"nodeType": "YulIf",
															"src": "10409:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10453:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10462:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10465:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "10458:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10453:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10384:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10387:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10393:1:9",
														"type": ""
													}
												],
												"src": "10361:112:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10510:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10527:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10534:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10539:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10530:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10530:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10520:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10520:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10570:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10560:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10591:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10594:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10584:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10584:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10584:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10478:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10642:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10666:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10671:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10662:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10652:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10652:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10699:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10702:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10692:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10692:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10692:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10723:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10726:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10716:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10610:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10774:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10791:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10798:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10803:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10794:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10794:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10784:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10784:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10784:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10831:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10834:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10824:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10824:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10824:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10855:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10858:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10848:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10848:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10848:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10742:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10906:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10923:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10930:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10935:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10916:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10963:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10966:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10956:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10956:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10987:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10990:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10980:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10980:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10874:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11049:136:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11094:85:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11123:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11126:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11129:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "11108:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11108:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11108:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11144:25:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11155:3:9",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11166:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11160:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11160:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "11151:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11151:18:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "11144:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "11065:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11065:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11083:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11062:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:23:9"
															},
															"nodeType": "YulIf",
															"src": "11059:120:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "11041:3:9",
														"type": ""
													}
												],
												"src": "11006:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11237:624:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11277:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11279:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "11253:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11253:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11271:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11250:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:26:9"
															},
															"nodeType": "YulIf",
															"src": "11247:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11295:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11313:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11307:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11307:9:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "11299:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11325:16:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11339:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "11335:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11335:6:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11329:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11365:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11371:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "11378:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11378:16:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11396:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11374:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11374:25:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11350:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11350:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11350:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11409:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11429:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11423:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11413:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11443:26:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "11453:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11453:16:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11447:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11478:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11488:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11482:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11564:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11566:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11524:6:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11532:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11521:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11521:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11544:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11552:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11540:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11540:17:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11559:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11537:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11537:25:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11518:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11518:45:9"
															},
															"nodeType": "YulIf",
															"src": "11515:58:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11582:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11597:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11603:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11593:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "11586:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11619:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "11639:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11633:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11633:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11623:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11670:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11672:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11658:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11666:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11655:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11655:14:9"
															},
															"nodeType": "YulIf",
															"src": "11652:27:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11761:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11763:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "11702:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "11707:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11698:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11698:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11716:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11694:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11694:27:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "11731:4:9"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "11737:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11737:16:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11727:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11727:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11756:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11723:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11723:36:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11691:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11691:69:9"
															},
															"nodeType": "YulIf",
															"src": "11688:82:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11799:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11813:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "11821:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11809:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11809:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11830:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "11779:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11779:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11779:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11845:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "11852:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11845:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11229:3:9",
														"type": ""
													}
												],
												"src": "11190:671:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11911:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11975:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11984:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11987:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11977:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11977:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11977:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11934:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11945:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11960:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11965:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11956:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11956:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11969:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "11952:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11952:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11941:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11941:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11931:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11931:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11924:50:9"
															},
															"nodeType": "YulIf",
															"src": "11921:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11900:5:9",
														"type": ""
													}
												],
												"src": "11866:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Diamond_\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 8), length)\n        end := add(add(pos, length), 8)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Gold_\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 5), length)\n        end := add(add(pos, length), 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Silver_\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not Enough Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is already Running\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is already Stopped\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only NFT-ES Owner can Access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is not Opened Yet.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Max Minting Limit reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Error! No Balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009c5760003560e01c80633b668059116100645780633b6680591461014b5780633d65df701461016057806360daa85114610173578063aa90c726146101a3578063b4a99a4e146101b8578063eddd0d9c146101f557600080fd5b80630390c11c146100a15780630a67d2c7146100c95780631309a563146100de578063154602591461010857806332b61b4c1461011d575b600080fd5b3480156100ad57600080fd5b506100b6610215565b6040519081526020015b60405180910390f35b6100dc6100d7366004610fcf565b610261565b005b3480156100ea57600080fd5b50600c546100f89060ff1681565b60405190151581526020016100c0565b34801561011457600080fd5b506100dc610322565b34801561012957600080fd5b5061013d610138366004610fcf565b6103bd565b6040516100c09291906111b4565b34801561015757600080fd5b506100b66105ed565b61013d61016e366004610fcf565b61062d565b34801561017f57600080fd5b50610188610716565b604080519384526020840192909252908201526060016100c0565b3480156101af57600080fd5b506100dc610767565b3480156101c457600080fd5b50600c546101dd9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561020157600080fd5b506100dc61021036600461101d565b610801565b600c5460009061010090046001600160a01b0316336001600160a01b0316146102595760405162461bcd60e51b815260040161025090611146565b60405180910390fd5b506004545b90565b600c5461010090046001600160a01b0316336001600160a01b0316146102995760405162461bcd60e51b815260040161025090611146565b47806102e75760405162461bcd60e51b815260206004820152601d60248201527f4572726f7221204e6f2042616c616e636520746f2077697468647261770000006044820152606401610250565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561031d573d6000803e3d6000fd5b505050565b600c5461010090046001600160a01b0316336001600160a01b03161461035a5760405162461bcd60e51b815260040161025090611146565b600c5460ff1615156001146103b15760405162461bcd60e51b815260206004820152601b60248201527f44726f707369746520697320616c72656164792052756e6e696e6700000000006044820152606401610250565b600c805460ff19169055565b600c5460009060609061010090046001600160a01b0316336001600160a01b0316146103fb5760405162461bcd60e51b815260040161025090611146565b600c5460ff161561041e5760405162461bcd60e51b81526004016102509061117d565b6103e86004541061046d5760405162461bcd60e51b815260206004820152601960248201527813585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959603a1b6044820152606401610250565b600061047761083e565b905061051184826005546002805461048e90611240565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90611240565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050610a0f565b60048054906000610521836112b6565b90915550506001600160a01b0384166000908152600a602090815260408220805460018101825590835291200181905560028054829190819061056390611240565b80601f016020809104026020016040519081016040528092919081815260200182805461058f90611240565b80156105dc5780601f106105b1576101008083540402835291602001916105dc565b820191906000526020600020905b8154815290600101906020018083116105bf57829003601f168201915b505050505090509250925050915091565b600c5460009061010090046001600160a01b0316336001600160a01b0316146106285760405162461bcd60e51b815260040161025090611146565b504790565b600c5460009060609060ff16156106565760405162461bcd60e51b81526004016102509061117d565b6103e8600454106106a55760405162461bcd60e51b815260206004820152601960248201527813585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959603a1b6044820152606401610250565b60065434146106eb5760405162461bcd60e51b81526020600482015260126024820152714e6f7420456e6f7567682042616c616e636560701b6044820152606401610250565b60006106f561083e565b905061070c84826005546002805461048e90611240565b6105113334610b20565b600c546000908190819061010090046001600160a01b0316336001600160a01b0316146107555760405162461bcd60e51b815260040161025090611146565b50506007546008546009549193909250565b600c5461010090046001600160a01b0316336001600160a01b03161461079f5760405162461bcd60e51b815260040161025090611146565b600c5460ff16156107f25760405162461bcd60e51b815260206004820152601b60248201527f44726f707369746520697320616c72656164792053746f7070656400000000006044820152606401610250565b600c805460ff19166001179055565b600c5461010090046001600160a01b0316336001600160a01b0316146108395760405162461bcd60e51b815260040161025090611146565b600655565b600c5460009060ff16156108645760405162461bcd60e51b81526004016102509061117d565b600061086e610b51565b905060006003826014811061088557610885611311565b602081049091015460ff601f9092166101000a9004169050801580156108ad57506032600754105b1561091057600780549060006108c2836112b6565b91905055506108d2600754610bad565b6040516020016108e29190611062565b60405160208183030381529060405260029080519060200190610906929190610ebb565b50915061025e9050565b6001811115801561092357506064600854105b156109585760088054906000610938836112b6565b9190505550610948600854610bad565b6040516020016108e29190611092565b6002811115801561096d575061035260095411155b156109df5760098054906000610982836112b6565b9190505550610992600954610bad565b6040516020016109a291906110bf565b604051602081830303815290604052600290805190602001906109c6929190610ebb565b60029080546109d490611240565b610906929190610f3f565b606460085410156109fd5750600880546001916000610938836112b6565b5060078054600091826108c2836112b6565b6001600160a01b038416610a6f5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610250565b33610a9081600087610a8088610cb3565b610a8988610cb3565b5050505050565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610ac09084906111cd565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a8981600087878787610d06565b6001600160a01b0382166000908152600b602052604081208054839290610b489084906111cd565b90915550505050565b60008060144233604051602001610b8492919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c610ba791906112d1565b92915050565b606081610bd15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bfb5780610be5816112b6565b9150610bf49050600a836111e5565b9150610bd5565b60008167ffffffffffffffff811115610c1657610c16611327565b6040519080825280601f01601f191660200182016040528015610c40576020820181803683370190505b5090505b8415610cab57610c556001836111f9565b9150610c62600a866112d1565b610c6d9060306111cd565b60f81b818381518110610c8257610c82611311565b60200101906001600160f81b031916908160001a905350610ca4600a866111e5565b9450610c44565b949350505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ced57610ced611311565b602090810291909101015292915050565b505050505050565b6001600160a01b0384163b15610cfe576040516315d1344960e31b81526001600160a01b0385169063ae89a24890610d4a90899089908890889088906004016110ee565b602060405180830381600087803b158015610d6457600080fd5b505af1925050508015610d94575060408051601f3d908101601f19168201909252610d9191810190610ff3565b60015b610e4157610da061133d565b806308c379a01415610dda5750610db5611358565b80610dc05750610ddc565b8060405162461bcd60e51b81526004016102509190611133565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610250565b6001600160e01b031981166315d1344960e31b14610eb25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610250565b50505050505050565b828054610ec790611240565b90600052602060002090601f016020900481019282610ee95760008555610f2f565b82601f10610f0257805160ff1916838001178555610f2f565b82800160010185558215610f2f579182015b82811115610f2f578251825591602001919060010190610f14565b50610f3b929150610fba565b5090565b828054610f4b90611240565b90600052602060002090601f016020900481019282610f6d5760008555610f2f565b82601f10610f7e5780548555610f2f565b82800160010185558215610f2f57600052602060002091601f016020900482015b82811115610f2f578254825591600101919060010190610f9f565b5b80821115610f3b5760008155600101610fbb565b600060208284031215610fe157600080fd5b8135610fec816113e2565b9392505050565b60006020828403121561100557600080fd5b81516001600160e01b031981168114610fec57600080fd5b60006020828403121561102f57600080fd5b5035919050565b6000815180845261104e816020860160208601611210565b601f01601f19169290920160200192915050565b674469616d6f6e645f60c01b815260008251611085816008850160208701611210565b9190910160080192915050565b64476f6c645f60d81b8152600082516110b2816005850160208701611210565b9190910160050192915050565b6653696c7665725f60c81b8152600082516110e1816007850160208701611210565b9190910160070192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061112890830184611036565b979650505050505050565b602081526000610fec6020830184611036565b6020808252601c908201527f4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000604082015260600190565b6020808252601b908201527f44726f7073697465206973206e6f74204f70656e6564205965742e0000000000604082015260600190565b828152604060208201526000610cab6040830184611036565b600082198211156111e0576111e06112e5565b500190565b6000826111f4576111f46112fb565b500490565b60008282101561120b5761120b6112e5565b500390565b60005b8381101561122b578181015183820152602001611213565b8381111561123a576000848401525b50505050565b600181811c9082168061125457607f821691505b6020821081141561127557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156112af57634e487b7160e01b600052604160045260246000fd5b6040525050565b60006000198214156112ca576112ca6112e5565b5060010190565b6000826112e0576112e06112fb565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561025e5760046000803e5060005160e01c90565b600060443d10156113665790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561139657505050505090565b82850191508151818111156113ae5750505050505090565b843d87010160208285010111156113c85750505050505090565b6113d76020828601018761127b565b509095945050505050565b6001600160a01b03811681146113f757600080fd5b5056fea264697066735822122040c72b607f9b4660158a34d2aec7f6264e406bb4dd642924b52113df28cd2d6d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B668059 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x32B61B4C EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0xF8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x13D PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x2E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP PUSH2 0x511 DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x521 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x563 SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x1240 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE EQ PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420456E6F7567682042616C616E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x511 CALLER CALLVALUE PUSH2 0xB20 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E PUSH2 0xB51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x14 DUP2 LT PUSH2 0x885 JUMPI PUSH2 0x885 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x8AD JUMPI POP PUSH1 0x32 PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x910 JUMPI PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x8C2 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x8D2 PUSH1 0x7 SLOAD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x906 SWAP3 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST POP SWAP2 POP PUSH2 0x25E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x923 JUMPI POP PUSH1 0x64 PUSH1 0x8 SLOAD LT JUMPDEST ISZERO PUSH2 0x958 JUMPI PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x938 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x948 PUSH1 0x8 SLOAD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x96D JUMPI POP PUSH2 0x352 PUSH1 0x9 SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x9DF JUMPI PUSH1 0x9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x982 DUP4 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x992 PUSH1 0x9 SLOAD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9C6 SWAP3 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x906 SWAP3 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x64 PUSH1 0x8 SLOAD LT ISZERO PUSH2 0x9FD JUMPI POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 PUSH2 0x938 DUP4 PUSH2 0x12B6 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x8C2 DUP4 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x250 JUMP JUMPDEST CALLER PUSH2 0xA90 DUP2 PUSH1 0x0 DUP8 PUSH2 0xA80 DUP9 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0xA89 DUP9 PUSH2 0xCB3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xAC0 SWAP1 DUP5 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA89 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB48 SWAP1 DUP5 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB84 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xBA7 SWAP2 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xBD1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xBFB JUMPI DUP1 PUSH2 0xBE5 DUP2 PUSH2 0x12B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF4 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x11E5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC16 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC40 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xCAB JUMPI PUSH2 0xC55 PUSH1 0x1 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC62 PUSH1 0xA DUP7 PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0xC6D SWAP1 PUSH1 0x30 PUSH2 0x11CD JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xCA4 PUSH1 0xA DUP7 PUSH2 0x11E5 JUMP JUMPDEST SWAP5 POP PUSH2 0xC44 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCED JUMPI PUSH2 0xCED PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15D13449 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xAE89A248 SWAP1 PUSH2 0xD4A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD94 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD91 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE41 JUMPI PUSH2 0xDA0 PUSH2 0x133D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xDDA JUMPI POP PUSH2 0xDB5 PUSH2 0x1358 JUMP JUMPDEST DUP1 PUSH2 0xDC0 JUMPI POP PUSH2 0xDDC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x15D13449 PUSH1 0xE3 SHL EQ PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x250 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xEC7 SWAP1 PUSH2 0x1240 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF2F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST POP PUSH2 0xF3B SWAP3 SWAP2 POP PUSH2 0xFBA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF4B SWAP1 PUSH2 0x1240 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF6D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF7E JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xF2F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF2F JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF9F JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFEC DUP2 PUSH2 0x13E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x104E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x4469616D6F6E645F PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1085 DUP2 PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x8 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH5 0x476F6C645F PUSH1 0xD8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10B2 DUP2 PUSH1 0x5 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x5 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH7 0x53696C7665725F PUSH1 0xC8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10E1 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1128 SWAP1 DUP4 ADD DUP5 PUSH2 0x1036 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFEC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xCAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11E0 PUSH2 0x12E5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x12FB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120B PUSH2 0x12E5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x122B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1213 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1254 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1275 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12CA JUMPI PUSH2 0x12CA PUSH2 0x12E5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12E0 JUMPI PUSH2 0x12E0 PUSH2 0x12FB JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x25E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1366 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1396 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x13AE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13C8 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x127B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xC7 0x2B PUSH1 0x7F SWAP12 CHAINID PUSH1 0x15 DUP11 CALLVALUE 0xD2 0xAE 0xC7 0xF6 0x26 0x4E BLOCKHASH PUSH12 0xB4DD642924B52113DF28CD2D PUSH14 0x64736F6C63430008070033000000 ",
							"sourceMap": "146:5983:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1932:104;;;;;;;;;;;;;:::i;:::-;;;7925:25:9;;;7913:2;7898:18;1932:104:2;;;;;;;;2415:214;;;;;;:::i;:::-;;:::i;:::-;;1251:27;;;;;;;;;;-1:-1:-1;1251:27:2;;;;;;;;;;;3811:14:9;;3804:22;3786:41;;3774:2;3759:18;1251:27:2;3646:187:9;2184:136:2;;;;;;;;;;;;;:::i;4896:446::-;;;;;;;;;;-1:-1:-1;4896:446:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2682:108::-;;;;;;;;;;;;;:::i;5559:568::-;;;;;;:::i;:::-;;:::i;1674:127::-;;;;;;;;;;;;;:::i;:::-;;;;8712:25:9;;;8768:2;8753:18;;8746:34;;;;8796:18;;;8789:34;8700:2;8685:18;1674:127:2;8510:319:9;2042:135:2;;;;;;;;;;;;;:::i;1284:29::-;;;;;;;;;;-1:-1:-1;1284:29:2;;;;;;;-1:-1:-1;;;;;1284:29:2;;;;;;-1:-1:-1;;;;;3034:32:9;;;3016:51;;3004:2;2989:18;1284:29:2;2854:219:9;1807:86:2;;;;;;;;;;-1:-1:-1;1807:86:2;;;;;:::i;:::-;;:::i;1932:104::-;1023:5;;1990:4;;1023:5;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2013:15:2::1;::::0;1071:1:::1;1932:104:::0;:::o;2415:214::-;1023:5;;;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;2503:21:::1;2542:15:::0;2534:57:::1;;;::::0;-1:-1:-1;;;2534:57:2;;7221:2:9;2534:57:2::1;::::0;::::1;7203:21:9::0;7260:2;7240:18;;;7233:30;7299:31;7279:18;;;7272:59;7348:18;;2534:57:2::1;7019:353:9::0;2534:57:2::1;2602:20;::::0;-1:-1:-1;;;;;2602:11:2;::::1;::::0;:20;::::1;;;::::0;2614:7;;2602:20:::1;::::0;;;2614:7;2602:11;:20;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2478:151;2415:214:::0;:::o;2184:136::-;1023:5;;;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;2243:8:::1;::::0;::::1;;:14;;:8:::0;:14:::1;2235:54;;;::::0;-1:-1:-1;;;2235:54:2;;5442:2:9;2235:54:2::1;::::0;::::1;5424:21:9::0;5481:2;5461:18;;;5454:30;5520:29;5500:18;;;5493:57;5567:18;;2235:54:2::1;5240:351:9::0;2235:54:2::1;2299:8;:14:::0;;-1:-1:-1;;2299:14:2::1;::::0;;2184:136::o;4896:446::-;1023:5;;4985:4;;4990:13;;1023:5;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;1176:8:::1;::::0;::::1;;:17;1167:59;;;;-1:-1:-1::0;;;1167:59:2::1;;;;;;;:::i;:::-;5036:4:::2;5020:15;;:20;5012:58;;;::::0;-1:-1:-1;;;5012:58:2;;6867:2:9;5012:58:2::2;::::0;::::2;6849:21:9::0;6906:2;6886:18;;;6879:30;-1:-1:-1;;;6925:18:9;;;6918:55;6990:18;;5012:58:2::2;6665:349:9::0;5012:58:2::2;5133:10;5146:18;:16;:18::i;:::-;5133:31;;5170:42;5176:9;5187:5;5194:11;;5207:4;5170:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:42::i;:::-;5218:15;:17:::0;;;:15:::2;:17;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5241:29:2;::::2;;::::0;;;:18:::2;:29;::::0;;;;;;:61;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;;5329:4:::2;5308:27:::0;;5296:5;;5329:4;;;5308:27:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4896:446:::0;;;:::o;2682:108::-;1023:5;;2740:4;;1023:5;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;-1:-1:-1;2762:21:2::1;2682:108:::0;:::o;5559:568::-;1176:8;;5649:4;;5654:13;;1176:8;;:17;1167:59;;;;-1:-1:-1;;;1167:59:2;;;;;;;:::i;:::-;5700:4:::1;5684:15;;:20;5676:58;;;::::0;-1:-1:-1;;;5676:58:2;;6867:2:9;5676:58:2::1;::::0;::::1;6849:21:9::0;6906:2;6886:18;;;6879:30;-1:-1:-1;;;6925:18:9;;;6918:55;6990:18;;5676:58:2::1;6665:349:9::0;5676:58:2::1;5762:8;;5749:9;:21;5741:52;;;::::0;-1:-1:-1;;;5741:52:2;;5095:2:9;5741:52:2::1;::::0;::::1;5077:21:9::0;5134:2;5114:18;;;5107:30;-1:-1:-1;;;5153:18:9;;;5146:48;5211:18;;5741:52:2::1;4893:342:9::0;5741:52:2::1;5874:10;5887:18;:16;:18::i;:::-;5874:31;;5911:42;5917:9;5928:5;5935:11;;5948:4;5911:42;;;;;:::i;:::-;5959:38;719:10:1::0;5987:9:2::1;5959:13;:38::i;1674:127::-:0;1023:5;;1739:4;;;;;;1023:5;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;-1:-1:-1;;1773:7:2::1;::::0;1781:4:::1;::::0;1786:6:::1;::::0;1773:7;;1781:4;;-1:-1:-1;1674:127:2:o;2042:135::-;1023:5;;;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;2100:8:::1;::::0;::::1;;:15;2092:55;;;::::0;-1:-1:-1;;;2092:55:2;;5798:2:9;2092:55:2::1;::::0;::::1;5780:21:9::0;5837:2;5817:18;;;5810:30;5876:29;5856:18;;;5849:57;5923:18;;2092:55:2::1;5596:351:9::0;2092:55:2::1;2157:8;:13:::0;;-1:-1:-1;;2157:13:2::1;2166:4;2157:13;::::0;;2042:135::o;1807:86::-;1023:5;;;;;-1:-1:-1;;;;;1023:5:2;719:10:1;-1:-1:-1;;;;;1007:21:2;;999:62;;;;-1:-1:-1;;;999:62:2;;;;;;;:::i;:::-;1869:8:::1;:17:::0;1807:86::o;3247:1602::-;1176:8;;3312:4;;1176:8;;:17;1167:59;;;;-1:-1:-1;;;1167:59:2;;;;;;;:::i;:::-;3327:10:::1;3340:8;:6;:8::i;:::-;3327:21;;3358:10;3371:4;3376:5;3371:11;;;;;;;:::i;:::-;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;::::0;-1:-1:-1;3479:10:2;;:26;::::1;;;;3503:2;3493:7;;:12;3479:26;3476:1368;;;3522:7;:9:::0;;;:7:::1;:9;::::0;::::1;:::i;:::-;;;;;;3587:25;3604:7;;3587:16;:25::i;:::-;3559:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;3545:4;:69;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3648:5:2;-1:-1:-1;3641:12:2::1;::::0;-1:-1:-1;3641:12:2::1;3476:1368;3777:1;3768:5;:10;;:24;;;;;3789:3;3782:4;;:10;3768:24;3765:1079;;;3808:4;:6:::0;;;:4:::1;:6;::::0;::::1;:::i;:::-;;;;;;3867:22;3884:4;;3867:16;:22::i;:::-;3842:48;;;;;;;;:::i;3765:1079::-;4047:1;4038:5;:10;;:27;;;;;4062:3;4052:6;;:13;;4038:27;4035:809;;;4081:6;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;:::-;;;;;;4149:24;4166:6;;4149:16;:24::i;:::-;4122:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;4108:4;:67;;;;;;;;;;;;:::i;:::-;4103:4;:72;;;;;;:::i;:::-;;;;;;:::i;4035:809::-;4426:3;4419:4;;:10;4416:419;;;-1:-1:-1::0;4476:4:2::1;:6:::0;;4457:1:::1;::::0;4476:4:::1;:6;::::0;::::1;:::i;4416:419::-;-1:-1:-1::0;4677:7:2::1;:9:::0;;4658:1:::1;::::0;;4677:9:::1;::::0;::::1;:::i;835:552:3:-:0;-1:-1:-1;;;;;983:16:3;;975:62;;;;-1:-1:-1;;;975:62:3;;7579:2:9;975:62:3;;;7561:21:9;7618:2;7598:18;;;7591:30;7657:34;7637:18;;;7630:62;-1:-1:-1;;;7708:18:9;;;7701:31;7749:19;;975:62:3;7377:397:9;975:62:3;719:10:1;1090:102:3;719:10:1;1048:16:3;1133:2;1137:21;1155:2;1137:17;:21::i;:::-;1160:25;1178:6;1160:17;:25::i;:::-;1394:215;;;;;;1090:102;1202:9;:13;;;;;;;;;;;-1:-1:-1;;;;;1202:17:3;;;;;;;;;:27;;1223:6;;1202:9;:27;;1223:6;;1202:27;:::i;:::-;;;;-1:-1:-1;;1244:52:3;;;8431:25:9;;;8487:2;8472:18;;8465:34;;;-1:-1:-1;;;;;1244:52:3;;;;1277:1;;1244:52;;;;;;8404:18:9;1244:52:3;;;;;;;1306:74;1337:8;1355:1;1359:2;1363;1367:6;1375:4;1306:30;:74::i;5387:119:2:-;-1:-1:-1;;;;;5465:15:2;;;;;;:8;:15;;;;;:34;;5484:15;;5465;:34;;5484:15;;5465:34;:::i;:::-;;;;-1:-1:-1;;;;5387:119:2:o;2866:196::-;2907:4;2943:17;3028:2;2995:15;3012:10;2978:45;;;;;;;;2712:19:9;;;2769:2;2765:15;-1:-1:-1;;2761:53:9;2756:2;2747:12;;2740:75;2840:2;2831:12;;2555:294;2978:45:2;;;;;;;;;;;;;2968:56;;;;;;2963:62;;:67;;;;:::i;:::-;2943:87;2866:196;-1:-1:-1;;2866:196:2:o;329:703:8:-;385:13;602:10;598:51;;-1:-1:-1;;628:10:8;;;;;;;;;;;;-1:-1:-1;;;628:10:8;;;;;329:703::o;598:51::-;673:5;658:12;712:75;719:9;;712:75;;744:8;;;;:::i;:::-;;-1:-1:-1;766:10:8;;-1:-1:-1;774:2:8;766:10;;:::i;:::-;;;712:75;;;796:19;828:6;818:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;818:17:8;;796:39;;845:150;852:10;;845:150;;878:11;888:1;878:11;;:::i;:::-;;-1:-1:-1;946:10:8;954:2;946:5;:10;:::i;:::-;933:24;;:2;:24;:::i;:::-;920:39;;903:6;910;903:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;903:56:8;;;;;;;;-1:-1:-1;973:11:8;982:2;973:11;;:::i;:::-;;;845:150;;;1018:6;329:703;-1:-1:-1;;;;329:703:8:o;2347:193:3:-;2466:16;;;2480:1;2466:16;;;;;;;;;2413;;2441:22;;2466:16;;;;;;;;;;;;-1:-1:-1;2466:16:3;2441:41;;2503:7;2492:5;2498:1;2492:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;2528:5;2347:193;-1:-1:-1;;2347:193:3:o;1394:215::-;;;;;;;:::o;1615:726::-;-1:-1:-1;;;;;1823:13:3;;1087:20:0;1133:8;1819:516:3;;1858:72;;-1:-1:-1;;;1858:72:3;;-1:-1:-1;;;;;1858:38:3;;;;;:72;;1897:8;;1907:4;;1913:2;;1917:6;;1925:4;;1858:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1858:72:3;;;;;;;;-1:-1:-1;;1858:72:3;;;;;;;;;;;;:::i;:::-;;;1854:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2201:6;2194:14;;-1:-1:-1;;;2194:14:3;;;;;;;;:::i;1854:471::-;;;2248:62;;-1:-1:-1;;;2248:62:3;;4265:2:9;2248:62:3;;;4247:21:9;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:9;;;4387:50;4454:19;;2248:62:3;4063:416:9;1854:471:3;-1:-1:-1;;;;;;1979:55:3;;-1:-1:-1;;;1979:55:3;1975:152;;2058:50;;-1:-1:-1;;;2058:50:3;;4686:2:9;2058:50:3;;;4668:21:9;4725:2;4705:18;;;4698:30;4764:34;4744:18;;;4737:62;-1:-1:-1;;;4815:18:9;;;4808:38;4863:19;;2058:50:3;4484:404:9;1975:152:3;1931:210;1615:726;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:247:9;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:9:o;526:290::-;595:6;648:2;636:9;627:7;623:23;619:32;616:52;;;664:1;661;654:12;616:52;690:16;;-1:-1:-1;;;;;;735:32:9;;725:43;;715:71;;782:1;779;772:12;821:180;880:6;933:2;921:9;912:7;908:23;904:32;901:52;;;949:1;946;939:12;901:52;-1:-1:-1;972:23:9;;821:180;-1:-1:-1;821:180:9:o;1006:258::-;1048:3;1086:5;1080:12;1113:6;1108:3;1101:19;1129:63;1185:6;1178:4;1173:3;1169:14;1162:4;1155:5;1151:16;1129:63;:::i;:::-;1246:2;1225:15;-1:-1:-1;;1221:29:9;1212:39;;;;1253:4;1208:50;;1006:258;-1:-1:-1;;1006:258:9:o;1269:425::-;-1:-1:-1;;;1526:3:9;1519:23;1501:3;1571:6;1565:13;1587:61;1641:6;1637:1;1632:3;1628:11;1621:4;1613:6;1609:17;1587:61;:::i;:::-;1668:16;;;;1686:1;1664:24;;1269:425;-1:-1:-1;;1269:425:9:o;1699:422::-;-1:-1:-1;;;1956:3:9;1949:20;1931:3;1998:6;1992:13;2014:61;2068:6;2064:1;2059:3;2055:11;2048:4;2040:6;2036:17;2014:61;:::i;:::-;2095:16;;;;2113:1;2091:24;;1699:422;-1:-1:-1;;1699:422:9:o;2126:424::-;-1:-1:-1;;;2383:3:9;2376:22;2358:3;2427:6;2421:13;2443:61;2497:6;2493:1;2488:3;2484:11;2477:4;2469:6;2465:17;2443:61;:::i;:::-;2524:16;;;;2542:1;2520:24;;2126:424;-1:-1:-1;;2126:424:9:o;3078:563::-;-1:-1:-1;;;;;3377:15:9;;;3359:34;;3429:15;;3424:2;3409:18;;3402:43;3476:2;3461:18;;3454:34;;;3519:2;3504:18;;3497:34;;;3339:3;3562;3547:19;;3540:32;;;3302:4;;3589:46;;3615:19;;3607:6;3589:46;:::i;:::-;3581:54;3078:563;-1:-1:-1;;;;;;;3078:563:9:o;3838:220::-;3987:2;3976:9;3969:21;3950:4;4007:45;4048:2;4037:9;4033:18;4025:6;4007:45;:::i;5952:352::-;6154:2;6136:21;;;6193:2;6173:18;;;6166:30;6232;6227:2;6212:18;;6205:58;6295:2;6280:18;;5952:352::o;6309:351::-;6511:2;6493:21;;;6550:2;6530:18;;;6523:30;6589:29;6584:2;6569:18;;6562:57;6651:2;6636:18;;6309:351::o;7961:291::-;8138:6;8127:9;8120:25;8181:2;8176;8165:9;8161:18;8154:30;8101:4;8201:45;8242:2;8231:9;8227:18;8219:6;8201:45;:::i;8834:128::-;8874:3;8905:1;8901:6;8898:1;8895:13;8892:39;;;8911:18;;:::i;:::-;-1:-1:-1;8947:9:9;;8834:128::o;8967:120::-;9007:1;9033;9023:35;;9038:18;;:::i;:::-;-1:-1:-1;9072:9:9;;8967:120::o;9092:125::-;9132:4;9160:1;9157;9154:8;9151:34;;;9165:18;;:::i;:::-;-1:-1:-1;9202:9:9;;9092:125::o;9222:258::-;9294:1;9304:113;9318:6;9315:1;9312:13;9304:113;;;9394:11;;;9388:18;9375:11;;;9368:39;9340:2;9333:10;9304:113;;;9435:6;9432:1;9429:13;9426:48;;;9470:1;9461:6;9456:3;9452:16;9445:27;9426:48;;9222:258;;;:::o;9485:380::-;9564:1;9560:12;;;;9607;;;9628:61;;9682:4;9674:6;9670:17;9660:27;;9628:61;9735:2;9727:6;9724:14;9704:18;9701:38;9698:161;;;9781:10;9776:3;9772:20;9769:1;9762:31;9816:4;9813:1;9806:15;9844:4;9841:1;9834:15;9698:161;;9485:380;;;:::o;9870:346::-;9980:2;9961:13;;-1:-1:-1;;9957:27:9;9945:40;;10015:18;10000:34;;10036:22;;;9997:62;9994:185;;;10101:10;10096:3;10092:20;10089:1;10082:31;10136:4;10133:1;10126:15;10164:4;10161:1;10154:15;9994:185;10195:2;10188:22;-1:-1:-1;;9870:346:9:o;10221:135::-;10260:3;-1:-1:-1;;10281:17:9;;10278:43;;;10301:18;;:::i;:::-;-1:-1:-1;10348:1:9;10337:13;;10221:135::o;10361:112::-;10393:1;10419;10409:35;;10424:18;;:::i;:::-;-1:-1:-1;10458:9:9;;10361:112::o;10478:127::-;10539:10;10534:3;10530:20;10527:1;10520:31;10570:4;10567:1;10560:15;10594:4;10591:1;10584:15;10610:127;10671:10;10666:3;10662:20;10659:1;10652:31;10702:4;10699:1;10692:15;10726:4;10723:1;10716:15;10742:127;10803:10;10798:3;10794:20;10791:1;10784:31;10834:4;10831:1;10824:15;10858:4;10855:1;10848:15;10874:127;10935:10;10930:3;10926:20;10923:1;10916:31;10966:4;10963:1;10956:15;10990:4;10987:1;10980:15;11006:179;11041:3;11083:1;11065:16;11062:23;11059:120;;;11129:1;11126;11123;11108:23;-1:-1:-1;11166:1:9;11160:8;11155:3;11151:18;11006:179;:::o;11190:671::-;11229:3;11271:4;11253:16;11250:26;11247:39;;;11190:671;:::o;11247:39::-;11313:2;11307:9;-1:-1:-1;;11378:16:9;11374:25;;11371:1;11307:9;11350:50;11429:4;11423:11;11453:16;11488:18;11559:2;11552:4;11544:6;11540:17;11537:25;11532:2;11524:6;11521:14;11518:45;11515:58;;;11566:5;;;;;11190:671;:::o;11515:58::-;11603:6;11597:4;11593:17;11582:28;;11639:3;11633:10;11666:2;11658:6;11655:14;11652:27;;;11672:5;;;;;;11190:671;:::o;11652:27::-;11756:2;11737:16;11731:4;11727:27;11723:36;11716:4;11707:6;11702:3;11698:16;11694:27;11691:69;11688:82;;;11763:5;;;;;;11190:671;:::o;11688:82::-;11779:57;11830:4;11821:6;11813;11809:19;11805:30;11799:4;11779:57;:::i;:::-;-1:-1:-1;11852:3:9;;11190:671;-1:-1:-1;;;;;11190:671:9:o;11866:131::-;-1:-1:-1;;;;;11941:31:9;;11931:42;;11921:70;;11987:1;11984;11977:12;11921:70;11866:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1033600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ContractBalance()": "2447",
								"CryptoRandomMint(address)": "infinite",
								"FiatRandomMint(address)": "infinite",
								"IsPaused()": "2355",
								"Owner()": "2436",
								"checkMintedCategoryWise()": "8801",
								"checkTotalMinted()": "4475",
								"openDropsite()": "28733",
								"setMintFee(uint256)": "24603",
								"stopDropsite()": "28729",
								"withDraw(address)": "infinite"
							},
							"internal": {
								"depositAmount(address,uint256)": "24404",
								"random()": "infinite",
								"updateConditions()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "280"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 468,
									"end": 469,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 472,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "160"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "180"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "1A0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "1C0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "1E0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "200"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "220"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "240"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "260"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1278,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1345,
									"end": 1620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1392,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1387,
									"end": 1392,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1409,
									"end": 1414,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1435,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1409,
									"end": 1436,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1462,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1464,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1464,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1464,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1498,
									"end": 1509,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 1558,
									"end": 1567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1567,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 1589,
									"end": 1595,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1589,
									"end": 1595,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1589,
									"end": 1595,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1611,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1605,
									"end": 1613,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "POP",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6129,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040c72b607f9b4660158a34d2aec7f6264e406bb4dd642924b52113df28cd2d6d64736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "3D65DF70"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "60DAA851"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "AA90C726"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "B4A99A4E"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "EDDD0D9C"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "390C11C"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "A67D2C7"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "1309A563"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "15460259"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "32B61B4C"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6129,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 7950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7950,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 7915,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3827,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3776,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3646,
											"end": 3833,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8712,
											"end": 8737,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8737,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8746,
											"end": 8780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8746,
											"end": 8780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8746,
											"end": 8780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8746,
											"end": 8780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 8823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8700,
											"end": 8702,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 8510,
											"end": 8829,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2854,
											"end": 3073,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2524,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7221,
											"end": 7223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7203,
											"end": 7224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 7240,
											"end": 7258,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7240,
											"end": 7258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "PUSH",
											"source": 9,
											"value": "4572726F7221204E6F2042616C616E636520746F207769746864726177000000"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7272,
											"end": 7331,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7019,
											"end": 7372,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2613,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2629,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2251,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2243,
											"end": 2251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2251,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2243,
											"end": 2251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2251,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2243,
											"end": 2257,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5442,
											"end": 5444,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5445,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5483,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "44726F707369746520697320616C72656164792052756E6E696E670000000000"
										},
										{
											"begin": 5500,
											"end": 5518,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5500,
											"end": 5518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5500,
											"end": 5518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5493,
											"end": 5550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5240,
											"end": 5591,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2235,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 4989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5003,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4990,
											"end": 5003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1193,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5036,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5020,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5020,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6867,
											"end": 6869,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6918,
											"end": 6973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6665,
											"end": 7014,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5012,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5146,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5176,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5192,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5194,
											"end": 5205,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5194,
											"end": 5205,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5207,
											"end": 5211,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5170,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5259,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5302,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5296,
											"end": 5301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5296,
											"end": 5301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 5342,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2790,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5559,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 5667,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5654,
											"end": 5667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1193,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5684,
											"end": 5699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5684,
											"end": 5699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6867,
											"end": 6869,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6918,
											"end": 6973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6665,
											"end": 7014,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5676,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5077,
											"end": 5098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5114,
											"end": 5132,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5114,
											"end": 5132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420456E6F7567682042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5211,
											"end": 5229,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5211,
											"end": 5229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4893,
											"end": 5235,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5887,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5917,
											"end": 5926,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5935,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5935,
											"end": 5946,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5948,
											"end": 5952,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5911,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5959,
											"end": 5997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1674,
											"end": 1801,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5810,
											"end": 5840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5905,
											"name": "PUSH",
											"source": 9,
											"value": "44726F707369746520697320616C72656164792053746F707065640000000000"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5596,
											"end": 5947,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2092,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2177,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 999,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1869,
											"end": 1886,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1893,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 4849,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3247,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1193,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1167,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3340,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3340,
											"end": 3348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3340,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3340,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3505,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3479,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 4844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3476,
											"end": 4844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3587,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3587,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3587,
											"end": 3612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3587,
											"end": 3612,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3587,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3549,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3545,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 4844,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3476,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3778,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3778,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3792,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3782,
											"end": 3792,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 4844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3765,
											"end": 4844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3867,
											"end": 3889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3867,
											"end": 3889,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3867,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 4844,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3765,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4062,
											"end": 4065,
											"name": "PUSH",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4035,
											"end": 4844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4112,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4103,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4035,
											"end": 4844,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4035,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4429,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4419,
											"end": 4429,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4416,
											"end": 4835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4476,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4835,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4416,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4677,
											"end": 4684,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 1387,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 835,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 983,
											"end": 999,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 983,
											"end": 999,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7579,
											"end": 7581,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7620,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7691,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7630,
											"end": 7692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7768,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7749,
											"end": 7768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 7377,
											"end": 7774,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1192,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1090,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8431,
											"end": 8456,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8472,
											"end": 8490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8465,
											"end": 8499,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8465,
											"end": 8499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8465,
											"end": 8499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "PUSH",
											"source": 3,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1337,
											"end": 1345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1379,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1306,
											"end": 1380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5506,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5387,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5473,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5499,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5387,
											"end": 5506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2866,
											"end": 3062,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2866,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2731,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2731,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2771,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2761,
											"end": 2814,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2849,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3023,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 3024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2963,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3030,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 3062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3062,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 398,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 602,
											"end": 612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 598,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 598,
											"end": 649,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 649,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 598,
											"end": 649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 658,
											"end": 670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 719,
											"end": 728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 719,
											"end": 728,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 766,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 774,
											"end": 776,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 766,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 766,
											"end": 776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 712,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 712,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 796,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 818,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 796,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 852,
											"end": 862,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 852,
											"end": 862,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 878,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 888,
											"end": 889,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 878,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 933,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 959,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 920,
											"end": 959,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 903,
											"end": 959,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 959,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 973,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 973,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 973,
											"end": 984,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 973,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2429,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2413,
											"end": 2429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1836,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1819,
											"end": 2335,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15D13449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "AE89A248"
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1905,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1911,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A0"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4063,
											"end": 4479,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 2034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15D13449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2034,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4727,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4698,
											"end": 4728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4798,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 4744,
											"end": 4762,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4744,
											"end": 4762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4808,
											"end": 4846,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4882,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4863,
											"end": 4882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4484,
											"end": 4888,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 2141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "206"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "308"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "308"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "311"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "311"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 261,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 526,
											"end": 816,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 526,
											"end": 816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 595,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 627,
											"end": 634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 623,
											"end": 646,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 619,
											"end": 651,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 616,
											"end": 668,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 616,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 616,
											"end": 668,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 662,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 654,
											"end": 666,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 616,
											"end": 668,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 616,
											"end": 668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 690,
											"end": 706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 706,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 735,
											"end": 767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 735,
											"end": 767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 725,
											"end": 768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 715,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 715,
											"end": 786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 772,
											"end": 784,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 821,
											"end": 1001,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 880,
											"end": 886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 912,
											"end": 919,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 908,
											"end": 931,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 904,
											"end": 936,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 901,
											"end": 953,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 901,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 901,
											"end": 953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 949,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 951,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 901,
											"end": 953,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 901,
											"end": 953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 995,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 972,
											"end": 995,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 821,
											"end": 1001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 821,
											"end": 1001,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1264,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1006,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1092,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1176,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1166,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1160,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1225,
											"end": 1240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1250,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1251,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1251,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1264,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1264,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1269,
											"end": 1694,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1269,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4469616D6F6E645F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1526,
											"end": 1529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1542,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 1578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1641,
											"end": 1647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1632,
											"end": 1635,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1587,
											"end": 1648,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1587,
											"end": 1648,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1587,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1664,
											"end": 1688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1269,
											"end": 1694,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 2121,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1699,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "476F6C645F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1956,
											"end": 1959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1992,
											"end": 2005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2059,
											"end": 2062,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2014,
											"end": 2075,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2014,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2091,
											"end": 2115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2115,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 2121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 2121,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2550,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2126,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53696C7665725F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2488,
											"end": 2491,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2443,
											"end": 2504,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2443,
											"end": 2504,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2443,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2550,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3078,
											"end": 3641,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3078,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3444,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3444,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3445,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3521,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3531,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3547,
											"end": 3566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3547,
											"end": 3566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3589,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3589,
											"end": 3635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3589,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3635,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3641,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3078,
											"end": 3641,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3838,
											"end": 4058,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3838,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 3990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4048,
											"end": 4050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4025,
											"end": 4031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4007,
											"end": 4052,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 6304,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5952,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6136,
											"end": 6157,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6157,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 6173,
											"end": 6191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000"
										},
										{
											"begin": 6227,
											"end": 6229,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6280,
											"end": 6298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6280,
											"end": 6298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5952,
											"end": 6304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6309,
											"end": 6660,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6309,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6550,
											"end": 6552,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6523,
											"end": 6553,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 6618,
											"name": "PUSH",
											"source": 9,
											"value": "44726F7073697465206973206E6F74204F70656E6564205965742E0000000000"
										},
										{
											"begin": 6584,
											"end": 6586,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6660,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7961,
											"end": 8252,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7961,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8179,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8154,
											"end": 8184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 8242,
											"end": 8244,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8231,
											"end": 8240,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8219,
											"end": 8225,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8201,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 8201,
											"end": 8246,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8834,
											"end": 8962,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8834,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8874,
											"end": 8877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8908,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8931,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 8892,
											"end": 8931,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8947,
											"end": 8956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8947,
											"end": 8956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8834,
											"end": 8962,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8967,
											"end": 9087,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 8967,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9007,
											"end": 9008,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9023,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9023,
											"end": 9058,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9072,
											"end": 9081,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9087,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9092,
											"end": 9217,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 9092,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9162,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9185,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9151,
											"end": 9185,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9217,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9222,
											"end": 9480,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9222,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9324,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9325,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9394,
											"end": 9405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9394,
											"end": 9405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9394,
											"end": 9405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9368,
											"end": 9407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9333,
											"end": 9343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 9304,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9442,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9474,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 9426,
											"end": 9474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9467,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9474,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 9426,
											"end": 9474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9480,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9485,
											"end": 9865,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 9485,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9564,
											"end": 9565,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9560,
											"end": 9572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9572,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9619,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 9628,
											"end": 9689,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9682,
											"end": 9686,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9670,
											"end": 9687,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9660,
											"end": 9687,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9660,
											"end": 9687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9689,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 9628,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9735,
											"end": 9737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9727,
											"end": 9733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9738,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9859,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 9698,
											"end": 9859,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9816,
											"end": 9820,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9806,
											"end": 9821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9848,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9841,
											"end": 9842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9859,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 9698,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9865,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9870,
											"end": 10216,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 9870,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9980,
											"end": 9982,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9961,
											"end": 9974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 9974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 9985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 9985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10000,
											"end": 10034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10034,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10058,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9997,
											"end": 10059,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10179,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9994,
											"end": 10179,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10101,
											"end": 10111,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10096,
											"end": 10099,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10092,
											"end": 10112,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10136,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10133,
											"end": 10134,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10126,
											"end": 10141,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10168,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10169,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10179,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9994,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10188,
											"end": 10210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9870,
											"end": 10216,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10221,
											"end": 10356,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 10221,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10281,
											"end": 10298,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10281,
											"end": 10298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10278,
											"end": 10321,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10278,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10278,
											"end": 10321,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10348,
											"end": 10349,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10337,
											"end": 10350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10361,
											"end": 10473,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 10361,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10409,
											"end": 10444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10424,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10424,
											"end": 10442,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10424,
											"end": 10442,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10424,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10458,
											"end": 10467,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 10458,
											"end": 10467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10473,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10478,
											"end": 10605,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10478,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10549,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10534,
											"end": 10537,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10530,
											"end": 10550,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10527,
											"end": 10528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10520,
											"end": 10551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10574,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10567,
											"end": 10568,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10560,
											"end": 10575,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10594,
											"end": 10598,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10591,
											"end": 10592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10599,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10610,
											"end": 10737,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10610,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10681,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10666,
											"end": 10669,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10662,
											"end": 10682,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10659,
											"end": 10660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10652,
											"end": 10683,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10702,
											"end": 10706,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10699,
											"end": 10700,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10692,
											"end": 10707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10730,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10723,
											"end": 10724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10716,
											"end": 10731,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10742,
											"end": 10869,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 10742,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10813,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10798,
											"end": 10801,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10794,
											"end": 10814,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10834,
											"end": 10838,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10831,
											"end": 10832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10862,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10848,
											"end": 10863,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10874,
											"end": 11001,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10874,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 10945,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10930,
											"end": 10933,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10923,
											"end": 10924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10916,
											"end": 10947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 10970,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10963,
											"end": 10964,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10956,
											"end": 10971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 10994,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10987,
											"end": 10988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10980,
											"end": 10995,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11185,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11006,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11041,
											"end": 11044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11065,
											"end": 11081,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11085,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11179,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 11059,
											"end": 11179,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11130,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11126,
											"end": 11127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11131,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11166,
											"end": 11167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11158,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11185,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11229,
											"end": 11232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11275,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11253,
											"end": 11269,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11250,
											"end": 11276,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11286,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 11247,
											"end": 11286,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11247,
											"end": 11286,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 11247,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11313,
											"end": 11315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11307,
											"end": 11316,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11378,
											"end": 11394,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11307,
											"end": 11316,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11350,
											"end": 11400,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11429,
											"end": 11433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11423,
											"end": 11434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11453,
											"end": 11469,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11559,
											"end": 11561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11540,
											"end": 11557,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11537,
											"end": 11562,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11532,
											"end": 11534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11524,
											"end": 11530,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11535,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11563,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11515,
											"end": 11573,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11515,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11515,
											"end": 11573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11515,
											"end": 11573,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11515,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11597,
											"end": 11601,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 11610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11639,
											"end": 11642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11643,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11658,
											"end": 11664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11679,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11652,
											"end": 11679,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11652,
											"end": 11679,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11652,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11756,
											"end": 11758,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11753,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11735,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11723,
											"end": 11759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 11720,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11702,
											"end": 11705,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11691,
											"end": 11760,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11770,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11688,
											"end": 11770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11688,
											"end": 11770,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11688,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11830,
											"end": 11834,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11821,
											"end": 11827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11813,
											"end": 11819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 11835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11803,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 11779,
											"end": 11836,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11779,
											"end": 11836,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11779,
											"end": 11836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11852,
											"end": 11855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11852,
											"end": 11855,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11190,
											"end": 11861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11866,
											"end": 11997,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 11866,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11941,
											"end": 11972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 11972,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11931,
											"end": 11973,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11931,
											"end": 11973,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11921,
											"end": 11991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11987,
											"end": 11988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11984,
											"end": 11985,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11977,
											"end": 11989,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11991,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11921,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11997,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ContractBalance()": "3b668059",
							"CryptoRandomMint(address)": "3d65df70",
							"FiatRandomMint(address)": "32b61b4c",
							"IsPaused()": "1309a563",
							"Owner()": "b4a99a4e",
							"checkMintedCategoryWise()": "60daa851",
							"checkTotalMinted()": "0390c11c",
							"openDropsite()": "15460259",
							"setMintFee(uint256)": "eddd0d9c",
							"stopDropsite()": "aa90c726",
							"withDraw(address)": "0a67d2c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"CryptoRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"FiatRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMintedCategoryWise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkTotalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintFee\",\"type\":\"uint256\"}],\"name\":\"setMintFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dropsite.sol\":\"Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"Dropsite.sol\":{\"keccak256\":\"0x5f987a26a8b59d64cdc053a1873c336c742ee50b0ed2b13c7ca8e354b9babe13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea46d0132183e779ab12b7197d7621edd87a4f7dfed194536a9ad42bf209cb92\",\"dweb:/ipfs/QmYHG2e4KvZx8GpLr44UrxYCXKnbJkX3a3RvzuyGuBbuAb\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x5dfb07a5226b29aa22b048f5c22ba440e8a2d96bf9222fdcba0a5790fd983149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b8817b7265760276c67a1b98420b973f8d871106f5dff958e0604c28a6c96\",\"dweb:/ipfs/QmQgPUje4qFjR1ZbJT6YnYAy6yKms8xi2FP4kBFLuz86Zp\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]},\"Strings.sol\":{\"keccak256\":\"0x9b07ef0960de9137c24d6b8f1c6dab797b2c3a1503d8120900fe1cd662c5d46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52e859a9d10dfeda997d2d2d64e4ff824053adf96e016062c1c4249975180ba\",\"dweb:/ipfs/QmSzMC9dpXpD83GXyVU84zYqSDu88RteVEKuqa3N8wTLKW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155_Dropsite.sol": {
				"ERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155_Dropsite.sol\":490:2542  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155_Dropsite.sol\":490:2542  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD MOD CALLDATALOAD 0x2F PUSH4 0xC21B9306 DUP11 SHL ADDMOD SWAP2 SWAP3 EQ 0x29 MSTORE8 0x5D PUSH9 0xEC2E4E4A144170B793 SELFDESTRUCT 0x26 SLT 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:2052:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD MOD CALLDATALOAD 0x2F PUSH4 0xC21B9306 DUP11 SHL ADDMOD SWAP2 SWAP3 EQ 0x29 MSTORE8 0x5D PUSH9 0xEC2E4E4A144170B793 SELFDESTRUCT 0x26 SLT 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:2052:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,string memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,string memory)": "infinite",
								"_mint(address,uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033",
									".code": [
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155_Dropsite.sol\":\"ERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x5dfb07a5226b29aa22b048f5c22ba440e8a2d96bf9222fdcba0a5790fd983149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b8817b7265760276c67a1b98420b973f8d871106f5dff958e0604c28a6c96\",\"dweb:/ipfs/QmQgPUje4qFjR1ZbJT6YnYAy6yKms8xi2FP4kBFLuz86Zp\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165_Dropsite.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165_Dropsite.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver_Dropsite.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "data",
									"type": "string"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,string)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,string)": "ae89a248"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,string)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver_Dropsite.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155_Dropsite.sol": {
				"IERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155_Dropsite.sol\":\"IERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165_Dropsite.sol": {
				"IERC165_Dropsite": {
					"abi": [],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165_Dropsite.sol\":\"IERC165_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.;",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Strings.sol\":147:2032  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Strings.sol\":147:2032  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xCC AND 0x4C ADDMOD PUSH19 0xC87321ACDEAA92D5B52750F63A4F5EF2A91363 BYTE 0x5F 0x2C STOP PUSH25 0x341864736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "147:1885:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;147:1885:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xCC AND 0x4C ADDMOD PUSH19 0xC87321ACDEAA92D5B52750F63A4F5EF2A91363 BYTE 0x5F 0x2C STOP PUSH25 0x341864736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "147:1885:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033",
									".code": [
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.;\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Strings.sol\":{\"keccak256\":\"0x9b07ef0960de9137c24d6b8f1c6dab797b2c3a1503d8120900fe1cd662c5d46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52e859a9d10dfeda997d2d2d64e4ff824053adf96e016062c1c4249975180ba\",\"dweb:/ipfs/QmSzMC9dpXpD83GXyVU84zYqSDu88RteVEKuqa3N8wTLKW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"Dropsite": [
							875
						],
						"ERC1155_Dropsite": [
							1086
						],
						"ERC165": [
							1109
						],
						"IERC1155Receiver": [
							1150
						],
						"IERC1155_Dropsite": [
							1170
						],
						"IERC165_Dropsite": [
							1174
						],
						"Strings": [
							1377
						]
					},
					"id": 876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "54:33:2"
						},
						{
							"absolutePath": "ERC1155_Dropsite.sol",
							"file": "./ERC1155_Dropsite.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 876,
							"sourceUnit": 1087,
							"src": "88:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Strings.sol",
							"file": "./Strings.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 876,
							"sourceUnit": 1378,
							"src": "122:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "ERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "167:16:2"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "167:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 875,
							"linearizedBaseContracts": [
								875,
								1086,
								1170,
								1174,
								318
							],
							"name": "Dropsite",
							"nameLocation": "155:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 328,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "249:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "241:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 326,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "241:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "255:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "nums",
									"nameLocation": "458:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "440:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint8_$20_storage",
										"typeString": "uint8[20]"
									},
									"typeName": {
										"baseType": {
											"id": 329,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "440:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"id": 331,
										"length": {
											"hexValue": "3230",
											"id": 330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "446:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20_by_1",
												"typeString": "int_const 20"
											},
											"value": "20"
										},
										"nodeType": "ArrayTypeName",
										"src": "440:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_storage_ptr",
											"typeString": "uint8[20]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 332,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "466:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 333,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "468:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "470:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "32",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "472:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "474:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 337,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "476:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 338,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "478:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "480:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 340,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "482:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "484:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "486:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "488:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 344,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "490:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 345,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "492:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 346,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "494:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 347,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "496:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "498:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "500:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 350,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "502:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 351,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											}
										],
										"id": 352,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "465:41:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
											"typeString": "uint8[20] memory"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "TotalNFTsMinted",
									"nameLocation": "523:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "518:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "518:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "numOfCopies",
									"nameLocation": "566:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "561:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "561:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "mintFees",
									"nameLocation": "625:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "620:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "620:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 361,
									"mutability": "mutable",
									"name": "Diamond",
									"nameLocation": "667:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "662:12:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "662:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "Gold",
									"nameLocation": "697:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "692:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "692:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "712:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "707:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 364,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "707:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Dropsite.nft_Owner",
									"id": 369,
									"members": [
										{
											"constant": false,
											"id": 368,
											"mutability": "mutable",
											"name": "owned_Dropsite_NFTs",
											"nameLocation": "817:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 369,
											"src": "810:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ArrayTypeName",
												"src": "810:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "nft_Owner",
									"nameLocation": "791:9:2",
									"nodeType": "StructDefinition",
									"scope": 875,
									"src": "784:59:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 374,
									"mutability": "mutable",
									"name": "dropsite_NFT_Owner",
									"nameLocation": "878:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "848:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
										"typeString": "mapping(address => struct Dropsite.nft_Owner)"
									},
									"typeName": {
										"id": 373,
										"keyType": {
											"id": 370,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "857:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "848:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
											"typeString": "mapping(address => struct Dropsite.nft_Owner)"
										},
										"valueType": {
											"id": 372,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 371,
												"name": "nft_Owner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "866:9:2"
											},
											"referencedDeclaration": 369,
											"src": "866:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_nft_Owner_$369_storage_ptr",
												"typeString": "struct Dropsite.nft_Owner"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "958:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "932:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "941:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "932:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 376,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "952:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "989:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 381,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1007:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1007:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 383,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1023:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1007:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1030:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															},
															"value": "Only NFT-ES Owner can Access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "999:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "999:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "999:62:2"
											},
											{
												"id": 388,
												"nodeType": "PlaceholderStatement",
												"src": "1071:1:2"
											}
										]
									},
									"id": 390,
									"name": "OnlyOwner",
									"nameLocation": "979:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:0:2"
									},
									"src": "970:109:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1157:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1176:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1188:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1176:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1195:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															},
															"value": "Dropsite is not Opened Yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1167:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1167:59:2"
											},
											{
												"id": 399,
												"nodeType": "PlaceholderStatement",
												"src": "1236:1:2"
											}
										]
									},
									"id": 401,
									"name": "contractIsNotPaused",
									"nameLocation": "1136:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:2:2"
									},
									"src": "1127:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1309a563",
									"id": 404,
									"mutability": "mutable",
									"name": "IsPaused",
									"nameLocation": "1263:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "1251:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 402,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1251:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1274:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 406,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "1308:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "1284:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 405,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1284:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1334:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 875,
									"src": "1319:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 407,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1319:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1377:243:2",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1387:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1395:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1387:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1387:12:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1409:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 420,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1425:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1425:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1417:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1417:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1417:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1409:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1409:27:2"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1447:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1463:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1447:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1447:17:2"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "numOfCopies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1498:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1510:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1498:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1498:13:2"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "Diamond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1566:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1558:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1558:9:2"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "Gold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1589:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1594:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1589:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "1589:6:2"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "Silver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1605:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1612:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1605:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "1605:8:2"
											}
										]
									},
									"id": 446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1372:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1358:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1358:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:20:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:2"
									},
									"scope": 875,
									"src": "1345:275:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1754:47:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 457,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1773:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 458,
															"name": "Gold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "1781:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 459,
															"name": "Silver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "1786:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 460,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1772:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 456,
												"id": 461,
												"nodeType": "Return",
												"src": "1765:28:2"
											}
										]
									},
									"functionSelector": "60daa851",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 448,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "1721:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1721:9:2"
										}
									],
									"name": "checkMintedCategoryWise",
									"nameLocation": "1683:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1706:2:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1744:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1744:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1749:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1749:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:16:2"
									},
									"scope": 875,
									"src": "1674:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1859:34:2",
										"statements": [
											{
												"expression": {
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 470,
														"name": "mintFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1869:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 471,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "1878:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1869:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "1869:17:2"
											}
										]
									},
									"functionSelector": "eddd0d9c",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 467,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "1849:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1849:9:2"
										}
									],
									"name": "setMintFee",
									"nameLocation": "1816:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "_mintFee",
												"nameLocation": "1832:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1827:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1827:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:15:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1859:0:2"
									},
									"scope": 875,
									"src": "1807:86:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1995:41:2",
										"statements": [
											{
												"expression": {
													"id": 482,
													"name": "TotalNFTsMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 355,
													"src": "2013:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "2006:22:2"
											}
										]
									},
									"functionSelector": "0390c11c",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "1972:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1972:9:2"
										}
									],
									"name": "checkTotalMinted",
									"nameLocation": "1941:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:2:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1990:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:6:2"
									},
									"scope": 875,
									"src": "1932:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2082:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2100:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2110:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2100:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2117:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															},
															"value": "Dropsite is already Stopped"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2092:55:2"
											},
											{
												"expression": {
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 497,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2157:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2166:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2157:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "2157:13:2"
											}
										]
									},
									"functionSelector": "aa90c726",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 487,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2073:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2073:9:2"
										}
									],
									"name": "stopDropsite",
									"nameLocation": "2051:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2063:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:2"
									},
									"scope": 875,
									"src": "2042:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "2225:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 508,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2243:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2253:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2243:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2259:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															},
															"value": "Dropsite is already Running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2235:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "2235:54:2"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2299:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2308:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2299:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "2299:14:2"
											}
										]
									},
									"functionSelector": "15460259",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2215:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2215:9:2"
										}
									],
									"name": "openDropsite",
									"nameLocation": "2193:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:0:2"
									},
									"scope": 875,
									"src": "2184:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "2478:151:2",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "Balance",
														"nameLocation": "2493:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "2488:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2488:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 530,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2511:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$875",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$875",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 528,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2503:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2503:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2503:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2488:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "Balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "2542:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2552:5:2",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2542:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2559:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															},
															"value": "Error! No Balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2534:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2534:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "2534:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2614:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "2602:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2602:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "2602:20:2"
											}
										]
									},
									"functionSelector": "0a67d2c7",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 523,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2468:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2468:9:2"
										}
									],
									"name": "withDraw",
									"nameLocation": "2424:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2449:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2433:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2433:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:20:2"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:2"
									},
									"scope": 875,
									"src": "2415:214:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "2745:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 557,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2770:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$875",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$875",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2762:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2762:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2762:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 560,
												"nodeType": "Return",
												"src": "2755:28:2"
											}
										]
									},
									"functionSelector": "3b668059",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 550,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2721:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2721:9:2"
										}
									],
									"name": "ContractBalance",
									"nameLocation": "2691:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2706:2:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2740:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:6:2"
									},
									"scope": 875,
									"src": "2682:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "2913:149:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "randomnumber",
														"nameLocation": "2948:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "2943:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 567,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2943:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 574,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2995:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2995:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 576,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3012:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3012:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 572,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2978:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2978:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2978:45:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 571,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2968:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2968:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 569,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2963:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2963:62:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3230",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3028:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "2963:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2943:87:2"
											},
											{
												"expression": {
													"id": 584,
													"name": "randomnumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "3043:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 566,
												"id": 585,
												"nodeType": "Return",
												"src": "3036:19:2"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "2875:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2881:2:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2907:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:2"
									},
									"scope": 875,
									"src": "2866:196:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "3318:1531:2",
										"statements": [
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3332:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "3327:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 594,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3327:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 596,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3340:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3340:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3327:21:2"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "3363:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "3358:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3358:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"baseExpression": {
														"id": 601,
														"name": "nums",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3371:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$20_storage",
															"typeString": "uint8[20] storage ref"
														}
													},
													"id": 603,
													"indexExpression": {
														"id": 602,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3376:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3371:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3358:24:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 605,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3479:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3488:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3479:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 608,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3493:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3530",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3503:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "3493:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3479:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "3768:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3777:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3768:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "Gold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "3782:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "313030",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3789:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3782:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3768:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 659,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "4038:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4047:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4038:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 662,
																	"name": "Silver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "4052:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "383530",
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4062:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_850_by_1",
																		"typeString": "int_const 850"
																	},
																	"value": "850"
																},
																"src": "4052:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4038:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 740,
															"nodeType": "Block",
															"src": "4239:605:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 688,
																			"name": "Gold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "4419:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4426:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "4419:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 738,
																		"nodeType": "Block",
																		"src": "4632:203:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 715,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "4650:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4658:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "4650:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 718,
																				"nodeType": "ExpressionStatement",
																				"src": "4650:9:2"
																			},
																			{
																				"expression": {
																					"id": 720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4677:9:2",
																					"subExpression": {
																						"id": 719,
																						"name": "Diamond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 361,
																						"src": "4677:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 721,
																				"nodeType": "ExpressionStatement",
																				"src": "4677:9:2"
																			},
																			{
																				"expression": {
																					"id": 734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 722,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "4704:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "4469616d6f6e645f",
																										"id": 727,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4735:10:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																											"typeString": "literal_string \"Diamond_\""
																										},
																										"value": "Diamond_"
																									},
																									{
																										"arguments": [
																											{
																												"id": 730,
																												"name": "Diamond",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 361,
																												"src": "4763:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 728,
																												"name": "Strings",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1377,
																												"src": "4746:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_Strings_$1377_$",
																													"typeString": "type(library Strings)"
																												}
																											},
																											"id": 729,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "toString",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1259,
																											"src": "4746:16:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																												"typeString": "function (uint256) pure returns (string memory)"
																											}
																										},
																										"id": 731,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4746:25:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																											"typeString": "literal_string \"Diamond_\""
																										},
																										{
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									],
																									"expression": {
																										"id": 725,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "4718:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 726,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "4718:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 732,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4718:54:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4711:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 723,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "4711:6:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4711:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "4704:69:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				},
																				"id": 735,
																				"nodeType": "ExpressionStatement",
																				"src": "4704:69:2"
																			},
																			{
																				"expression": {
																					"id": 736,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 600,
																					"src": "4815:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 593,
																				"id": 737,
																				"nodeType": "Return",
																				"src": "4808:12:2"
																			}
																		]
																	},
																	"id": 739,
																	"nodeType": "IfStatement",
																	"src": "4416:419:2",
																	"trueBody": {
																		"id": 714,
																		"nodeType": "Block",
																		"src": "4431:195:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 691,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "4449:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4457:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4449:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 694,
																				"nodeType": "ExpressionStatement",
																				"src": "4449:9:2"
																			},
																			{
																				"expression": {
																					"id": 696,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4476:6:2",
																					"subExpression": {
																						"id": 695,
																						"name": "Gold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 363,
																						"src": "4476:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 697,
																				"nodeType": "ExpressionStatement",
																				"src": "4476:6:2"
																			},
																			{
																				"expression": {
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 698,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "4500:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "476f6c645f",
																										"id": 703,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4531:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																											"typeString": "literal_string \"Gold_\""
																										},
																										"value": "Gold_"
																									},
																									{
																										"arguments": [
																											{
																												"id": 706,
																												"name": "Gold",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 363,
																												"src": "4556:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 704,
																												"name": "Strings",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1377,
																												"src": "4539:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_Strings_$1377_$",
																													"typeString": "type(library Strings)"
																												}
																											},
																											"id": 705,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "toString",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1259,
																											"src": "4539:16:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																												"typeString": "function (uint256) pure returns (string memory)"
																											}
																										},
																										"id": 707,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4539:22:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																											"typeString": "literal_string \"Gold_\""
																										},
																										{
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									],
																									"expression": {
																										"id": 701,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "4514:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 702,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "4514:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 708,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4514:48:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 700,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4507:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 699,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "4507:6:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 709,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4507:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "4500:63:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				},
																				"id": 711,
																				"nodeType": "ExpressionStatement",
																				"src": "4500:63:2"
																			},
																			{
																				"expression": {
																					"id": 712,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 600,
																					"src": "4606:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 593,
																				"id": 713,
																				"nodeType": "Return",
																				"src": "4599:12:2"
																			}
																		]
																	}
																}
															]
														},
														"id": 741,
														"nodeType": "IfStatement",
														"src": "4035:809:2",
														"trueBody": {
															"id": 687,
															"nodeType": "Block",
															"src": "4067:158:2",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4081:8:2",
																		"subExpression": {
																			"id": 666,
																			"name": "Silver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "4081:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "4081:8:2"
																},
																{
																	"expression": {
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 669,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "4103:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 670,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "4108:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "53696c7665725f",
																								"id": 675,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4139:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																									"typeString": "literal_string \"Silver_\""
																								},
																								"value": "Silver_"
																							},
																							{
																								"arguments": [
																									{
																										"id": 678,
																										"name": "Silver",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 365,
																										"src": "4166:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 676,
																										"name": "Strings",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1377,
																										"src": "4149:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_Strings_$1377_$",
																											"typeString": "type(library Strings)"
																										}
																									},
																									"id": 677,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "toString",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1259,
																									"src": "4149:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																										"typeString": "function (uint256) pure returns (string memory)"
																									}
																								},
																								"id": 679,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4149:24:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																									"typeString": "literal_string \"Silver_\""
																								},
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							],
																							"expression": {
																								"id": 673,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "4122:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 674,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "4122:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 680,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4122:52:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4115:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 671,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "4115:6:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4115:60:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"src": "4108:67:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"src": "4103:72:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"id": 684,
																	"nodeType": "ExpressionStatement",
																	"src": "4103:72:2"
																},
																{
																	"expression": {
																		"id": 685,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "4209:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 593,
																	"id": 686,
																	"nodeType": "Return",
																	"src": "4202:12:2"
																}
															]
														}
													},
													"id": 742,
													"nodeType": "IfStatement",
													"src": "3765:1079:2",
													"trueBody": {
														"id": 658,
														"nodeType": "Block",
														"src": "3794:235:2",
														"statements": [
															{
																"expression": {
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3808:6:2",
																	"subExpression": {
																		"id": 639,
																		"name": "Gold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "3808:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 641,
																"nodeType": "ExpressionStatement",
																"src": "3808:6:2"
															},
															{
																"expression": {
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 642,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "3828:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "476f6c645f",
																						"id": 647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3859:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																							"typeString": "literal_string \"Gold_\""
																						},
																						"value": "Gold_"
																					},
																					{
																						"arguments": [
																							{
																								"id": 650,
																								"name": "Gold",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 363,
																								"src": "3884:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 648,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1377,
																								"src": "3867:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1377_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 649,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1259,
																							"src": "3867:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) pure returns (string memory)"
																							}
																						},
																						"id": 651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3867:22:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																							"typeString": "literal_string \"Gold_\""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 645,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3842:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3842:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3842:48:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3835:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 643,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3835:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3835:56:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"src": "3828:63:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 655,
																"nodeType": "ExpressionStatement",
																"src": "3828:63:2"
															},
															{
																"expression": {
																	"id": 656,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "3912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 593,
																"id": 657,
																"nodeType": "Return",
																"src": "3905:12:2"
															}
														]
													}
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "3476:1368:2",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "3507:252:2",
													"statements": [
														{
															"expression": {
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3522:9:2",
																"subExpression": {
																	"id": 612,
																	"name": "Diamond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "3522:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 614,
															"nodeType": "ExpressionStatement",
															"src": "3522:9:2"
														},
														{
															"expression": {
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 615,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "3545:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "4469616d6f6e645f",
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3576:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																						"typeString": "literal_string \"Diamond_\""
																					},
																					"value": "Diamond_"
																				},
																				{
																					"arguments": [
																						{
																							"id": 623,
																							"name": "Diamond",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 361,
																							"src": "3604:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 621,
																							"name": "Strings",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1377,
																							"src": "3587:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Strings_$1377_$",
																								"typeString": "type(library Strings)"
																							}
																						},
																						"id": 622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1259,
																						"src": "3587:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3587:25:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																						"typeString": "literal_string \"Diamond_\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 618,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3559:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3559:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3559:54:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3552:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 616,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "3552:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3552:62:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3545:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "3545:69:2"
														},
														{
															"expression": {
																"id": 629,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "3648:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 593,
															"id": 630,
															"nodeType": "Return",
															"src": "3641:12:2"
														}
													]
												}
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 590,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 589,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "3284:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3284:19:2"
										}
									],
									"name": "updateConditions",
									"nameLocation": "3256:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3272:2:2"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "3312:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3312:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:6:2"
									},
									"scope": 875,
									"src": "3247:1602:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "5005:337:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5020:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5036:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "5020:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5042:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5012:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "5012:58:2"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "5138:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "5133:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5133:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 767,
														"name": "updateConditions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5146:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5146:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5133:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "user_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5176:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5187:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 773,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5194:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5207:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 770,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "5170:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5170:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "5170:42:2"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5218:17:2",
													"subExpression": {
														"id": 777,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5218:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "5218:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5296:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 780,
																	"name": "dropsite_NFT_Owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5241:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
																		"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
																	}
																},
																"id": 782,
																"indexExpression": {
																	"id": 781,
																	"name": "user_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "5260:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5241:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_nft_Owner_$369_storage",
																	"typeString": "struct Dropsite.nft_Owner storage ref"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "owned_Dropsite_NFTs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 368,
															"src": "5241:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5241:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "5241:61:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 788,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5316:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 791,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "5329:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5322:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 789,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "5322:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5322:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string storage pointer"
															}
														}
													],
													"id": 793,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5315:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_ptr_$",
														"typeString": "tuple(uint256,string storage pointer)"
													}
												},
												"functionReturnParameters": 757,
												"id": 794,
												"nodeType": "Return",
												"src": "5308:27:2"
											}
										]
									},
									"functionSelector": "32b61b4c",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 750,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 749,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "4939:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4939:9:2"
										},
										{
											"id": 752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 751,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "4949:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4949:19:2"
										}
									],
									"name": "FiatRandomMint",
									"nameLocation": "4905:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "4928:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4920:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:19:2"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4985:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4985:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4990:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 755,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4990:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4984:20:2"
									},
									"scope": 875,
									"src": "4896:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "5455:51:2",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 803,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5465:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 805,
														"indexExpression": {
															"id": 804,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5474:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5465:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 806,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5484:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5465:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "5465:34:2"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAmount",
									"nameLocation": "5396:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "5418:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5410:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "5429:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5424:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5424:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:36:2"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5455:0:2"
									},
									"scope": 875,
									"src": "5387:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "5669:458:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5684:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5700:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "5684:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5706:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5676:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "5676:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 829,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5749:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5749:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 831,
																"name": "mintFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "5762:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5749:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420456e6f7567682042616c616e6365",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5772:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e",
																"typeString": "literal_string \"Not Enough Balance\""
															},
															"value": "Not Enough Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e",
																"typeString": "literal_string \"Not Enough Balance\""
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5741:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "5741:52:2"
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "5879:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 873,
														"src": "5874:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 836,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5874:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "updateConditions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5887:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5887:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5874:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "user_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "5917:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "5928:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 844,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5935:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 845,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5948:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 841,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "5911:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "5911:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 849,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "5973:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5973:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5987:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5987:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "depositAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "5959:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5959:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "5959:38:2"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6003:17:2",
													"subExpression": {
														"id": 855,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "6003:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "6003:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "6081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 858,
																	"name": "dropsite_NFT_Owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "6026:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
																		"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"id": 859,
																	"name": "user_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "6045:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6026:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_nft_Owner_$369_storage",
																	"typeString": "struct Dropsite.nft_Owner storage ref"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "owned_Dropsite_NFTs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 368,
															"src": "6026:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6026:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6026:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "6026:61:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 866,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "6101:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 869,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "6114:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6107:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 867,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "6107:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6107:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string storage pointer"
															}
														}
													],
													"id": 871,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6100:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_ptr_$",
														"typeString": "tuple(uint256,string storage pointer)"
													}
												},
												"functionReturnParameters": 820,
												"id": 872,
												"nodeType": "Return",
												"src": "6093:27:2"
											}
										]
									},
									"functionSelector": "3d65df70",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 815,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 814,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "5605:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5605:19:2"
										}
									],
									"name": "CryptoRandomMint",
									"nameLocation": "5568:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "5593:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5585:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5584:19:2"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5649:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5649:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5654:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5654:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5648:20:2"
									},
									"scope": 875,
									"src": "5559:568:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 876,
							"src": "146:5983:2",
							"usedErrors": []
						}
					],
					"src": "30:6099:2"
				},
				"id": 2
			},
			"ERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC1155_Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155_Dropsite": [
							1086
						],
						"ERC165": [
							1109
						],
						"IERC1155Receiver": [
							1150
						],
						"IERC1155_Dropsite": [
							1170
						],
						"IERC165_Dropsite": [
							1174
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155_Dropsite.sol",
							"file": "./IERC1155_Dropsite.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 1171,
							"src": "119:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver_Dropsite.sol",
							"file": "./IERC1155Receiver_Dropsite.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 1151,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 297,
							"src": "195:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 319,
							"src": "219:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165_Dropsite.sol",
							"file": "./ERC165_Dropsite.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 1110,
							"src": "243:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 884,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "519:7:3"
									},
									"id": 885,
									"nodeType": "InheritanceSpecifier",
									"src": "519:7:3"
								},
								{
									"baseName": {
										"id": 886,
										"name": "IERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1170,
										"src": "528:17:3"
									},
									"id": 887,
									"nodeType": "InheritanceSpecifier",
									"src": "528:17:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 883,
								"nodeType": "StructuredDocumentation",
								"src": "275:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1086,
							"linearizedBaseContracts": [
								1086,
								1170,
								1174,
								318
							],
							"name": "ERC1155_Dropsite",
							"nameLocation": "499:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 890,
									"libraryName": {
										"id": 888,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "559:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "553:26:3",
									"typeName": {
										"id": 889,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 896,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "691:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "634:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 895,
										"keyType": {
											"id": 891,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "642:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "634:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 894,
											"keyType": {
												"id": 892,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "661:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "653:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 893,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 902,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "810:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "757:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 901,
										"keyType": {
											"id": 897,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "757:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 900,
											"keyType": {
												"id": 898,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "776:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 899,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "795:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "965:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "983:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "989:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 915,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "989:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "989:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "983:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "975:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "975:62:3"
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "1056:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "1048:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 923,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 925,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1067:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "1111:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1129:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1121:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1121:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1133:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 936,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "1155:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 935,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "1137:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1137:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 939,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1178:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 938,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "1160:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1160:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 941,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 928,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1090:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,string memory)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1090:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "1090:102:3"
											},
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 944,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "1202:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 947,
															"indexExpression": {
																"id": 945,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "1212:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1202:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 948,
														"indexExpression": {
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1216:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1202:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 949,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1223:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1202:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "1202:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 953,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "1259:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1277:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1269:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1269:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1269:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1281:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1285:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 960,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "1289:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 952,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "1244:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "EmitStatement",
												"src": "1239:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "1337:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1355:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1347:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1347:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1359:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1363:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "1367:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1375:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 963,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1306:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,string memory)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "1306:74:3"
											}
										]
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "844:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "867:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "859:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "887:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "879:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "907:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "923:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "923:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:98:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:3"
									},
									"scope": 1086,
									"src": "835:552:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "1607:2:3",
										"statements": []
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1403:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1441:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1433:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1467:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1489:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1481:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1518:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1501:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 983,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1501:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 984,
													"nodeType": "ArrayTypeName",
													"src": "1501:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1548:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1531:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 986,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1531:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 987,
													"nodeType": "ArrayTypeName",
													"src": "1531:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1579:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1565:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:166:3"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:0:3"
									},
									"scope": 1086,
									"src": "1394:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1809:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1009,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "1823:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1823:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "1819:516:3",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "1840:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1036,
																		"nodeType": "Block",
																		"src": "1957:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1025,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1023,
																						"src": "1979:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1026,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1150,
																								"src": "1991:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1150_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1027,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1131,
																							"src": "1991:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,string calldata) returns (bytes4)"
																							}
																						},
																						"id": 1028,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1991:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1979:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1035,
																				"nodeType": "IfStatement",
																				"src": "1975:152:3",
																				"trueBody": {
																					"id": 1034,
																					"nodeType": "Block",
																					"src": "2036:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1031,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2065:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1030,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "2058:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1032,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2058:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1033,
																							"nodeType": "ExpressionStatement",
																							"src": "2058:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1037,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1024,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1023,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "1947:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1037,
																				"src": "1940:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1022,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1940:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1939:17:3"
																	},
																	"src": "1931:210:3"
																},
																{
																	"block": {
																		"id": 1045,
																		"nodeType": "Block",
																		"src": "2176:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1042,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1039,
																							"src": "2201:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1041,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2194:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2194:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1044,
																				"nodeType": "ExpressionStatement",
																				"src": "2194:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1046,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1040,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1039,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "2168:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1046,
																				"src": "2154:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1038,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2154:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2153:22:3"
																	},
																	"src": "2142:81:3"
																},
																{
																	"block": {
																		"id": 1051,
																		"nodeType": "Block",
																		"src": "2230:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1048,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2255:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1047,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2248:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1049,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2248:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1050,
																				"nodeType": "ExpressionStatement",
																				"src": "2248:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1052,
																	"nodeType": "TryCatchClause",
																	"src": "2224:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1016,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "1897:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1017,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "1907:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1018,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "1913:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1019,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "1917:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1020,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1006,
																		"src": "1925:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1013,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "1875:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1012,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "1858:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1150_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1858:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1150",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "1858:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,string memory) external returns (bytes4)"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1858:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1053,
															"nodeType": "TryStatement",
															"src": "1854:471:3"
														}
													]
												}
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "1624:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1672:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1664:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1690:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1720:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1712:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1740:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1732:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1760:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1752:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1790:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1776:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1005,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:146:3"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:0:3"
									},
									"scope": 1086,
									"src": "1615:726:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2431:109:3",
										"statements": [
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "2458:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "2441:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1067,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2441:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1068,
															"nodeType": "ArrayTypeName",
															"src": "2441:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2480:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2466:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1070,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2470:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1071,
															"nodeType": "ArrayTypeName",
															"src": "2470:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:41:3"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1076,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2492:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1078,
														"indexExpression": {
															"hexValue": "30",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2498:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2492:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1079,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2503:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2492:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2492:18:3"
											},
											{
												"expression": {
													"id": 1082,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1069,
													"src": "2528:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1083,
												"nodeType": "Return",
												"src": "2521:12:3"
											}
										]
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "2356:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "2382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:17:3"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2413:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1061,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2413:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1062,
													"nodeType": "ArrayTypeName",
													"src": "2413:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:18:3"
									},
									"scope": 1086,
									"src": "2347:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1087,
							"src": "490:2052:3",
							"usedErrors": []
						}
					],
					"src": "94:2448:3"
				},
				"id": 3
			},
			"ERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC165_Dropsite.sol",
					"exportedSymbols": {
						"ERC165": [
							1109
						],
						"IERC165_Dropsite": [
							1174
						]
					},
					"id": 1110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1110,
							"sourceUnit": 1175,
							"src": "124:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1091,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1174,
										"src": "763:16:4"
									},
									"id": 1092,
									"nodeType": "InheritanceSpecifier",
									"src": "763:16:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1090,
								"nodeType": "StructuredDocumentation",
								"src": "158:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1109,
							"linearizedBaseContracts": [
								1109,
								1174
							],
							"name": "ERC165",
							"nameLocation": "753:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "930:73:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "947:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1102,
																	"name": "IERC165_Dropsite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1174_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1174_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																],
																"id": 1101,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "962:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_Dropsite_$1174",
																"typeString": "type(contract IERC165_Dropsite)"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "962:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "947:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1106,
												"nodeType": "Return",
												"src": "940:56:4"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "786:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "856:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "881:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "874:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:20:4"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "924:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:4"
									},
									"scope": 1109,
									"src": "847:156:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1110,
							"src": "735:270:4",
							"usedErrors": []
						}
					],
					"src": "99:906:4"
				},
				"id": 4
			},
			"IERC1155Receiver_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1150
						],
						"IERC165_Dropsite": [
							1174
						]
					},
					"id": 1151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 1175,
							"src": "127:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1174,
										"src": "231:16:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "231:16:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "161:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1150,
							"linearizedBaseContracts": [
								1150,
								1174
							],
							"name": "IERC1155Receiver",
							"nameLocation": "211:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "254:826:5",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "ae89a248",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1094:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1129:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1121:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1155:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1147:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1177:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1169:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1189:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1228:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1212:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1212:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:127:5"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1257:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:8:5"
									},
									"scope": 1150,
									"src": "1085:180:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "1271:994:5",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2279:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2319:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2311:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2345:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2337:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2378:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2359:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1137,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2359:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1138,
													"nodeType": "ArrayTypeName",
													"src": "2359:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2410:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2391:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1140,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2391:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1141,
													"nodeType": "ArrayTypeName",
													"src": "2391:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2441:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2426:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2426:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:150:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2470:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2470:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:8:5"
									},
									"scope": 1150,
									"src": "2270:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1151,
							"src": "201:2279:5",
							"usedErrors": []
						}
					],
					"src": "103:2377:5"
				},
				"id": 5
			},
			"IERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155_Dropsite": [
							1170
						],
						"IERC165_Dropsite": [
							1174
						]
					},
					"id": 1171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1171,
							"sourceUnit": 1175,
							"src": "171:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1155,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1174,
										"src": "403:16:6"
									},
									"id": 1156,
									"nodeType": "InheritanceSpecifier",
									"src": "403:16:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1154,
								"nodeType": "StructuredDocumentation",
								"src": "205:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1170,
							"linearizedBaseContracts": [
								1170,
								1174
							],
							"name": "IERC1155_Dropsite",
							"nameLocation": "381:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "426:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1169,
									"name": "TransferSingle",
									"nameLocation": "558:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "589:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "573:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "615:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "599:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "637:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "621:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "641:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "661:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "653:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:95:6"
									},
									"src": "552:116:6"
								}
							],
							"scope": 1171,
							"src": "371:2545:6",
							"usedErrors": []
						}
					],
					"src": "95:2821:6"
				},
				"id": 6
			},
			"IERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC165_Dropsite.sol",
					"exportedSymbols": {
						"IERC165_Dropsite": [
							1174
						]
					},
					"id": 1175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1173,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": true,
							"id": 1174,
							"linearizedBaseContracts": [
								1174
							],
							"name": "IERC165_Dropsite",
							"nameLocation": "415:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1175,
							"src": "405:458:7",
							"usedErrors": []
						}
					],
					"src": "100:763:7"
				},
				"id": 7
			},
			"Strings.sol": {
				"ast": {
					"absolutePath": "Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1377
						]
					},
					"id": 1378,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1177,
								"nodeType": "StructuredDocumentation",
								"src": "111:35:8",
								"text": " @dev String operations.;"
							},
							"fullyImplemented": true,
							"id": 1377,
							"linearizedBaseContracts": [
								1377
							],
							"name": "Strings",
							"nameLocation": "155:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1180,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "194:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1377,
									"src": "169:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1178,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "400:632:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1188,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "602:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "611:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "602:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1194,
												"nodeType": "IfStatement",
												"src": "598:51:8",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "614:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1187,
															"id": 1192,
															"nodeType": "Return",
															"src": "628:10:8"
														}
													]
												}
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "666:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "658:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "658:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"id": 1197,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1183,
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "658:20:8"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "696:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "688:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "688:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"nodeType": "VariableDeclarationStatement",
												"src": "688:14:8"
											},
											{
												"body": {
													"id": 1212,
													"nodeType": "Block",
													"src": "730:57:8",
													"statements": [
														{
															"expression": {
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "744:8:8",
																"subExpression": {
																	"id": 1205,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "744:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1207,
															"nodeType": "ExpressionStatement",
															"src": "744:8:8"
														},
														{
															"expression": {
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1208,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "766:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "774:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "766:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1211,
															"nodeType": "ExpressionStatement",
															"src": "766:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1202,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "719:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "727:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "719:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "WhileStatement",
												"src": "712:75:8"
											},
											{
												"assignments": [
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "809:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "796:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "796:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"arguments": [
														{
															"id": 1218,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "828:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "818:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1216,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "796:39:8"
											},
											{
												"body": {
													"id": 1251,
													"nodeType": "Block",
													"src": "864:131:8",
													"statements": [
														{
															"expression": {
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1224,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "878:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "888:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "878:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1227,
															"nodeType": "ExpressionStatement",
															"src": "878:11:8"
														},
														{
															"expression": {
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1228,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "903:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1230,
																	"indexExpression": {
																		"id": 1229,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "910:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "903:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1235,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "933:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1240,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1238,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1183,
																									"src": "946:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1239,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "954:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "946:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1237,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "938:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1236,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "938:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1241,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "938:19:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "933:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "927:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "927:5:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "927:31:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "920:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1231,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "920:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "920:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "903:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1246,
															"nodeType": "ExpressionStatement",
															"src": "903:56:8"
														},
														{
															"expression": {
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1247,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "973:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "982:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "973:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1250,
															"nodeType": "ExpressionStatement",
															"src": "973:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1221,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "852:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "861:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "852:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "WhileStatement",
												"src": "845:150:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "1018:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1011:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1253,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1011:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1011:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1257,
												"nodeType": "Return",
												"src": "1004:21:8"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "234:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "338:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "355:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "347:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:15:8"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "385:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "385:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:15:8"
									},
									"scope": 1377,
									"src": "329:703:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "1211:255:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "1225:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1234:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1225:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "1221:54:8",
												"trueBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "1237:38:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1258:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1266,
															"id": 1271,
															"nodeType": "Return",
															"src": "1251:13:8"
														}
													]
												}
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1292:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1299,
														"src": "1284:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1277,
												"initialValue": {
													"id": 1276,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1262,
													"src": "1299:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1284:20:8"
											},
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1322:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1299,
														"src": "1314:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1314:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"hexValue": "30",
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1331:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1314:18:8"
											},
											{
												"body": {
													"id": 1292,
													"nodeType": "Block",
													"src": "1360:57:8",
													"statements": [
														{
															"expression": {
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1374:8:8",
																"subExpression": {
																	"id": 1285,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "1374:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1287,
															"nodeType": "ExpressionStatement",
															"src": "1374:8:8"
														},
														{
															"expression": {
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1288,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "1396:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1405:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1396:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1291,
															"nodeType": "ExpressionStatement",
															"src": "1396:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "1349:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1357:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1349:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "WhileStatement",
												"src": "1342:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "1445:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1296,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "1452:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1300,
															1376
														],
														"referencedDeclaration": 1376,
														"src": "1433:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1266,
												"id": 1298,
												"nodeType": "Return",
												"src": "1426:33:8"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "1038:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1146:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1166:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "1158:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:15:8"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "1196:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1264,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:15:8"
									},
									"scope": 1377,
									"src": "1137:329:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "1679:351:8",
										"statements": [
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1702:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "1689:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1310,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1689:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1721:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1315,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1725:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1721:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1721:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1711:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1312,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1715:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1689:47:8"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1321,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "1746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1323,
														"indexExpression": {
															"hexValue": "30",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1746:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1758:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1746:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "1746:15:8"
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1327,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "1771:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1329,
														"indexExpression": {
															"hexValue": "31",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1778:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1771:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1783:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1771:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "1771:15:8"
											},
											{
												"body": {
													"id": 1361,
													"nodeType": "Block",
													"src": "1841:87:8",
													"statements": [
														{
															"expression": {
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1347,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "1855:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1349,
																	"indexExpression": {
																		"id": 1348,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "1862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1855:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1350,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "1867:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1354,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "1880:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1888:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1880:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1867:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1855:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "1855:37:8"
														},
														{
															"expression": {
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "1906:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1916:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1906:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1360,
															"nodeType": "ExpressionStatement",
															"src": "1906:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1829:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1833:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1829:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"initializationExpression": {
													"assignments": [
														1334
													],
													"declarations": [
														{
															"constant": false,
															"id": 1334,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1809:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1362,
															"src": "1801:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1333,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1801:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1340,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1336,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "1817:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1813:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1826:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1813:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1801:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1836:3:8",
														"subExpression": {
															"id": 1344,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "1838:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1346,
													"nodeType": "ExpressionStatement",
													"src": "1836:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1796:132:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "1945:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1954:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1945:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1957:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1937:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "1937:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1372,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "2016:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2009:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1370,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2009:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1374,
												"nodeType": "Return",
												"src": "2002:21:8"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "1472:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1598:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1618:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1610:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1633:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1625:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:31:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1664:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1664:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:15:8"
									},
									"scope": 1377,
									"src": "1589:441:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1378,
							"src": "147:1885:8",
							"usedErrors": []
						}
					],
					"src": "86:1946:8"
				},
				"id": 8
			}
		}
	}
}