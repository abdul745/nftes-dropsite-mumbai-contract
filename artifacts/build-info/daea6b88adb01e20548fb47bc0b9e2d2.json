{
	"id": "daea6b88adb01e20548fb47bc0b9e2d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155_Dropsite.sol\"; \ncontract Dropsite is ERC1155_Dropsite  { \n\n    //NFT category\n    bytes  data =\"\";\n    uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; //NFTs distribution w.r.t Probabilities\n    uint TotalNFTsMinted;     //Total NFTs\n    uint numOfCopies;         //A user can mint only 1 NFT\n    //Initial Minting\n    uint8 Diamond;            \n    uint Gold;\n    uint Silver; \n\n    //owner-NFT-ID Mapping\n    struct nft_Owner{\n        uint[] owned_Dropsite_NFTs;\n    }\n    mapping (address=>nft_Owner)  dropsite_NFT_Owner;\n    function returnOwner(address addr) public view returns (uint[] memory){\n        return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs;\n    }\n\n    //payments Mapping\n     mapping (address => uint) deposits;\n  modifier OnlyOwner {\n        require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\");\n        _;\n    }\n\n    //Pausing and activating the contract\n    modifier contractIsNotPaused(){\n        require (IsPaused == false, \"Dropsite is not Opened Yet.\" );\n        _;\n    }\n      bool public IsPaused = true;\n    address payable public  Owner;\n    string private _name;\n    \n    constructor (string memory name){\n        _name = name;\n        Owner = payable(msg.sender);\n\n        TotalNFTsMinted=0;     //Total NFTs Minted\n        numOfCopies=1;         //A user can mint only 1 NFT\n        Diamond=0;            \n        Gold=0;\n        Silver=0;\n    }\n     \n     function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){\n         return (Diamond,Gold,Silver);\n     }\n    function checkTotalMinted() public view OnlyOwner returns(uint){\n         return TotalNFTsMinted;\n     }\n     function stopDropsite() public OnlyOwner{\n        require(IsPaused==false, \"Dropsite is already Stopped\");\n        IsPaused=true;\n    }\n\n     function openDropsite() public OnlyOwner {\n        require(IsPaused==true, \"Dropsite is already Running\");\n        IsPaused=false;\n    }\n    \n     //To WithDraw All Ammount from Contract to Owners Address \n    function withDraw(address payable to) public payable OnlyOwner {\n        uint Balance = address(this).balance;\n        require(Balance > 0 wei, \"Error! No Balance to withdraw\"); \n        to.transfer(Balance);\n    }  \n    \n    //To Check Contract Balance in Wei\n      function ContractBalance() public view OnlyOwner returns (uint){\n        return address(this).balance;\n    }\n\n    function random() internal view returns (uint) {\n        // Returns 0-10\n    uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20;\n    return randomnumber;\n    }\n\n   function updateConditions() internal contractIsNotPaused returns(uint) {\n       uint index = random();\n        uint nftId = nums[index];\n           // if nftID is 0, and less than 51 so 50 MAX\n           \n        if(nftId == 0 && Diamond < 50) {\n            data = abi.encodePacked(\"Diamond_\",Diamond);\n            Diamond++; \n            return nftId;\n\n        // if nftID is 0 or 1 and Diamond is more than 150, it will go there\n        } else if(nftId <= 1 && Gold < 100) {\n            \n            data = abi.encodePacked(\"Gold\",Gold);\n            Gold++;\n            return nftId;\n\n        // if any of the above conditions are filled it will mint silver if enough silver available\n        } else if(nftId <= 2 && Silver <= 850) {\n            \n            data=data = abi.encodePacked(\"Silver_\",Silver);\n            Silver++;\n            return nftId;\n        }\n        else {\n            if(Gold < 100) {\n                nftId = 1;\n                data = abi.encodePacked(\"Gold_\",Gold);\n                Gold++; \n                return nftId;\n            } else {\n                nftId = 0;\n                data = abi.encodePacked(\"Diamond_\",Diamond);\n                Diamond++;\n                return nftId;\n            }   \n    }\n   }\n    //Random minting after Fiat Payments\n    function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n   // we're assuming that random() returns only 0,1,2    \n   uint nftId = updateConditions();\n    _mint(user_addr, nftId, numOfCopies, data);\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId);\n    return (nftId,string(data));\n    }\n    \n    function depositAmount(address payee,uint amountToDeposit) internal {\n        deposits[payee] += amountToDeposit;\n    }\n    //Random minting after Crypto Payments\n    function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n     require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\");\n   // nftId = random(); // we're assuming that random() returns only 0,1,2\n   uint nftId = updateConditions();\n    _mint(user_addr, nftId, numOfCopies, data);\n    depositAmount(_msgSender(), msg.value);\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId);\n    return (nftId,string(data));\n    }\n}"
			},
			"ERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155_Dropsite.sol\";\nimport \"./IERC1155Receiver_Dropsite.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165_Dropsite.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155_Dropsite is Context, IERC1155_Dropsite  {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165_Dropsite {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual  returns (bool) {\n        return interfaceId == type(IERC165_Dropsite).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165_Dropsite {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155_Dropsite  is IERC165_Dropsite {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    // event TransferBatch(\n    //     address indexed operator,\n    //     address indexed from,\n    //     address indexed to,\n    //     uint256[] ids,\n    //     uint256[] values\n    // );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    // event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    // event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n//     function balanceOf(address account, uint256 id) external view returns (uint256);\n\n//     /**\n//      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n//      *\n//      * Requirements:\n//      *\n//      * - `accounts` and `ids` must have the same length.\n//      */\n//     function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n//         external\n//         view\n//         returns (uint256[] memory);\n\n//     /**\n//      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n//      *\n//      * Emits an {ApprovalForAll} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `operator` cannot be the caller.\n//      */\n//     function setApprovalForAll(address operator, bool approved) external;\n\n//     /**\n//      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n//      *\n//      * See {setApprovalForAll}.\n//      */\n//     function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165_Dropsite {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n   // function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH13 0x26B1CD6618E7CFCB6B7E5C1BBD PUSH11 0x1C0BA9EDB855FD0FD2A4AD DUP7 0xAB 0xBB KECCAK256 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH13 0x26B1CD6618E7CFCB6B7E5C1BBD PUSH11 0x1C0BA9EDB855FD0FD2A4AD DUP7 0xAB 0xBB KECCAK256 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dropsite.sol": {
				"Dropsite": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "CryptoRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "FiatRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkMintedCategoryWise",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkTotalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "returnOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dropsite.sol\":188:203  bytes  data =\"\" */\n  0xa0\n    /* \"Dropsite.sol\":122:5204  contract Dropsite is ERC1155_Dropsite  { ... */\n  0x40\n    /* \"Dropsite.sol\":188:203  bytes  data =\"\" */\n  dup2\n  swap1\n  mstore\n  0x00\n    /* \"Dropsite.sol\":122:5204  contract Dropsite is ERC1155_Dropsite  { ... */\n  0x80\n    /* \"Dropsite.sol\":188:203  bytes  data =\"\" */\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  0x02\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Dropsite.sol\":209:275  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x40\n  dup1\n  mload\n  0x0280\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"Dropsite.sol\":237:238  1 */\n  0x01\n    /* \"Dropsite.sol\":209:275  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x20\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  swap2\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"Dropsite.sol\":241:242  2 */\n  0x02\n    /* \"Dropsite.sol\":209:275  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x60\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x80\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xa0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xc0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xe0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0100\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0120\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0140\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0160\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0180\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01a0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01c0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01e0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0200\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0220\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0240\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0260\n  dup3\n  add\n  mstore\n  tag_3\n  swap1\n  0x03\n  swap1\n  0x14\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"Dropsite.sol\":1142:1169  bool public IsPaused = true */\n  0x0b\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Dropsite.sol\":1165:1169  true */\n  0x01\n    /* \"Dropsite.sol\":1142:1169  bool public IsPaused = true */\n  or\n  swap1\n  sstore\n    /* \"Dropsite.sol\":1241:1516  constructor (string memory name){... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"Dropsite.sol\":1283:1295  _name = name */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"Dropsite.sol\":1283:1288  _name */\n  0x0c\n  swap1\n    /* \"Dropsite.sol\":1283:1295  _name = name */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"Dropsite.sol\":1305:1310  Owner */\n  0x0b\n    /* \"Dropsite.sol\":1305:1332  Owner = payable(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n    /* \"Dropsite.sol\":1321:1331  msg.sender */\n  caller\n    /* \"Dropsite.sol\":1305:1332  Owner = payable(msg.sender) */\n  0x0100\n  mul\n  or\n  swap1\n  sstore\n  0x00\n    /* \"Dropsite.sol\":1343:1358  TotalNFTsMinted */\n  0x04\n    /* \"Dropsite.sol\":1343:1360  TotalNFTsMinted=0 */\n  dup2\n  swap1\n  sstore\n  0x01\n    /* \"Dropsite.sol\":1394:1405  numOfCopies */\n  0x05\n    /* \"Dropsite.sol\":1394:1407  numOfCopies=1 */\n  sstore\n  0x06\n    /* \"Dropsite.sol\":1454:1463  Diamond=0 */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  0x07\n    /* \"Dropsite.sol\":1485:1491  Gold=0 */\n  dup2\n  swap1\n  sstore\n    /* \"Dropsite.sol\":1501:1507  Silver */\n  0x08\n    /* \"Dropsite.sol\":1501:1509  Silver=0 */\n  sstore\n    /* \"Dropsite.sol\":122:5204  contract Dropsite is ERC1155_Dropsite  { ... */\n  jump(tag_36)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_4:\n  0x01\n  dup4\n  add\n  swap2\n  dup4\n  swap1\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_23:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_23)\ntag_24:\n  dup1\n  iszero\n  tag_25\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_24)\ntag_25:\n  pop\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\ntag_21:\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_34)\n    /* \"#utility.yul\":14:1101   */\ntag_7:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_38:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_39:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_40:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_45\n  tag_43\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_46:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_47:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_47)\ntag_49:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_50:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_14:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_52:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_53:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_43:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_36:\n    /* \"Dropsite.sol\":122:5204  contract Dropsite is ERC1155_Dropsite  { ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dropsite.sol\":122:5204  contract Dropsite is ERC1155_Dropsite  { ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3b668059\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x3b668059\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3d65df70\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x60daa851\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xaa90c726\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfd6c3b1b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0390c11c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0a67d2c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1309a563\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15460259\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x32b61b4c\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dropsite.sol\":1660:1764  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":8636:8661   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8624:8626   */\n      0x20\n        /* \"#utility.yul\":8609:8627   */\n      add\n        /* \"Dropsite.sol\":1660:1764  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2122:2336  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_3:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Dropsite.sol\":1142:1169  bool public IsPaused = true */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x0b)\n      tag_24\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":4516:4530   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4509:4531   */\n      iszero\n        /* \"#utility.yul\":4491:4532   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4479:4481   */\n      0x20\n        /* \"#utility.yul\":4464:4482   */\n      add\n        /* \"Dropsite.sol\":1142:1169  bool public IsPaused = true */\n      tag_17\n        /* \"#utility.yul\":4351:4538   */\n      jump\n        /* \"Dropsite.sol\":1912:2048  function openDropsite() public OnlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_19\n      tag_30\n      jump\t// in\n        /* \"Dropsite.sol\":3991:4437  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"Dropsite.sol\":2389:2497  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_15\n      tag_40\n      jump\t// in\n        /* \"Dropsite.sol\":4614:5202  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_8:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"Dropsite.sol\":1528:1655  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9422:9447   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":9478:9480   */\n      0x20\n        /* \"#utility.yul\":9463:9481   */\n      dup5\n      add\n        /* \"#utility.yul\":9456:9490   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9506:9524   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9499:9533   */\n      mstore\n        /* \"#utility.yul\":9410:9412   */\n      0x60\n        /* \"#utility.yul\":9395:9413   */\n      add\n        /* \"Dropsite.sol\":1528:1655  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n      tag_17\n        /* \"#utility.yul\":9220:9539   */\n      jump\n        /* \"Dropsite.sol\":1770:1905  function stopDropsite() public OnlyOwner{... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_19\n      tag_53\n      jump\t// in\n        /* \"Dropsite.sol\":1175:1204  address payable public  Owner */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      sload(0x0b)\n      tag_55\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3105:3137   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3087:3138   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3077   */\n      0x20\n        /* \"#utility.yul\":3060:3078   */\n      add\n        /* \"Dropsite.sol\":1175:1204  address payable public  Owner */\n      tag_17\n        /* \"#utility.yul\":2925:3144   */\n      jump\n        /* \"Dropsite.sol\":655:793  function returnOwner(address addr) public view returns (uint[] memory){... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"Dropsite.sol\":1660:1764  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_16:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":1718:1722  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":914:919  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n      pop\n        /* \"Dropsite.sol\":1741:1756  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":962:963  _ */\n    tag_71:\n        /* \"Dropsite.sol\":1660:1764  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":2122:2336  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_22:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_74:\n        /* \"Dropsite.sol\":2210:2231  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2249:2264  Balance > 0 wei */\n      dup1\n        /* \"Dropsite.sol\":2241:2298  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"Dropsite.sol\":2241:2298  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7914:7935   */\n      mstore\n        /* \"#utility.yul\":7971:7973   */\n      0x1d\n        /* \"#utility.yul\":7951:7969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7944:7974   */\n      mstore\n        /* \"#utility.yul\":8010:8041   */\n      0x4572726f7221204e6f2042616c616e636520746f207769746864726177000000\n        /* \"#utility.yul\":7990:8008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7983:8042   */\n      mstore\n        /* \"#utility.yul\":8059:8077   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2241:2298  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_69\n        /* \"#utility.yul\":7730:8083   */\n      jump\n        /* \"Dropsite.sol\":2241:2298  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n    tag_77:\n        /* \"Dropsite.sol\":2309:2329  to.transfer(Balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":2309:2320  to.transfer */\n      dup4\n      and\n      swap1\n        /* \"Dropsite.sol\":2309:2329  to.transfer(Balance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Dropsite.sol\":2321:2328  Balance */\n      dup4\n      swap1\n        /* \"Dropsite.sol\":2309:2329  to.transfer(Balance) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Dropsite.sol\":2321:2328  Balance */\n      dup6\n        /* \"Dropsite.sol\":2309:2320  to.transfer */\n      dup9\n        /* \"Dropsite.sol\":2309:2329  to.transfer(Balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n        /* \"Dropsite.sol\":2185:2336  {... */\n      pop\n        /* \"Dropsite.sol\":2122:2336  function withDraw(address payable to) public payable OnlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1912:2048  function openDropsite() public OnlyOwner {... */\n    tag_30:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_84:\n        /* \"Dropsite.sol\":1971:1979  IsPaused */\n      and(0xff, sload(0x0b))\n        /* \"Dropsite.sol\":1971:1985  IsPaused==true */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1971:1979  IsPaused */\n      0x01\n        /* \"Dropsite.sol\":1971:1985  IsPaused==true */\n      eq\n        /* \"Dropsite.sol\":1963:2017  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6153:6155   */\n      0x20\n        /* \"Dropsite.sol\":1963:2017  require(IsPaused==true, \"Dropsite is already Running\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6135:6156   */\n      mstore\n        /* \"#utility.yul\":6192:6194   */\n      0x1b\n        /* \"#utility.yul\":6172:6190   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6165:6195   */\n      mstore\n        /* \"#utility.yul\":6231:6260   */\n      0x44726f707369746520697320616c72656164792052756e6e696e670000000000\n        /* \"#utility.yul\":6211:6229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6204:6261   */\n      mstore\n        /* \"#utility.yul\":6278:6296   */\n      0x64\n      add\n        /* \"Dropsite.sol\":1963:2017  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_69\n        /* \"#utility.yul\":5951:6302   */\n      jump\n        /* \"Dropsite.sol\":1963:2017  require(IsPaused==true, \"Dropsite is already Running\") */\n    tag_87:\n        /* \"Dropsite.sol\":2027:2035  IsPaused */\n      0x0b\n        /* \"Dropsite.sol\":2027:2041  IsPaused=false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Dropsite.sol\":1912:2048  function openDropsite() public OnlyOwner {... */\n      jump\t// out\n        /* \"Dropsite.sol\":3991:4437  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_35:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":4080:4084  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":4085:4098  string memory */\n      0x60\n      swap1\n        /* \"Dropsite.sol\":914:919  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_92:\n        /* \"Dropsite.sol\":1067:1075  IsPaused */\n      and(0xff, sload(0x0b))\n        /* \"Dropsite.sol\":1067:1084  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1058:1117  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_97\n      jump\t// in\n    tag_95:\n        /* \"Dropsite.sol\":4131:4135  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":4115:4130  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":4115:4135  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":4107:4165  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7578:7580   */\n      0x20\n        /* \"Dropsite.sol\":4107:4165  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7560:7581   */\n      mstore\n        /* \"#utility.yul\":7617:7619   */\n      0x19\n        /* \"#utility.yul\":7597:7615   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7590:7620   */\n      mstore\n      shl(0x3a, 0x13585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959)\n        /* \"#utility.yul\":7636:7654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7629:7684   */\n      mstore\n        /* \"#utility.yul\":7701:7719   */\n      0x64\n      add\n        /* \"Dropsite.sol\":4107:4165  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_69\n        /* \"#utility.yul\":7376:7725   */\n      jump\n        /* \"Dropsite.sol\":4107:4165  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n    tag_99:\n        /* \"Dropsite.sol\":4228:4238  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":4241:4259  updateConditions() */\n      tag_102\n        /* \"Dropsite.sol\":4241:4257  updateConditions */\n      tag_103\n        /* \"Dropsite.sol\":4241:4259  updateConditions() */\n      jump\t// in\n    tag_102:\n        /* \"Dropsite.sol\":4228:4259  uint nftId = updateConditions() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":4265:4307  _mint(user_addr, nftId, numOfCopies, data) */\n      tag_104\n        /* \"Dropsite.sol\":4271:4280  user_addr */\n      dup5\n        /* \"Dropsite.sol\":4282:4287  nftId */\n      dup3\n        /* \"Dropsite.sol\":4289:4300  numOfCopies */\n      sload(0x05)\n        /* \"Dropsite.sol\":4302:4306  data */\n      0x02\n        /* \"Dropsite.sol\":4265:4307  _mint(user_addr, nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":4265:4270  _mint */\n      tag_111\n        /* \"Dropsite.sol\":4265:4307  _mint(user_addr, nftId, numOfCopies, data) */\n      jump\t// in\n    tag_104:\n        /* \"Dropsite.sol\":4313:4328  TotalNFTsMinted */\n      0x04\n        /* \"Dropsite.sol\":4313:4330  TotalNFTsMinted++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":4313:4328  TotalNFTsMinted */\n      0x00\n        /* \"Dropsite.sol\":4313:4330  TotalNFTsMinted++ */\n      tag_112\n      dup4\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":4336:4365  dropsite_NFT_Owner[user_addr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":4336:4354  dropsite_NFT_Owner */\n      0x09\n        /* \"Dropsite.sol\":4336:4365  dropsite_NFT_Owner[user_addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"Dropsite.sol\":4336:4397  dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"Dropsite.sol\":4424:4428  data */\n      0x02\n        /* \"Dropsite.sol\":4403:4430  return (nftId,string(data)) */\n      dup1\n      sload\n        /* \"Dropsite.sol\":4391:4396  nftId */\n      dup3\n      swap2\n        /* \"Dropsite.sol\":4424:4428  data */\n      swap1\n      dup2\n      swap1\n        /* \"Dropsite.sol\":4403:4430  return (nftId,string(data)) */\n      tag_115\n      swap1\n      tag_106\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_106\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Dropsite.sol\":3991:4437  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Dropsite.sol\":2389:2497  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_40:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":2447:2451  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":914:919  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_122:\n      pop\n        /* \"Dropsite.sol\":2469:2490  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2389:2497  function ContractBalance() public view OnlyOwner returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":4614:5202  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_44:\n        /* \"Dropsite.sol\":1067:1075  IsPaused */\n      sload(0x0b)\n        /* \"Dropsite.sol\":4704:4708  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":4709:4722  string memory */\n      0x60\n      swap1\n        /* \"Dropsite.sol\":1067:1075  IsPaused */\n      0xff\n      and\n        /* \"Dropsite.sol\":1067:1084  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1058:1117  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_97\n      jump\t// in\n    tag_126:\n        /* \"Dropsite.sol\":4755:4759  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":4739:4754  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":4739:4759  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":4731:4789  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7578:7580   */\n      0x20\n        /* \"Dropsite.sol\":4731:4789  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7560:7581   */\n      mstore\n        /* \"#utility.yul\":7617:7619   */\n      0x19\n        /* \"#utility.yul\":7597:7615   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7590:7620   */\n      mstore\n      shl(0x3a, 0x13585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959)\n        /* \"#utility.yul\":7636:7654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7629:7684   */\n      mstore\n        /* \"#utility.yul\":7701:7719   */\n      0x64\n      add\n        /* \"Dropsite.sol\":4731:4789  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_69\n        /* \"#utility.yul\":7376:7725   */\n      jump\n        /* \"Dropsite.sol\":4731:4789  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n    tag_129:\n        /* \"Dropsite.sol\":4804:4813  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":4818:4838  25000000000000000000 */\n      0x015af1d78b58c40000\n        /* \"Dropsite.sol\":4804:4839  msg.value == (25000000000000000000) */\n      eq\n        /* \"Dropsite.sol\":4796:4869  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5799:5801   */\n      0x20\n        /* \"Dropsite.sol\":4796:4869  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5781:5802   */\n      mstore\n        /* \"#utility.yul\":5838:5840   */\n      0x19\n        /* \"#utility.yul\":5818:5836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5811:5841   */\n      mstore\n        /* \"#utility.yul\":5877:5904   */\n      0x42616c616e6365206d757374206265203235204d617469637300000000000000\n        /* \"#utility.yul\":5857:5875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5850:5905   */\n      mstore\n        /* \"#utility.yul\":5922:5940   */\n      0x64\n      add\n        /* \"Dropsite.sol\":4796:4869  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n      tag_69\n        /* \"#utility.yul\":5597:5946   */\n      jump\n        /* \"Dropsite.sol\":4796:4869  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n    tag_131:\n        /* \"Dropsite.sol\":4949:4959  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":4962:4980  updateConditions() */\n      tag_134\n        /* \"Dropsite.sol\":4962:4978  updateConditions */\n      tag_103\n        /* \"Dropsite.sol\":4962:4980  updateConditions() */\n      jump\t// in\n    tag_134:\n        /* \"Dropsite.sol\":4949:4980  uint nftId = updateConditions() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":4986:5028  _mint(user_addr, nftId, numOfCopies, data) */\n      tag_135\n        /* \"Dropsite.sol\":4992:5001  user_addr */\n      dup5\n        /* \"Dropsite.sol\":5003:5008  nftId */\n      dup3\n        /* \"Dropsite.sol\":5010:5021  numOfCopies */\n      sload(0x05)\n        /* \"Dropsite.sol\":5023:5027  data */\n      0x02\n        /* \"Dropsite.sol\":4986:5028  _mint(user_addr, nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_135:\n        /* \"Dropsite.sol\":5034:5072  depositAmount(_msgSender(), msg.value) */\n      tag_104\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Dropsite.sol\":5062:5071  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":5034:5047  depositAmount */\n      tag_143\n        /* \"Dropsite.sol\":5034:5072  depositAmount(_msgSender(), msg.value) */\n      jump\t// in\n        /* \"Dropsite.sol\":1528:1655  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_48:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":1593:1597  uint */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"Dropsite.sol\":914:919  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_153:\n      pop\n      pop\n        /* \"Dropsite.sol\":1627:1634  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":1635:1639  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":1640:1646  Silver */\n      sload(0x08)\n        /* \"Dropsite.sol\":1627:1634  Diamond */\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      pop\n        /* \"Dropsite.sol\":1528:1655  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n      swap2\n      swap3\n      jump\t// out\n        /* \"Dropsite.sol\":1770:1905  function stopDropsite() public OnlyOwner{... */\n    tag_53:\n        /* \"Dropsite.sol\":914:919  Owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":898:919  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":890:952  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_158:\n        /* \"Dropsite.sol\":1828:1836  IsPaused */\n      and(0xff, sload(0x0b))\n        /* \"Dropsite.sol\":1828:1843  IsPaused==false */\n      iszero\n        /* \"Dropsite.sol\":1820:1875  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6509:6511   */\n      0x20\n        /* \"Dropsite.sol\":1820:1875  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6491:6512   */\n      mstore\n        /* \"#utility.yul\":6548:6550   */\n      0x1b\n        /* \"#utility.yul\":6528:6546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6521:6551   */\n      mstore\n        /* \"#utility.yul\":6587:6616   */\n      0x44726f707369746520697320616c72656164792053746f707065640000000000\n        /* \"#utility.yul\":6567:6585   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6560:6617   */\n      mstore\n        /* \"#utility.yul\":6634:6652   */\n      0x64\n      add\n        /* \"Dropsite.sol\":1820:1875  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_69\n        /* \"#utility.yul\":6307:6658   */\n      jump\n        /* \"Dropsite.sol\":1820:1875  require(IsPaused==false, \"Dropsite is already Stopped\") */\n    tag_161:\n        /* \"Dropsite.sol\":1885:1893  IsPaused */\n      0x0b\n        /* \"Dropsite.sol\":1885:1898  IsPaused=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Dropsite.sol\":1894:1898  true */\n      0x01\n        /* \"Dropsite.sol\":1885:1898  IsPaused=true */\n      or\n      swap1\n      sstore\n        /* \"Dropsite.sol\":1770:1905  function stopDropsite() public OnlyOwner{... */\n      jump\t// out\n        /* \"Dropsite.sol\":655:793  function returnOwner(address addr) public view returns (uint[] memory){... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":742:766  dropsite_NFT_Owner[addr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":742:760  dropsite_NFT_Owner */\n      0x09\n        /* \"Dropsite.sol\":742:766  dropsite_NFT_Owner[addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Dropsite.sol\":735:786  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"Dropsite.sol\":711:724  uint[] memory */\n      0x60\n      swap4\n        /* \"Dropsite.sol\":735:786  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      swap3\n      dup4\n      add\n        /* \"Dropsite.sol\":742:766  dropsite_NFT_Owner[addr] */\n      dup3\n        /* \"Dropsite.sol\":735:786  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      dup3\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dropsite.sol\":655:793  function returnOwner(address addr) public view returns (uint[] memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":2704:3945  function updateConditions() internal contractIsNotPaused returns(uint) {... */\n    tag_103:\n        /* \"Dropsite.sol\":1067:1075  IsPaused */\n      sload(0x0b)\n        /* \"Dropsite.sol\":2769:2773  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1067:1075  IsPaused */\n      0xff\n      and\n        /* \"Dropsite.sol\":1067:1084  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1058:1117  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_97\n      jump\t// in\n    tag_169:\n        /* \"Dropsite.sol\":2784:2794  uint index */\n      0x00\n        /* \"Dropsite.sol\":2797:2805  random() */\n      tag_172\n        /* \"Dropsite.sol\":2797:2803  random */\n      tag_173\n        /* \"Dropsite.sol\":2797:2805  random() */\n      jump\t// in\n    tag_172:\n        /* \"Dropsite.sol\":2784:2805  uint index = random() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":2815:2825  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":2828:2832  nums */\n      0x03\n        /* \"Dropsite.sol\":2833:2838  index */\n      dup3\n        /* \"Dropsite.sol\":2828:2839  nums[index] */\n      0x14\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n      0x20\n      dup2\n      div\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      0x1f\n      swap1\n      swap3\n      and\n      0x0100\n      exp\n      swap1\n      div\n      and\n      swap1\n      pop\n        /* \"Dropsite.sol\":2920:2930  nftId == 0 */\n      dup1\n      iszero\n        /* \"Dropsite.sol\":2920:2946  nftId == 0 && Diamond < 50 */\n      dup1\n      iszero\n      tag_178\n      jumpi\n      pop\n        /* \"Dropsite.sol\":2934:2941  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":2944:2946  50 */\n      0x32\n        /* \"Dropsite.sol\":2934:2941  Diamond */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"Dropsite.sol\":2934:2946  Diamond < 50 */\n      lt\n        /* \"Dropsite.sol\":2920:2946  nftId == 0 && Diamond < 50 */\n    tag_178:\n        /* \"Dropsite.sol\":2917:3940  if(nftId == 0 && Diamond < 50) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"Dropsite.sol\":2997:3004  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":2969:3005  abi.encodePacked(\"Diamond_\",Diamond) */\n      mload(0x40)\n      tag_180\n      swap2\n        /* \"Dropsite.sol\":2997:3004  Diamond */\n      0xff\n      and\n      swap1\n        /* \"Dropsite.sol\":2969:3005  abi.encodePacked(\"Diamond_\",Diamond) */\n      0x20\n      add\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":2962:2966  data */\n      0x02\n        /* \"Dropsite.sol\":2962:3005  data = abi.encodePacked(\"Diamond_\",Diamond) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      pop\n        /* \"Dropsite.sol\":3019:3026  Diamond */\n      0x06\n        /* \"Dropsite.sol\":3019:3028  Diamond++ */\n      dup1\n      sload\n      0xff\n      and\n      swap1\n        /* \"Dropsite.sol\":3019:3026  Diamond */\n      0x00\n        /* \"Dropsite.sol\":3019:3028  Diamond++ */\n      tag_184\n      dup4\n      tag_185\n      jump\t// in\n    tag_184:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Dropsite.sol\":3050:3055  nftId */\n      dup1\n        /* \"Dropsite.sol\":3043:3055  return nftId */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":1660:1764  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":2917:3940  if(nftId == 0 && Diamond < 50) {... */\n    tag_179:\n        /* \"Dropsite.sol\":3162:3163  1 */\n      0x01\n        /* \"Dropsite.sol\":3153:3158  nftId */\n      dup2\n        /* \"Dropsite.sol\":3153:3163  nftId <= 1 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":3153:3177  nftId <= 1 && Gold < 100 */\n      dup1\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3174:3177  100 */\n      0x64\n        /* \"Dropsite.sol\":3167:3171  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":3167:3177  Gold < 100 */\n      lt\n        /* \"Dropsite.sol\":3153:3177  nftId <= 1 && Gold < 100 */\n    tag_187:\n        /* \"Dropsite.sol\":3150:3940  if(nftId <= 1 && Gold < 100) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"Dropsite.sol\":3237:3241  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":3213:3242  abi.encodePacked(\"Gold\",Gold) */\n      mload(0x40)\n      shl(0xe2, 0x11dbdb19)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":2205:2224   */\n      mstore\n        /* \"#utility.yul\":2240:2251   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2233:2260   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2276:2288   */\n      0x44\n      add\n        /* \"Dropsite.sol\":3213:3242  abi.encodePacked(\"Gold\",Gold) */\n    tag_189:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":3206:3210  data */\n      0x02\n        /* \"Dropsite.sol\":3206:3242  data = abi.encodePacked(\"Gold\",Gold) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_191\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_191:\n      pop\n        /* \"Dropsite.sol\":3256:3260  Gold */\n      0x07\n        /* \"Dropsite.sol\":3256:3262  Gold++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":3256:3260  Gold */\n      0x00\n        /* \"Dropsite.sol\":3256:3262  Gold++ */\n      tag_192\n      dup4\n      tag_113\n      jump\t// in\n    tag_192:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"Dropsite.sol\":3283:3288  nftId */\n      swap1\n      swap4\n        /* \"Dropsite.sol\":1660:1764  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":3150:3940  if(nftId <= 1 && Gold < 100) {... */\n    tag_188:\n        /* \"Dropsite.sol\":3418:3419  2 */\n      0x02\n        /* \"Dropsite.sol\":3409:3414  nftId */\n      dup2\n        /* \"Dropsite.sol\":3409:3419  nftId <= 2 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":3409:3436  nftId <= 2 && Silver <= 850 */\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3433:3436  850 */\n      0x0352\n        /* \"Dropsite.sol\":3423:3429  Silver */\n      sload(0x08)\n        /* \"Dropsite.sol\":3423:3436  Silver <= 850 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":3409:3436  nftId <= 2 && Silver <= 850 */\n    tag_194:\n        /* \"Dropsite.sol\":3406:3940  if(nftId <= 2 && Silver <= 850) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"Dropsite.sol\":3504:3510  Silver */\n      sload(0x08)\n        /* \"Dropsite.sol\":3477:3511  abi.encodePacked(\"Silver_\",Silver) */\n      mload(0x40)\n      shl(0xc8, 0x53696c7665725f)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":2529:2551   */\n      mstore\n        /* \"#utility.yul\":2567:2578   */\n      0x27\n      dup2\n      add\n        /* \"#utility.yul\":2560:2587   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2603:2615   */\n      0x47\n      add\n        /* \"Dropsite.sol\":3477:3511  abi.encodePacked(\"Silver_\",Silver) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":3470:3474  data */\n      0x02\n        /* \"Dropsite.sol\":3470:3511  data = abi.encodePacked(\"Silver_\",Silver) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_198:\n        /* \"Dropsite.sol\":3465:3469  data */\n      0x02\n        /* \"Dropsite.sol\":3465:3511  data=data = abi.encodePacked(\"Silver_\",Silver) */\n      swap1\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_106\n      jump\t// in\n    tag_199:\n      tag_200\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      pop\n        /* \"Dropsite.sol\":3525:3531  Silver */\n      0x08\n        /* \"Dropsite.sol\":3525:3533  Silver++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":3525:3531  Silver */\n      0x00\n        /* \"Dropsite.sol\":3525:3533  Silver++ */\n      tag_192\n      dup4\n      tag_113\n      jump\t// in\n        /* \"Dropsite.sol\":3406:3940  if(nftId <= 2 && Silver <= 850) {... */\n    tag_195:\n        /* \"Dropsite.sol\":3608:3611  100 */\n      0x64\n        /* \"Dropsite.sol\":3601:3605  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":3601:3611  Gold < 100 */\n      lt\n        /* \"Dropsite.sol\":3598:3931  if(Gold < 100) {... */\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3690:3694  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":3665:3695  abi.encodePacked(\"Gold_\",Gold) */\n      mload(0x40)\n      shl(0xd8, 0x476f6c645f)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":1880:1900   */\n      mstore\n        /* \"#utility.yul\":1916:1927   */\n      0x25\n      dup2\n      add\n        /* \"#utility.yul\":1909:1936   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Dropsite.sol\":3639:3640  1 */\n      0x01\n      swap1\n        /* \"#utility.yul\":1952:1964   */\n      0x45\n      add\n        /* \"Dropsite.sol\":3665:3695  abi.encodePacked(\"Gold_\",Gold) */\n      tag_189\n        /* \"#utility.yul\":1650:1970   */\n      jump\n        /* \"Dropsite.sol\":3598:3931  if(Gold < 100) {... */\n    tag_204:\n      pop\n        /* \"Dropsite.sol\":3851:3858  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":3823:3859  abi.encodePacked(\"Diamond_\",Diamond) */\n      mload(0x40)\n        /* \"Dropsite.sol\":3797:3798  0 */\n      0x00\n      swap2\n        /* \"Dropsite.sol\":3823:3859  abi.encodePacked(\"Diamond_\",Diamond) */\n      tag_180\n      swap2\n        /* \"Dropsite.sol\":3851:3858  Diamond */\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Dropsite.sol\":3823:3859  abi.encodePacked(\"Diamond_\",Diamond) */\n      0x20\n      add\n      tag_181\n      jump\t// in\n        /* \"ERC1155_Dropsite.sol\":835:1386  function _mint(... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":982:998  to != address(0) */\n      dup5\n      and\n        /* \"ERC1155_Dropsite.sol\":974:1036  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8290:8292   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":974:1036  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8272:8293   */\n      mstore\n        /* \"#utility.yul\":8329:8331   */\n      0x21\n        /* \"#utility.yul\":8309:8327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8302:8332   */\n      mstore\n        /* \"#utility.yul\":8368:8402   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":8348:8366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8341:8403   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8419:8437   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8412:8443   */\n      mstore\n        /* \"#utility.yul\":8460:8479   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":974:1036  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_69\n        /* \"#utility.yul\":8088:8485   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":974:1036  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_214:\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC1155_Dropsite.sol\":1089:1191  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_218\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1047:1063  address operator */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1132:1134  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1136:1157  _asSingletonArray(id) */\n      tag_219\n        /* \"ERC1155_Dropsite.sol\":1154:1156  id */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1136:1153  _asSingletonArray */\n      tag_220\n        /* \"ERC1155_Dropsite.sol\":1136:1157  _asSingletonArray(id) */\n      jump\t// in\n    tag_219:\n        /* \"ERC1155_Dropsite.sol\":1159:1184  _asSingletonArray(amount) */\n      tag_221\n        /* \"ERC1155_Dropsite.sol\":1177:1183  amount */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1159:1176  _asSingletonArray */\n      tag_220\n        /* \"ERC1155_Dropsite.sol\":1159:1184  _asSingletonArray(amount) */\n      jump\t// in\n    tag_221:\n        /* \"ERC1155_Dropsite.sol\":1393:1607  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"ERC1155_Dropsite.sol\":1089:1191  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_218:\n        /* \"ERC1155_Dropsite.sol\":1201:1210  _balances */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1201:1214  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1201:1218  _balances[id][to] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"ERC1155_Dropsite.sol\":1201:1228  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"ERC1155_Dropsite.sol\":1222:1228  amount */\n      dup6\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1201:1210  _balances */\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1201:1228  _balances[id][to] += amount */\n      tag_223\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1222:1228  amount */\n      dup5\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1201:1228  _balances[id][to] += amount */\n      tag_224\n      jump\t// in\n    tag_223:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9141:9166   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":9197:9199   */\n      0x20\n        /* \"#utility.yul\":9182:9200   */\n      dup2\n      add\n        /* \"#utility.yul\":9175:9209   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup9\n      and\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1276:1277  0 */\n      0x00\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":9114:9132   */\n      add\n        /* \"ERC1155_Dropsite.sol\":1243:1295  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155_Dropsite.sol\":1305:1379  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_221\n        /* \"ERC1155_Dropsite.sol\":1336:1344  operator */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1354:1355  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1358:1360  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1362:1364  id */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1366:1372  amount */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1374:1378  data */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1305:1335  _doSafeTransferAcceptanceCheck */\n      tag_228\n        /* \"ERC1155_Dropsite.sol\":1305:1379  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n        /* \"Dropsite.sol\":4447:4566  function depositAmount(address payee,uint amountToDeposit) internal {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":4525:4540  deposits[payee] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":4525:4533  deposits */\n      0x0a\n        /* \"Dropsite.sol\":4525:4540  deposits[payee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Dropsite.sol\":4525:4559  deposits[payee] += amountToDeposit */\n      dup1\n      sload\n        /* \"Dropsite.sol\":4544:4559  amountToDeposit */\n      dup4\n      swap3\n        /* \"Dropsite.sol\":4525:4540  deposits[payee] */\n      swap1\n        /* \"Dropsite.sol\":4525:4559  deposits[payee] += amountToDeposit */\n      tag_230\n      swap1\n        /* \"Dropsite.sol\":4544:4559  amountToDeposit */\n      dup5\n      swap1\n        /* \"Dropsite.sol\":4525:4559  deposits[payee] += amountToDeposit */\n      tag_224\n      jump\t// in\n    tag_230:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":4447:4566  function depositAmount(address payee,uint amountToDeposit) internal {... */\n      jump\t// out\n        /* \"Dropsite.sol\":2503:2699  function random() internal view returns (uint) {... */\n    tag_173:\n        /* \"Dropsite.sol\":2544:2548  uint */\n      0x00\n        /* \"Dropsite.sol\":2580:2597  uint randomnumber */\n      dup1\n        /* \"Dropsite.sol\":2665:2667  20 */\n      0x14\n        /* \"Dropsite.sol\":2632:2647  block.timestamp */\n      timestamp\n        /* \"Dropsite.sol\":2649:2659  msg.sender */\n      caller\n        /* \"Dropsite.sol\":2615:2660  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_232\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2783:2802   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2840:2842   */\n      0x60\n        /* \"#utility.yul\":2836:2851   */\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":2832:2885   */\n      and\n        /* \"#utility.yul\":2827:2829   */\n      0x20\n        /* \"#utility.yul\":2818:2830   */\n      dup3\n      add\n        /* \"#utility.yul\":2811:2886   */\n      mstore\n        /* \"#utility.yul\":2911:2913   */\n      0x34\n        /* \"#utility.yul\":2902:2914   */\n      add\n      swap1\n        /* \"#utility.yul\":2626:2920   */\n      jump\n        /* \"Dropsite.sol\":2615:2660  abi.encodePacked(block.timestamp, msg.sender) */\n    tag_232:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":2605:2661  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Dropsite.sol\":2600:2662  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"Dropsite.sol\":2600:2667  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20 */\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"Dropsite.sol\":2580:2667  uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20 */\n      swap3\n        /* \"Dropsite.sol\":2503:2699  function random() internal view returns (uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":2344:2537  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_220:\n        /* \"ERC1155_Dropsite.sol\":2463:2479  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"ERC1155_Dropsite.sol\":2477:2478  1 */\n      0x01\n        /* \"ERC1155_Dropsite.sol\":2463:2479  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"ERC1155_Dropsite.sol\":2410:2426  uint256[] memory */\n      0x60\n      swap2\n        /* \"ERC1155_Dropsite.sol\":2438:2460  uint256[] memory array */\n      0x00\n      swap2\n        /* \"ERC1155_Dropsite.sol\":2463:2479  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":2438:2479  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155_Dropsite.sol\":2500:2507  element */\n      dup3\n        /* \"ERC1155_Dropsite.sol\":2489:2494  array */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":2495:2496  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":2489:2497  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_242\n      tag_176\n      jump\t// in\n    tag_242:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ERC1155_Dropsite.sol\":2489:2507  array[0] = element */\n      mstore\n        /* \"ERC1155_Dropsite.sol\":2525:2530  array */\n      swap3\n        /* \"ERC1155_Dropsite.sol\":2344:2537  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1393:1607  function _beforeTokenTransfer(... */\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1613:2338  function _doSafeTransferAcceptanceCheck(... */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1820:1833  to.isContract */\n      dup5\n      and\n        /* \"Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"ERC1155_Dropsite.sol\":1816:2332  if (to.isContract()) {... */\n      tag_222\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":1855:1927  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1855:1893  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1855:1927  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_248\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1894:1902  operator */\n      dup10\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1904:1908  from */\n      dup10\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1910:1912  id */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1914:1920  amount */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1922:1926  data */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1855:1927  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_249\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_251\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_252\n      swap2\n      dup2\n      add\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      0x01\n    tag_251:\n        /* \"ERC1155_Dropsite.sol\":1851:2322  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_254\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_257\n      jumpi\n      pop\n      tag_260\n      tag_261\n      jump\t// in\n    tag_260:\n      dup1\n      tag_262\n      jumpi\n      pop\n      jump(tag_256)\n    tag_262:\n        /* \"ERC1155_Dropsite.sol\":2198:2204  reason */\n      dup1\n        /* \"ERC1155_Dropsite.sol\":2191:2205  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n        /* \"ERC1155_Dropsite.sol\":1851:2322  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_257:\n      pop\n    tag_256:\n        /* \"ERC1155_Dropsite.sol\":2245:2307  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":2245:2307  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4951:4972   */\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x34\n        /* \"#utility.yul\":4988:5006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4981:5011   */\n      mstore\n        /* \"#utility.yul\":5047:5081   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":5027:5045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5020:5082   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":5098:5116   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5091:5141   */\n      mstore\n        /* \"#utility.yul\":5158:5177   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":2245:2307  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_69\n        /* \"#utility.yul\":4767:5183   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":1851:2322  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_254:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"ERC1155_Dropsite.sol\":1976:2031  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"ERC1155_Dropsite.sol\":1972:2124  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_268\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":2055:2105  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5390:5392   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":2055:2105  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5372:5393   */\n      mstore\n        /* \"#utility.yul\":5429:5431   */\n      0x28\n        /* \"#utility.yul\":5409:5427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5402:5432   */\n      mstore\n        /* \"#utility.yul\":5468:5502   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":5448:5466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5441:5503   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":5519:5537   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5512:5550   */\n      mstore\n        /* \"#utility.yul\":5567:5586   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":2055:2105  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_69\n        /* \"#utility.yul\":5188:5592   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":1972:2124  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_268:\n        /* \"ERC1155_Dropsite.sol\":1928:2138  returns (bytes4 response) {... */\n      pop\n        /* \"ERC1155_Dropsite.sol\":1613:2338  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_183:\n      dup3\n      dup1\n      sload\n      tag_272\n      swap1\n      tag_106\n      jump\t// in\n    tag_272:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_274\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_277)\n    tag_274:\n      dup3\n      0x1f\n      lt\n      tag_275\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_277)\n    tag_275:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_277\n      jumpi\n      swap2\n      dup3\n      add\n    tag_276:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_277\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_276)\n    tag_277:\n      pop\n      tag_278\n      swap3\n      swap2\n      pop\n      tag_279\n      jump\t// in\n    tag_278:\n      pop\n      swap1\n      jump\t// out\n    tag_201:\n      dup3\n      dup1\n      sload\n      tag_280\n      swap1\n      tag_106\n      jump\t// in\n    tag_280:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_282\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_277)\n    tag_282:\n      dup3\n      0x1f\n      lt\n      tag_283\n      jumpi\n      dup1\n      sload\n      dup6\n      sstore\n      jump(tag_277)\n    tag_283:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_277\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap2\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup3\n      add\n    tag_284:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_277\n      jumpi\n      dup3\n      sload\n      dup3\n      sstore\n      swap2\n      0x01\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_284)\n    tag_279:\n    tag_287:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_287)\n        /* \"#utility.yul\":14:261   */\n    tag_34:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_291:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_292\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":14:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":526:816   */\n    tag_253:\n        /* \"#utility.yul\":595:601   */\n      0x00\n        /* \"#utility.yul\":648:650   */\n      0x20\n        /* \"#utility.yul\":636:645   */\n      dup3\n        /* \"#utility.yul\":627:634   */\n      dup5\n        /* \"#utility.yul\":623:646   */\n      sub\n        /* \"#utility.yul\":619:651   */\n      slt\n        /* \"#utility.yul\":616:668   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":661:662   */\n      dup1\n        /* \"#utility.yul\":654:666   */\n      revert\n        /* \"#utility.yul\":616:668   */\n    tag_298:\n        /* \"#utility.yul\":690:706   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":735:767   */\n      dup2\n      and\n        /* \"#utility.yul\":725:768   */\n      dup2\n      eq\n        /* \"#utility.yul\":715:786   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":782:783   */\n      0x00\n        /* \"#utility.yul\":779:780   */\n      dup1\n        /* \"#utility.yul\":772:784   */\n      revert\n        /* \"#utility.yul\":821:1292   */\n    tag_300:\n        /* \"#utility.yul\":862:865   */\n      0x00\n        /* \"#utility.yul\":900:905   */\n      dup2\n        /* \"#utility.yul\":894:906   */\n      mload\n        /* \"#utility.yul\":927:933   */\n      dup1\n        /* \"#utility.yul\":922:925   */\n      dup5\n        /* \"#utility.yul\":915:934   */\n      mstore\n        /* \"#utility.yul\":952:953   */\n      0x00\n        /* \"#utility.yul\":962:1124   */\n    tag_302:\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":973:974   */\n      dup2\n        /* \"#utility.yul\":970:983   */\n      lt\n        /* \"#utility.yul\":962:1124   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1038:1042   */\n      0x20\n        /* \"#utility.yul\":1094:1107   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1090:1112   */\n      dup2\n      add\n        /* \"#utility.yul\":1084:1113   */\n      mload\n        /* \"#utility.yul\":1066:1077   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1062:1082   */\n      dup3\n      add\n        /* \"#utility.yul\":1055:1114   */\n      mstore\n        /* \"#utility.yul\":991:1003   */\n      add\n        /* \"#utility.yul\":962:1124   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":1142:1148   */\n      dup2\n        /* \"#utility.yul\":1139:1140   */\n      dup2\n        /* \"#utility.yul\":1136:1149   */\n      gt\n        /* \"#utility.yul\":1133:1220   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":1208:1209   */\n      0x00\n        /* \"#utility.yul\":1201:1205   */\n      0x20\n        /* \"#utility.yul\":1192:1198   */\n      dup4\n        /* \"#utility.yul\":1187:1190   */\n      dup8\n        /* \"#utility.yul\":1183:1199   */\n      add\n        /* \"#utility.yul\":1179:1206   */\n      add\n        /* \"#utility.yul\":1172:1210   */\n      mstore\n        /* \"#utility.yul\":1133:1220   */\n    tag_305:\n      pop\n        /* \"#utility.yul\":1274:1276   */\n      0x1f\n        /* \"#utility.yul\":1253:1268   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1249:1278   */\n      and\n        /* \"#utility.yul\":1240:1279   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1281:1285   */\n      0x20\n        /* \"#utility.yul\":1236:1286   */\n      add\n      swap3\n        /* \"#utility.yul\":821:1292   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1297:1645   */\n    tag_181:\n      shl(0xc0, 0x4469616d6f6e645f)\n        /* \"#utility.yul\":1523:1546   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1601:1604   */\n      0xf8\n        /* \"#utility.yul\":1579:1595   */\n      swap2\n      swap1\n      swap2\n      shl\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"#utility.yul\":1575:1611   */\n      and\n        /* \"#utility.yul\":1571:1572   */\n      0x08\n        /* \"#utility.yul\":1562:1573   */\n      dup3\n      add\n        /* \"#utility.yul\":1555:1612   */\n      mstore\n        /* \"#utility.yul\":1637:1638   */\n      0x09\n        /* \"#utility.yul\":1628:1639   */\n      add\n      swap1\n        /* \"#utility.yul\":1297:1645   */\n      jump\t// out\n        /* \"#utility.yul\":3149:3709   */\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3446:3461   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":3428:3462   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3498:3513   */\n      dup6\n      and\n        /* \"#utility.yul\":3493:3495   */\n      0x20\n        /* \"#utility.yul\":3478:3496   */\n      dup3\n      add\n        /* \"#utility.yul\":3471:3514   */\n      mstore\n        /* \"#utility.yul\":3545:3547   */\n      0x40\n        /* \"#utility.yul\":3530:3548   */\n      dup2\n      add\n        /* \"#utility.yul\":3523:3557   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3588:3590   */\n      0x60\n        /* \"#utility.yul\":3573:3591   */\n      dup2\n      add\n        /* \"#utility.yul\":3566:3600   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3408:3411   */\n      0xa0\n        /* \"#utility.yul\":3631:3634   */\n      0x80\n        /* \"#utility.yul\":3616:3635   */\n      dup3\n      add\n        /* \"#utility.yul\":3609:3641   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3371:3375   */\n      0x00\n      swap1\n        /* \"#utility.yul\":3658:3703   */\n      tag_313\n      swap1\n        /* \"#utility.yul\":3683:3702   */\n      dup4\n      add\n        /* \"#utility.yul\":3675:3681   */\n      dup5\n        /* \"#utility.yul\":3658:3703   */\n      tag_300\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3650:3703   */\n      swap8\n        /* \"#utility.yul\":3149:3709   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:4346   */\n    tag_64:\n        /* \"#utility.yul\":3885:3887   */\n      0x20\n        /* \"#utility.yul\":3937:3958   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4007:4020   */\n      dup3\n      mload\n        /* \"#utility.yul\":3910:3928   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4029:4051   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3856:3860   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3885:3887   */\n      swap1\n        /* \"#utility.yul\":4108:4123   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4082:4084   */\n      0x40\n        /* \"#utility.yul\":4067:4085   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3856:3860   */\n      dup5\n        /* \"#utility.yul\":4151:4320   */\n    tag_315:\n        /* \"#utility.yul\":4165:4171   */\n      dup2\n        /* \"#utility.yul\":4162:4163   */\n      dup2\n        /* \"#utility.yul\":4159:4172   */\n      lt\n        /* \"#utility.yul\":4151:4320   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4226:4239   */\n      dup4\n      mload\n        /* \"#utility.yul\":4214:4240   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4295:4310   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4260:4272   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4187:4188   */\n      0x01\n        /* \"#utility.yul\":4180:4189   */\n      add\n        /* \"#utility.yul\":4151:4320   */\n      jump(tag_315)\n    tag_317:\n      pop\n        /* \"#utility.yul\":4337:4340   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3714:4346   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4543:4762   */\n    tag_264:\n        /* \"#utility.yul\":4692:4694   */\n      0x20\n        /* \"#utility.yul\":4681:4690   */\n      dup2\n        /* \"#utility.yul\":4674:4695   */\n      mstore\n        /* \"#utility.yul\":4655:4659   */\n      0x00\n        /* \"#utility.yul\":4712:4756   */\n      tag_292\n        /* \"#utility.yul\":4752:4754   */\n      0x20\n        /* \"#utility.yul\":4741:4750   */\n      dup4\n        /* \"#utility.yul\":4737:4755   */\n      add\n        /* \"#utility.yul\":4729:4735   */\n      dup5\n        /* \"#utility.yul\":4712:4756   */\n      tag_300\n      jump\t// in\n        /* \"#utility.yul\":6663:7015   */\n    tag_70:\n        /* \"#utility.yul\":6865:6867   */\n      0x20\n        /* \"#utility.yul\":6847:6868   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6904:6906   */\n      0x1c\n        /* \"#utility.yul\":6884:6902   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6877:6907   */\n      mstore\n        /* \"#utility.yul\":6943:6973   */\n      0x4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000\n        /* \"#utility.yul\":6938:6940   */\n      0x40\n        /* \"#utility.yul\":6923:6941   */\n      dup3\n      add\n        /* \"#utility.yul\":6916:6974   */\n      mstore\n        /* \"#utility.yul\":7006:7008   */\n      0x60\n        /* \"#utility.yul\":6991:7009   */\n      add\n      swap1\n        /* \"#utility.yul\":6663:7015   */\n      jump\t// out\n        /* \"#utility.yul\":7020:7371   */\n    tag_97:\n        /* \"#utility.yul\":7222:7224   */\n      0x20\n        /* \"#utility.yul\":7204:7225   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7261:7263   */\n      0x1b\n        /* \"#utility.yul\":7241:7259   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7234:7264   */\n      mstore\n        /* \"#utility.yul\":7300:7329   */\n      0x44726f7073697465206973206e6f74204f70656e6564205965742e0000000000\n        /* \"#utility.yul\":7295:7297   */\n      0x40\n        /* \"#utility.yul\":7280:7298   */\n      dup3\n      add\n        /* \"#utility.yul\":7273:7330   */\n      mstore\n        /* \"#utility.yul\":7362:7364   */\n      0x60\n        /* \"#utility.yul\":7347:7365   */\n      add\n      swap1\n        /* \"#utility.yul\":7020:7371   */\n      jump\t// out\n        /* \"#utility.yul\":8672:8962   */\n    tag_37:\n        /* \"#utility.yul\":8849:8855   */\n      dup3\n        /* \"#utility.yul\":8838:8847   */\n      dup2\n        /* \"#utility.yul\":8831:8856   */\n      mstore\n        /* \"#utility.yul\":8892:8894   */\n      0x40\n        /* \"#utility.yul\":8887:8889   */\n      0x20\n        /* \"#utility.yul\":8876:8885   */\n      dup3\n        /* \"#utility.yul\":8872:8890   */\n      add\n        /* \"#utility.yul\":8865:8895   */\n      mstore\n        /* \"#utility.yul\":8812:8816   */\n      0x00\n        /* \"#utility.yul\":8912:8956   */\n      tag_333\n        /* \"#utility.yul\":8952:8954   */\n      0x40\n        /* \"#utility.yul\":8941:8950   */\n      dup4\n        /* \"#utility.yul\":8937:8955   */\n      add\n        /* \"#utility.yul\":8929:8935   */\n      dup5\n        /* \"#utility.yul\":8912:8956   */\n      tag_300\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8904:8956   */\n      swap5\n        /* \"#utility.yul\":8672:8962   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9544:9672   */\n    tag_224:\n        /* \"#utility.yul\":9584:9587   */\n      0x00\n        /* \"#utility.yul\":9615:9616   */\n      dup3\n        /* \"#utility.yul\":9611:9617   */\n      not\n        /* \"#utility.yul\":9608:9609   */\n      dup3\n        /* \"#utility.yul\":9605:9618   */\n      gt\n        /* \"#utility.yul\":9602:9641   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_338\n      tag_339\n      jump\t// in\n    tag_338:\n      pop\n        /* \"#utility.yul\":9657:9666   */\n      add\n      swap1\n        /* \"#utility.yul\":9544:9672   */\n      jump\t// out\n        /* \"#utility.yul\":9677:10057   */\n    tag_106:\n        /* \"#utility.yul\":9756:9757   */\n      0x01\n        /* \"#utility.yul\":9752:9764   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9799:9811   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9820:9881   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":9874:9878   */\n      0x7f\n        /* \"#utility.yul\":9866:9872   */\n      dup3\n        /* \"#utility.yul\":9862:9879   */\n      and\n        /* \"#utility.yul\":9852:9879   */\n      swap2\n      pop\n        /* \"#utility.yul\":9820:9881   */\n    tag_341:\n        /* \"#utility.yul\":9927:9929   */\n      0x20\n        /* \"#utility.yul\":9919:9925   */\n      dup3\n        /* \"#utility.yul\":9916:9930   */\n      lt\n        /* \"#utility.yul\":9896:9914   */\n      dup2\n        /* \"#utility.yul\":9893:9931   */\n      eq\n        /* \"#utility.yul\":9890:10051   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":9973:9983   */\n      0x4e487b71\n        /* \"#utility.yul\":9968:9971   */\n      0xe0\n        /* \"#utility.yul\":9964:9984   */\n      shl\n        /* \"#utility.yul\":9961:9962   */\n      0x00\n        /* \"#utility.yul\":9954:9985   */\n      mstore\n        /* \"#utility.yul\":10008:10012   */\n      0x22\n        /* \"#utility.yul\":10005:10006   */\n      0x04\n        /* \"#utility.yul\":9998:10013   */\n      mstore\n        /* \"#utility.yul\":10036:10040   */\n      0x24\n        /* \"#utility.yul\":10033:10034   */\n      0x00\n        /* \"#utility.yul\":10026:10041   */\n      revert\n        /* \"#utility.yul\":9890:10051   */\n    tag_342:\n      pop\n        /* \"#utility.yul\":9677:10057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10062:10408   */\n    tag_343:\n        /* \"#utility.yul\":10172:10174   */\n      0x1f\n        /* \"#utility.yul\":10153:10166   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10149:10176   */\n      and\n        /* \"#utility.yul\":10137:10177   */\n      dup2\n      add\n        /* \"#utility.yul\":10207:10225   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10192:10226   */\n      dup2\n      gt\n        /* \"#utility.yul\":10228:10250   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":10189:10251   */\n      or\n        /* \"#utility.yul\":10186:10371   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":10293:10303   */\n      0x4e487b71\n        /* \"#utility.yul\":10288:10291   */\n      0xe0\n        /* \"#utility.yul\":10284:10304   */\n      shl\n        /* \"#utility.yul\":10281:10282   */\n      0x00\n        /* \"#utility.yul\":10274:10305   */\n      mstore\n        /* \"#utility.yul\":10328:10332   */\n      0x41\n        /* \"#utility.yul\":10325:10326   */\n      0x04\n        /* \"#utility.yul\":10318:10333   */\n      mstore\n        /* \"#utility.yul\":10356:10360   */\n      0x24\n        /* \"#utility.yul\":10353:10354   */\n      0x00\n        /* \"#utility.yul\":10346:10361   */\n      revert\n        /* \"#utility.yul\":10186:10371   */\n    tag_345:\n        /* \"#utility.yul\":10387:10389   */\n      0x40\n        /* \"#utility.yul\":10380:10402   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":10062:10408   */\n      jump\t// out\n        /* \"#utility.yul\":10413:10548   */\n    tag_113:\n        /* \"#utility.yul\":10452:10455   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10473:10490   */\n      dup3\n      eq\n        /* \"#utility.yul\":10470:10513   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":10493:10511   */\n      tag_348\n      tag_339\n      jump\t// in\n    tag_348:\n      pop\n        /* \"#utility.yul\":10540:10541   */\n      0x01\n        /* \"#utility.yul\":10529:10542   */\n      add\n      swap1\n        /* \"#utility.yul\":10413:10548   */\n      jump\t// out\n        /* \"#utility.yul\":10553:10728   */\n    tag_185:\n        /* \"#utility.yul\":10590:10593   */\n      0x00\n        /* \"#utility.yul\":10634:10638   */\n      0xff\n        /* \"#utility.yul\":10627:10632   */\n      dup3\n        /* \"#utility.yul\":10623:10639   */\n      and\n        /* \"#utility.yul\":10663:10667   */\n      0xff\n        /* \"#utility.yul\":10654:10661   */\n      dup2\n        /* \"#utility.yul\":10651:10668   */\n      eq\n        /* \"#utility.yul\":10648:10691   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":10671:10689   */\n      tag_351\n      tag_339\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":10720:10721   */\n      0x01\n        /* \"#utility.yul\":10707:10722   */\n      add\n      swap3\n        /* \"#utility.yul\":10553:10728   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10733:10942   */\n    tag_235:\n        /* \"#utility.yul\":10765:10766   */\n      0x00\n        /* \"#utility.yul\":10791:10792   */\n      dup3\n        /* \"#utility.yul\":10781:10913   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":10835:10845   */\n      0x4e487b71\n        /* \"#utility.yul\":10830:10833   */\n      0xe0\n        /* \"#utility.yul\":10826:10846   */\n      shl\n        /* \"#utility.yul\":10823:10824   */\n      0x00\n        /* \"#utility.yul\":10816:10847   */\n      mstore\n        /* \"#utility.yul\":10870:10874   */\n      0x12\n        /* \"#utility.yul\":10867:10868   */\n      0x04\n        /* \"#utility.yul\":10860:10875   */\n      mstore\n        /* \"#utility.yul\":10898:10902   */\n      0x24\n        /* \"#utility.yul\":10895:10896   */\n      0x00\n        /* \"#utility.yul\":10888:10903   */\n      revert\n        /* \"#utility.yul\":10781:10913   */\n    tag_353:\n      pop\n        /* \"#utility.yul\":10927:10936   */\n      mod\n      swap1\n        /* \"#utility.yul\":10733:10942   */\n      jump\t// out\n        /* \"#utility.yul\":10947:11074   */\n    tag_339:\n        /* \"#utility.yul\":11008:11018   */\n      0x4e487b71\n        /* \"#utility.yul\":11003:11006   */\n      0xe0\n        /* \"#utility.yul\":10999:11019   */\n      shl\n        /* \"#utility.yul\":10996:10997   */\n      0x00\n        /* \"#utility.yul\":10989:11020   */\n      mstore\n        /* \"#utility.yul\":11039:11043   */\n      0x11\n        /* \"#utility.yul\":11036:11037   */\n      0x04\n        /* \"#utility.yul\":11029:11044   */\n      mstore\n        /* \"#utility.yul\":11063:11067   */\n      0x24\n        /* \"#utility.yul\":11060:11061   */\n      0x00\n        /* \"#utility.yul\":11053:11068   */\n      revert\n        /* \"#utility.yul\":11079:11206   */\n    tag_176:\n        /* \"#utility.yul\":11140:11150   */\n      0x4e487b71\n        /* \"#utility.yul\":11135:11138   */\n      0xe0\n        /* \"#utility.yul\":11131:11151   */\n      shl\n        /* \"#utility.yul\":11128:11129   */\n      0x00\n        /* \"#utility.yul\":11121:11152   */\n      mstore\n        /* \"#utility.yul\":11171:11175   */\n      0x32\n        /* \"#utility.yul\":11168:11169   */\n      0x04\n        /* \"#utility.yul\":11161:11176   */\n      mstore\n        /* \"#utility.yul\":11195:11199   */\n      0x24\n        /* \"#utility.yul\":11192:11193   */\n      0x00\n        /* \"#utility.yul\":11185:11200   */\n      revert\n        /* \"#utility.yul\":11343:11522   */\n    tag_259:\n        /* \"#utility.yul\":11378:11381   */\n      0x00\n        /* \"#utility.yul\":11420:11421   */\n      0x03\n        /* \"#utility.yul\":11402:11418   */\n      returndatasize\n        /* \"#utility.yul\":11399:11422   */\n      gt\n        /* \"#utility.yul\":11396:11516   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":11466:11467   */\n      0x04\n        /* \"#utility.yul\":11463:11464   */\n      0x00\n        /* \"#utility.yul\":11460:11461   */\n      dup1\n        /* \"#utility.yul\":11445:11468   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":11503:11504   */\n      0x00\n        /* \"#utility.yul\":11497:11505   */\n      mload\n        /* \"#utility.yul\":11492:11495   */\n      0xe0\n        /* \"#utility.yul\":11488:11506   */\n      shr\n        /* \"#utility.yul\":11343:11522   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11527:12198   */\n    tag_261:\n        /* \"#utility.yul\":11566:11569   */\n      0x00\n        /* \"#utility.yul\":11608:11612   */\n      0x44\n        /* \"#utility.yul\":11590:11606   */\n      returndatasize\n        /* \"#utility.yul\":11587:11613   */\n      lt\n        /* \"#utility.yul\":11584:11623   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":11527:12198   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11584:11623   */\n    tag_360:\n        /* \"#utility.yul\":11650:11652   */\n      0x40\n        /* \"#utility.yul\":11644:11653   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":11715:11731   */\n      returndatasize\n        /* \"#utility.yul\":11711:11736   */\n      dup2\n      add\n        /* \"#utility.yul\":11708:11709   */\n      0x04\n        /* \"#utility.yul\":11644:11653   */\n      dup4\n        /* \"#utility.yul\":11687:11737   */\n      returndatacopy\n        /* \"#utility.yul\":11766:11770   */\n      dup2\n        /* \"#utility.yul\":11760:11771   */\n      mload\n        /* \"#utility.yul\":11790:11806   */\n      returndatasize\n        /* \"#utility.yul\":11825:11843   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11896:11898   */\n      dup2\n        /* \"#utility.yul\":11889:11893   */\n      0x24\n        /* \"#utility.yul\":11881:11887   */\n      dup5\n        /* \"#utility.yul\":11877:11894   */\n      add\n        /* \"#utility.yul\":11874:11899   */\n      gt\n        /* \"#utility.yul\":11869:11871   */\n      dup2\n        /* \"#utility.yul\":11861:11867   */\n      dup5\n        /* \"#utility.yul\":11858:11872   */\n      gt\n        /* \"#utility.yul\":11855:11900   */\n      or\n        /* \"#utility.yul\":11852:11910   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":11903:11908   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11527:12198   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11852:11910   */\n    tag_361:\n        /* \"#utility.yul\":11940:11946   */\n      dup3\n        /* \"#utility.yul\":11934:11938   */\n      dup6\n        /* \"#utility.yul\":11930:11947   */\n      add\n        /* \"#utility.yul\":11919:11947   */\n      swap2\n      pop\n        /* \"#utility.yul\":11976:11979   */\n      dup2\n        /* \"#utility.yul\":11970:11980   */\n      mload\n        /* \"#utility.yul\":12003:12005   */\n      dup2\n        /* \"#utility.yul\":11995:12001   */\n      dup2\n        /* \"#utility.yul\":11992:12006   */\n      gt\n        /* \"#utility.yul\":11989:12016   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":12009:12014   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11527:12198   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11989:12016   */\n    tag_362:\n        /* \"#utility.yul\":12093:12095   */\n      dup5\n        /* \"#utility.yul\":12074:12090   */\n      returndatasize\n        /* \"#utility.yul\":12068:12072   */\n      dup8\n        /* \"#utility.yul\":12064:12091   */\n      add\n        /* \"#utility.yul\":12060:12096   */\n      add\n        /* \"#utility.yul\":12053:12057   */\n      0x20\n        /* \"#utility.yul\":12044:12050   */\n      dup3\n        /* \"#utility.yul\":12039:12042   */\n      dup6\n        /* \"#utility.yul\":12035:12051   */\n      add\n        /* \"#utility.yul\":12031:12058   */\n      add\n        /* \"#utility.yul\":12028:12097   */\n      gt\n        /* \"#utility.yul\":12025:12107   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":12100:12105   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11527:12198   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12025:12107   */\n    tag_363:\n        /* \"#utility.yul\":12116:12173   */\n      tag_364\n        /* \"#utility.yul\":12167:12171   */\n      0x20\n        /* \"#utility.yul\":12158:12164   */\n      dup3\n        /* \"#utility.yul\":12150:12156   */\n      dup7\n        /* \"#utility.yul\":12146:12165   */\n      add\n        /* \"#utility.yul\":12142:12172   */\n      add\n        /* \"#utility.yul\":12136:12140   */\n      dup8\n        /* \"#utility.yul\":12116:12173   */\n      tag_343\n      jump\t// in\n    tag_364:\n      pop\n        /* \"#utility.yul\":12189:12192   */\n      swap1\n      swap6\n        /* \"#utility.yul\":11527:12198   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12203:12334   */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12278:12309   */\n      dup2\n      and\n        /* \"#utility.yul\":12268:12310   */\n      dup2\n      eq\n        /* \"#utility.yul\":12258:12328   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":12324:12325   */\n      0x00\n        /* \"#utility.yul\":12321:12322   */\n      dup1\n        /* \"#utility.yul\":12314:12326   */\n      revert\n        /* \"#utility.yul\":12258:12328   */\n    tag_366:\n        /* \"#utility.yul\":12203:12334   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220de0f3645a9d8c95cd46201e87fb3374b960ced5ad763f03906c728bfa502dca464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:8"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:8"
															},
															"nodeType": "YulIf",
															"src": "136:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:8"
															},
															"nodeType": "YulIf",
															"src": "273:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:8"
															},
															"nodeType": "YulIf",
															"src": "357:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:8"
															},
															"nodeType": "YulIf",
															"src": "449:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:8"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:8"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:8"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:8"
															},
															"nodeType": "YulIf",
															"src": "632:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:8"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:8"
															},
															"nodeType": "YulIf",
															"src": "771:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:8",
																"statements": []
															},
															"src": "852:129:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:8"
															},
															"nodeType": "YulIf",
															"src": "990:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:8",
														"type": ""
													}
												],
												"src": "14:1087:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:8"
															},
															"nodeType": "YulIf",
															"src": "1249:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:8"
															},
															"nodeType": "YulIf",
															"src": "1319:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:8",
														"type": ""
													}
												],
												"src": "1106:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040819052600060808190526200001b916002916200015e565b50604080516102808101825260008152600160208201819052918101919091526002606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082018190526101c082018190526101e08201819052610200820181905261022082018190526102408201819052610260820152620000ce906003906014620001ed565b50600b805460ff19166001179055348015620000e957600080fd5b506040516200174e3803806200174e8339810160408190526200010c9162000294565b80516200012190600c9060208401906200015e565b5050600b8054610100600160a81b03191633610100021790556000600481905560016005556006805460ff191690556007819055600855620003c3565b8280546200016c9062000370565b90600052602060002090601f016020900481019282620001905760008555620001db565b82601f10620001ab57805160ff1916838001178555620001db565b82800160010185558215620001db579182015b82811115620001db578251825591602001919060010190620001be565b50620001e99291506200027d565b5090565b600183019183908215620001db5791602002820160005b838211156200024457835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030262000204565b8015620002735782816101000a81549060ff021916905560010160208160000104928301926001030262000244565b5050620001e99291505b5b80821115620001e957600081556001016200027e565b60006020808385031215620002a857600080fd5b82516001600160401b0380821115620002c057600080fd5b818501915085601f830112620002d557600080fd5b815181811115620002ea57620002ea620003ad565b604051601f8201601f19908116603f01168101908382118183101715620003155762000315620003ad565b8160405282815288868487010111156200032e57600080fd5b600093505b8284101562000352578484018601518185018701529285019262000333565b82841115620003645760008684830101525b98975050505050505050565b600181811c908216806200038557607f821691505b60208210811415620003a757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61137b80620003d36000396000f3fe60806040526004361061009c5760003560e01c80633b668059116100645780633b6680591461014b5780633d65df701461016057806360daa85114610173578063aa90c726146101a3578063b4a99a4e146101b8578063fd6c3b1b146101f557600080fd5b80630390c11c146100a15780630a67d2c7146100c95780631309a563146100de578063154602591461010857806332b61b4c1461011d575b600080fd5b3480156100ad57600080fd5b506100b6610222565b6040519081526020015b60405180910390f35b6100dc6100d7366004610f82565b61026e565b005b3480156100ea57600080fd5b50600b546100f89060ff1681565b60405190151581526020016100c0565b34801561011457600080fd5b506100dc61032f565b34801561012957600080fd5b5061013d610138366004610f82565b6103ca565b6040516100c0929190611150565b34801561015757600080fd5b506100b66105fa565b61013d61016e366004610f82565b61063a565b34801561017f57600080fd5b50610188610735565b604080519384526020840192909252908201526060016100c0565b3480156101af57600080fd5b506100dc61078a565b3480156101c457600080fd5b50600b546101dd9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561020157600080fd5b50610215610210366004610f82565b610824565b6040516100c0919061108b565b600b5460009061010090046001600160a01b0316336001600160a01b0316146102665760405162461bcd60e51b815260040161025d906110e2565b60405180910390fd5b506004545b90565b600b5461010090046001600160a01b0316336001600160a01b0316146102a65760405162461bcd60e51b815260040161025d906110e2565b47806102f45760405162461bcd60e51b815260206004820152601d60248201527f4572726f7221204e6f2042616c616e636520746f207769746864726177000000604482015260640161025d565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561032a573d6000803e3d6000fd5b505050565b600b5461010090046001600160a01b0316336001600160a01b0316146103675760405162461bcd60e51b815260040161025d906110e2565b600b5460ff1615156001146103be5760405162461bcd60e51b815260206004820152601b60248201527f44726f707369746520697320616c72656164792052756e6e696e670000000000604482015260640161025d565b600b805460ff19169055565b600b5460009060609061010090046001600160a01b0316336001600160a01b0316146104085760405162461bcd60e51b815260040161025d906110e2565b600b5460ff161561042b5760405162461bcd60e51b815260040161025d90611119565b6103e86004541061047a5760405162461bcd60e51b815260206004820152601960248201527813585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959603a1b604482015260640161025d565b6000610484610890565b905061051e84826005546002805461049b90611189565b80601f01602080910402602001604051908101604052809291908181526020018280546104c790611189565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050610ac8565b6004805490600061052e836111ff565b90915550506001600160a01b03841660009081526009602090815260408220805460018101825590835291200181905560028054829190819061057090611189565b80601f016020809104026020016040519081016040528092919081815260200182805461059c90611189565b80156105e95780601f106105be576101008083540402835291602001916105e9565b820191906000526020600020905b8154815290600101906020018083116105cc57829003601f168201915b505050505090509250925050915091565b600b5460009061010090046001600160a01b0316336001600160a01b0316146106355760405162461bcd60e51b815260040161025d906110e2565b504790565b600b5460009060609060ff16156106635760405162461bcd60e51b815260040161025d90611119565b6103e8600454106106b25760405162461bcd60e51b815260206004820152601960248201527813585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959603a1b604482015260640161025d565b3468015af1d78b58c400001461070a5760405162461bcd60e51b815260206004820152601960248201527f42616c616e6365206d757374206265203235204d617469637300000000000000604482015260640161025d565b6000610714610890565b905061072b84826005546002805461049b90611189565b61051e3334610bd9565b600b546000908190819061010090046001600160a01b0316336001600160a01b0316146107745760405162461bcd60e51b815260040161025d906110e2565b505060065460075460085460ff90921692509192565b600b5461010090046001600160a01b0316336001600160a01b0316146107c25760405162461bcd60e51b815260040161025d906110e2565b600b5460ff16156108155760405162461bcd60e51b815260206004820152601b60248201527f44726f707369746520697320616c72656164792053746f707065640000000000604482015260640161025d565b600b805460ff19166001179055565b6001600160a01b03811660009081526009602090815260409182902080548351818402810184019094528084526060939283018282801561088457602002820191906000526020600020905b815481526020019060010190808311610870575b50505050509050919050565b600b5460009060ff16156108b65760405162461bcd60e51b815260040161025d90611119565b60006108c0610c0a565b90506000600382601481106108d7576108d7611272565b602081049091015460ff601f9092166101000a9004169050801580156109045750600654603260ff909116105b156109785760065460405161091f9160ff169060200161101d565b60405160208183030381529060405260029080519060200190610943929190610e6e565b506006805460ff169060006109578361121a565b91906101000a81548160ff021916908360ff16021790555050809250505090565b6001811115801561098b57506064600754105b156109f0576007546040516311dbdb1960e21b602082015260248101919091526044015b604051602081830303815290604052600290805190602001906109d3929190610e6e565b50600780549060006109e4836111ff565b90915550909392505050565b60028111158015610a05575061035260085411155b15610a79576008546040516653696c7665725f60c81b6020820152602781019190915260470160405160208183030381529060405260029080519060200190610a4f929190610e6e565b6002908054610a5d90611189565b610a68929190610ef2565b50600880549060006109e4836111ff565b60646007541015610aac575060075460405164476f6c645f60d81b602082015260258101919091526001906045016109af565b5060065460405160009161091f9160ff9091169060200161101d565b6001600160a01b038416610b285760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161025d565b33610b4981600087610b3988610c66565b610b4288610c66565b5050505050565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b79908490611171565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b4281600087878787610cb9565b6001600160a01b0382166000908152600a602052604081208054839290610c01908490611171565b90915550505050565b60008060144233604051602001610c3d92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c610c60919061123a565b92915050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ca057610ca0611272565b602090810291909101015292915050565b505050505050565b6001600160a01b0384163b15610cb15760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cfd9089908990889088908890600401611046565b602060405180830381600087803b158015610d1757600080fd5b505af1925050508015610d47575060408051601f3d908101601f19168201909252610d4491810190610fa6565b60015b610df457610d53611288565b806308c379a01415610d8d5750610d686112a3565b80610d735750610d8f565b8060405162461bcd60e51b815260040161025d91906110cf565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161025d565b6001600160e01b0319811663f23a6e6160e01b14610e655760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161025d565b50505050505050565b828054610e7a90611189565b90600052602060002090601f016020900481019282610e9c5760008555610ee2565b82601f10610eb557805160ff1916838001178555610ee2565b82800160010185558215610ee2579182015b82811115610ee2578251825591602001919060010190610ec7565b50610eee929150610f6d565b5090565b828054610efe90611189565b90600052602060002090601f016020900481019282610f205760008555610ee2565b82601f10610f315780548555610ee2565b82800160010185558215610ee257600052602060002091601f016020900482015b82811115610ee2578254825591600101919060010190610f52565b5b80821115610eee5760008155600101610f6e565b600060208284031215610f9457600080fd5b8135610f9f8161132d565b9392505050565b600060208284031215610fb857600080fd5b81516001600160e01b031981168114610f9f57600080fd5b6000815180845260005b81811015610ff657602081850181015186830182015201610fda565b81811115611008576000602083870101525b50601f01601f19169290920160200192915050565b674469616d6f6e645f60c01b815260f89190911b6001600160f81b031916600882015260090190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061108090830184610fd0565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110c3578351835292840192918401916001016110a7565b50909695505050505050565b602081526000610f9f6020830184610fd0565b6020808252601c908201527f4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000604082015260600190565b6020808252601b908201527f44726f7073697465206973206e6f74204f70656e6564205965742e0000000000604082015260600190565b8281526040602082015260006111696040830184610fd0565b949350505050565b600082198211156111845761118461125c565b500190565b600181811c9082168061119d57607f821691505b602082108114156111be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156111f857634e487b7160e01b600052604160045260246000fd5b6040525050565b60006000198214156112135761121361125c565b5060010190565b600060ff821660ff8114156112315761123161125c565b60010192915050565b60008261125757634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060033d111561026b5760046000803e5060005160e01c90565b600060443d10156112b15790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112e157505050505090565b82850191508151818111156112f95750505050505090565b843d87010160208285010111156113135750505050505090565b611322602082860101876111c4565b509095945050505050565b6001600160a01b038116811461134257600080fd5b5056fea2646970667358221220de0f3645a9d8c95cd46201e87fb3374b960ced5ad763f03906c728bfa502dca464736f6c63430008070033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH3 0x1B SWAP2 PUSH1 0x2 SWAP2 PUSH3 0x15E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x280 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x180 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1A0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1C0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1E0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x200 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x220 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x240 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x260 DUP3 ADD MSTORE PUSH3 0xCE SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x14 PUSH3 0x1ED JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x174E CODESIZE SUB DUP1 PUSH3 0x174E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x10C SWAP2 PUSH3 0x294 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x121 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x15E JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH3 0x3C3 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x16C SWAP1 PUSH3 0x370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x190 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1DB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1AB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1DB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1BE JUMP JUMPDEST POP PUSH3 0x1E9 SWAP3 SWAP2 POP PUSH3 0x27D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH3 0x1DB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x244 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x204 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x273 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x244 JUMP JUMPDEST POP POP PUSH3 0x1E9 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1E9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x27E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x2EA JUMPI PUSH3 0x2EA PUSH3 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x315 JUMPI PUSH3 0x315 PUSH3 0x3AD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x352 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x333 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x364 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x137B DUP1 PUSH3 0x3D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B668059 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xFD6C3B1B EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x32B61B4C EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0xF8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x32F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x78A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH2 0x51E DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x514 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x514 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x52E DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x570 SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE PUSH9 0x15AF1D78B58C40000 EQ PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D757374206265203235204D617469637300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH2 0x72B DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x51E CALLER CALLVALUE PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 POP SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x870 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C0 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x14 DUP2 LT PUSH2 0x8D7 JUMPI PUSH2 0x8D7 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x32 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST ISZERO PUSH2 0x978 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x91F SWAP2 PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x943 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x957 DUP4 PUSH2 0x121A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI POP PUSH1 0x64 PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x11DBDB19 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9D3 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9E4 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI POP PUSH2 0x352 PUSH1 0x8 SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0xA79 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH7 0x53696C7665725F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x47 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA4F SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP1 SLOAD PUSH2 0xA5D SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0xA68 SWAP3 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9E4 DUP4 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xAAC JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH5 0x476F6C645F PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x45 ADD PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x91F SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST CALLER PUSH2 0xB49 DUP2 PUSH1 0x0 DUP8 PUSH2 0xB39 DUP9 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xB42 DUP9 PUSH2 0xC66 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xB79 SWAP1 DUP5 SWAP1 PUSH2 0x1171 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB42 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC01 SWAP1 DUP5 SWAP1 PUSH2 0x1171 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xCFD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD47 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD44 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDF4 JUMPI PUSH2 0xD53 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xD8D JUMPI POP PUSH2 0xD68 PUSH2 0x12A3 JUMP JUMPDEST DUP1 PUSH2 0xD73 JUMPI POP PUSH2 0xD8F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xE7A SWAP1 PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xE9C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xEB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEE2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEE2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xEC7 JUMP JUMPDEST POP PUSH2 0xEEE SWAP3 SWAP2 POP PUSH2 0xF6D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xEFE SWAP1 PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF20 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF31 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEE2 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF9F DUP2 PUSH2 0x132D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFDA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x4469616D6F6E645F PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0xF8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x8 DUP3 ADD MSTORE PUSH1 0x9 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1080 SWAP1 DUP4 ADD DUP5 PUSH2 0xFD0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10A7 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1169 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFD0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x1184 PUSH2 0x125C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x119D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x11F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1213 JUMPI PUSH2 0x1213 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1231 JUMPI PUSH2 0x1231 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x12B1 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12E1 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12F9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1313 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1322 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x11C4 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF CALLDATASIZE GASLIMIT 0xA9 0xD8 0xC9 0x5C 0xD4 PUSH3 0x1E87F 0xB3 CALLDATACOPY 0x4B SWAP7 0xC 0xED GAS 0xD7 PUSH4 0xF03906C7 0x28 0xBF 0xA5 MUL 0xDC LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "188:15:2:-:0;122:5082;188:15;;;-1:-1:-1;122:5082:2;188:15;;;;;;;;:::i;:::-;-1:-1:-1;209:66:2;;;;;;;;-1:-1:-1;209:66:2;;237:1;209:66;;;;;;;;;;;;;241:1;209:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1142:27:2;;;-1:-1:-1;;1142:27:2;1165:4;1142:27;;;1241:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;;1305:5:2;:27;;-1:-1:-1;;;;;;1305:27:2;1321:10;1305:27;;;;;-1:-1:-1;1343:15:2;:17;;;-1:-1:-1;1394:11:2;:13;-1:-1:-1;1454:9:2;;-1:-1:-1;;1454:9:2;;;-1:-1:-1;1485:6:2;;;1501;:8;122:5082;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:5082:2;;;-1:-1:-1;122:5082:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:5082:2;;;-1:-1:-1;122:5082:2;;;;;;;;;;;;;;;14:1087:8;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:8;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:8;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:8:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;122:5082:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ContractBalance_561": {
									"entryPoint": 1530,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@CryptoRandomMint_844": {
									"entryPoint": 1594,
									"id": 844,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@FiatRandomMint_765": {
									"entryPoint": 970,
									"id": 765,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@IsPaused_415": {
									"entryPoint": null,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Owner_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_1055": {
									"entryPoint": 3174,
									"id": 1055,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_964": {
									"entryPoint": 3249,
									"id": 964,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1027": {
									"entryPoint": 3257,
									"id": 1027,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_946": {
									"entryPoint": 2760,
									"id": 946,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkMintedCategoryWise_474": {
									"entryPoint": 1845,
									"id": 474,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@checkTotalMinted_484": {
									"entryPoint": 546,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositAmount_779": {
									"entryPoint": 3033,
									"id": 779,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@openDropsite_518": {
									"entryPoint": 815,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@random_586": {
									"entryPoint": 3082,
									"id": 586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@returnOwner_385": {
									"entryPoint": 2084,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stopDropsite_501": {
									"entryPoint": 1930,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateConditions_714": {
									"entryPoint": 2192,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withDraw_547": {
									"entryPoint": 622,
									"id": 547,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_uint8__to_t_string_memory_ptr_t_uint8__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4166,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12336:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:8"
															},
															"nodeType": "YulIf",
															"src": "94:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:8",
														"type": ""
													}
												],
												"src": "14:247:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "392:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "392:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "392:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "365:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "374:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:32:8"
															},
															"nodeType": "YulIf",
															"src": "354:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "441:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "428:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "419:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "485:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "460:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "500:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "510:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "321:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:8",
														"type": ""
													}
												],
												"src": "266:255:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:210:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "652:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "661:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "654:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "654:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "654:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "627:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "619:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:32:8"
															},
															"nodeType": "YulIf",
															"src": "616:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "677:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "690:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "681:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "770:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "782:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "772:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "772:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "772:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "750:3:8",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "755:10:8",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "746:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "746:20:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "735:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "735:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "725:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:51:8"
															},
															"nodeType": "YulIf",
															"src": "715:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "795:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "805:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "572:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "583:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "595:6:8",
														"type": ""
													}
												],
												"src": "526:290:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "870:422:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "880:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "900:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "894:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "884:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "922:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "915:19:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "943:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "952:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "947:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1014:110:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1028:14:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1038:4:8",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1032:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1070:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1075:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1066:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1066:11:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1079:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1062:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1062:20:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1098:5:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1105:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1094:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1094:13:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1109:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1090:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1090:22:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1084:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1084:29:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:59:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:59:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "973:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "970:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "984:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "986:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "995:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "998:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "991:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "991:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "986:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "966:3:8",
																"statements": []
															},
															"src": "962:162:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:62:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1187:3:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1192:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1183:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1183:16:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1201:4:8",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1179:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1179:27:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1208:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1172:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1172:38:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1172:38:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1139:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1142:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1136:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:13:8"
															},
															"nodeType": "YulIf",
															"src": "1133:87:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1229:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1244:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1257:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1265:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1253:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1253:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1274:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1270:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1270:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1249:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1249:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "847:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "854:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "862:3:8",
														"type": ""
													}
												],
												"src": "821:471:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:132:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1530:3:8"
																	},
																	{
																		"hexValue": "4469616d6f6e645f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1535:10:8",
																		"type": "",
																		"value": "Diamond_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1523:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:23:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1523:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1566:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1571:1:8",
																				"type": "",
																				"value": "8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1583:3:8",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1588:6:8"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1579:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1579:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1601:3:8",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1606:3:8",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1597:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1597:13:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:36:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1621:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1632:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:8",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1621:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_uint8__to_t_string_memory_ptr_t_uint8__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1489:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1494:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1505:3:8",
														"type": ""
													}
												],
												"src": "1297:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1870:100:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1887:3:8"
																	},
																	{
																		"hexValue": "476f6c645f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1892:7:8",
																		"type": "",
																		"value": "Gold_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1880:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:20:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1880:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1920:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1925:1:8",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1916:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1916:11:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1929:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:27:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1945:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1846:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1851:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1862:3:8",
														"type": ""
													}
												],
												"src": "1650:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2212:3:8"
																	},
																	{
																		"hexValue": "476f6c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2217:6:8",
																		"type": "",
																		"value": "Gold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2205:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2244:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2249:1:8",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2240:11:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2253:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2233:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2233:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2233:27:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2269:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2285:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2276:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2269:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2171:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2176:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2187:3:8",
														"type": ""
													}
												],
												"src": "1975:319:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2519:102:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:8"
																	},
																	{
																		"hexValue": "53696c7665725f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2541:9:8",
																		"type": "",
																		"value": "Silver_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2571:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2576:1:8",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2567:11:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2580:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2560:27:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2596:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2607:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2603:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2596:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2495:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2511:3:8",
														"type": ""
													}
												],
												"src": "2299:322:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2773:147:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2790:3:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2795:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2783:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2822:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2818:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2818:12:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2840:2:8",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "2844:6:8"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:15:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2857:26:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2853:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2853:31:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2832:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2832:53:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2811:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:75:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2811:75:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2895:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2906:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2911:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2902:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2895:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2741:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2746:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2765:3:8",
														"type": ""
													}
												],
												"src": "2626:294:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3042:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3052:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3064:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3075:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3052:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3094:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3125:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3130:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3121:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3121:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3134:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3117:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3117:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3087:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3022:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3033:4:8",
														"type": ""
													}
												],
												"src": "2925:219:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3380:329:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3390:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3408:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3413:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3417:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3394:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3435:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3450:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3458:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3428:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3428:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3482:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3493:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3510:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3498:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3498:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3471:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3588:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3573:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3566:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3620:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3631:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:19:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3609:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3650:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3675:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3687:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3698:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3683:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3683:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3658:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3658:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3650:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3317:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3328:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3336:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3344:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3352:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3360:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3371:4:8",
														"type": ""
													}
												],
												"src": "3149:560:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3865:481:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3875:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3885:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3879:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3896:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3914:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3925:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3910:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:18:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3900:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3944:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3955:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3937:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3937:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3937:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3967:17:8",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3978:6:8"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3971:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3993:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4013:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4007:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4007:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3997:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4029:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4060:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4071:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4082:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4067:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:18:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4060:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4094:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4112:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4120:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:15:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4098:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4132:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4141:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4136:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4200:120:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4221:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "4232:6:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4226:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4226:13:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4214:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4214:26:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4214:26:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4253:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4264:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4269:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4260:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4260:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4253:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4285:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4299:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4307:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4295:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4295:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4285:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4162:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4165:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4159:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4173:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4175:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4184:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4187:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4180:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4180:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4175:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4155:3:8",
																"statements": []
															},
															"src": "4151:169:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4329:11:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4337:3:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4329:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3834:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3845:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3856:4:8",
														"type": ""
													}
												],
												"src": "3714:632:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4456:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4468:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4479:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4456:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4498:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4523:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4516:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4516:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4509:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4491:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4491:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4491:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4415:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4426:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4437:4:8",
														"type": ""
													}
												],
												"src": "4351:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4664:98:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4681:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4692:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4674:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4704:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4729:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4741:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4752:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4737:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4712:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4704:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4633:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4655:4:8",
														"type": ""
													}
												],
												"src": "4543:219:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4941:242:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4958:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4951:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4951:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4951:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4981:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5031:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5042:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5027:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5027:18:8"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5047:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5102:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5113:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5098:18:8"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5118:22:8",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5091:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5150:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5162:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5150:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4918:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4932:4:8",
														"type": ""
													}
												],
												"src": "4767:416:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5362:230:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5379:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5372:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5413:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5409:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5402:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5402:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5452:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5463:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5448:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5448:18:8"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5468:34:8",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5441:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5441:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5441:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5523:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5534:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5519:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5519:18:8"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5539:10:8",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5512:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5559:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5567:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5559:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5339:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5353:4:8",
														"type": ""
													}
												],
												"src": "5188:404:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5771:175:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5788:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5799:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5781:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5781:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5822:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5833:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5818:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5818:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5838:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5811:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5811:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5811:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5872:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5857:18:8"
																	},
																	{
																		"hexValue": "42616c616e6365206d757374206265203235204d6174696373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5877:27:8",
																		"type": "",
																		"value": "Balance must be 25 Matics"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5850:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5850:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5850:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5914:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5926:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5937:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5922:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5914:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5748:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5762:4:8",
														"type": ""
													}
												],
												"src": "5597:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6125:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6142:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6153:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6135:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6135:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6176:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6187:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6172:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6165:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6215:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6226:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6211:18:8"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6231:29:8",
																		"type": "",
																		"value": "Dropsite is already Running"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6204:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6270:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6282:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6293:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6278:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6270:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6102:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6116:4:8",
														"type": ""
													}
												],
												"src": "5951:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6481:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6498:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6532:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6543:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6528:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6528:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6548:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6521:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6571:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6582:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6567:18:8"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6587:29:8",
																		"type": "",
																		"value": "Dropsite is already Stopped"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6560:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6626:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6638:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6634:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6626:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6458:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6472:4:8",
														"type": ""
													}
												],
												"src": "6307:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6837:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6854:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6888:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6899:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6884:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6904:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6877:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6938:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6923:18:8"
																	},
																	{
																		"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6943:30:8",
																		"type": "",
																		"value": "Only NFT-ES Owner can Access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6916:58:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6995:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7006:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6814:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6828:4:8",
														"type": ""
													}
												],
												"src": "6663:352:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7194:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7211:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7222:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7204:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7245:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7256:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7241:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7241:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7261:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7234:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7234:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7234:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7284:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7295:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7280:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7280:18:8"
																	},
																	{
																		"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7300:29:8",
																		"type": "",
																		"value": "Dropsite is not Opened Yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7273:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7273:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7339:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7351:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7362:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7339:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7171:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7185:4:8",
														"type": ""
													}
												],
												"src": "7020:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7550:175:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7567:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7578:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7560:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7560:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7601:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7612:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7597:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7617:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7590:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7640:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7651:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7636:18:8"
																	},
																	{
																		"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7656:27:8",
																		"type": "",
																		"value": "Max Minting Limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7629:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7629:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7693:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7705:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7716:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7701:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7701:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7693:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7527:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7541:4:8",
														"type": ""
													}
												],
												"src": "7376:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7904:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7921:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7914:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7914:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7966:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7951:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7971:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7944:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7944:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:8"
																	},
																	{
																		"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8010:31:8",
																		"type": "",
																		"value": "Error! No Balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7983:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7983:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8063:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8051:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7881:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7895:4:8",
														"type": ""
													}
												],
												"src": "7730:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8262:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8279:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8290:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8272:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8272:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8313:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8324:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8309:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8329:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8302:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8352:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8363:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8348:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8348:18:8"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8368:34:8",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8341:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8341:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8341:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8423:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8434:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8419:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8419:18:8"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8439:3:8",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8412:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8452:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8464:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8475:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8460:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8452:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8239:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8253:4:8",
														"type": ""
													}
												],
												"src": "8088:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8591:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8601:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8613:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8624:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8609:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8609:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8601:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8643:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8654:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8636:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8560:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8571:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8582:4:8",
														"type": ""
													}
												],
												"src": "8490:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8821:141:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8838:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8849:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8831:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8831:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8831:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8876:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8887:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8872:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8892:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8865:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8865:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8904:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8929:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8941:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8952:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8937:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8912:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8912:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8904:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8782:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8793:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8801:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8812:4:8",
														"type": ""
													}
												],
												"src": "8672:290:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9096:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9106:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9118:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9129:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9114:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9106:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9148:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9159:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9141:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9186:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9197:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9182:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9182:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9202:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9175:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9175:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9057:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9068:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9076:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9087:4:8",
														"type": ""
													}
												],
												"src": "8967:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9377:162:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9399:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9410:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9395:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9429:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9440:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9422:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9422:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9483:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9510:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9521:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9506:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9506:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9526:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9499:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9499:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9330:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9341:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9349:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9357:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9368:4:8",
														"type": ""
													}
												],
												"src": "9220:319:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9619:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9608:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9615:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9611:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9605:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:13:8"
															},
															"nodeType": "YulIf",
															"src": "9602:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9661:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9664:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9657:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9657:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9650:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9575:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9578:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9584:3:8",
														"type": ""
													}
												],
												"src": "9544:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9732:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9742:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9756:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9759:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9752:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9752:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9742:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9773:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9803:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9809:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9799:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9799:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9777:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9850:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9852:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9866:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9874:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9862:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9862:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9852:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9830:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:26:8"
															},
															"nodeType": "YulIf",
															"src": "9820:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9940:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9961:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9968:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9973:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9964:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9964:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9954:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9954:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9954:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10005:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10008:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9998:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9998:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9998:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10036:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10026:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9896:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9919:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9927:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9916:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9916:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9893:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9893:38:8"
															},
															"nodeType": "YulIf",
															"src": "9890:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9712:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9721:6:8",
														"type": ""
													}
												],
												"src": "9677:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10109:299:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10119:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10141:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "10157:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10163:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10153:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10153:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10172:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10168:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10168:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10149:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10149:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10137:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10137:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "10123:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10260:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10281:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10288:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10293:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10284:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10284:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10274:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10274:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10274:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10325:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10328:4:8",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10318:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10318:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10318:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10353:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10356:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10346:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10346:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10346:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10195:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10207:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10192:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10192:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10231:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10243:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10228:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10228:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10189:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:62:8"
															},
															"nodeType": "YulIf",
															"src": "10186:185:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10387:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10391:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10380:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10380:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10380:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10091:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10099:4:8",
														"type": ""
													}
												],
												"src": "10062:346:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10460:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10491:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10493:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10493:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10493:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10476:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10487:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10483:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10483:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10473:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10473:17:8"
															},
															"nodeType": "YulIf",
															"src": "10470:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10522:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10533:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10540:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10529:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10529:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10522:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10442:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10452:3:8",
														"type": ""
													}
												],
												"src": "10413:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10598:130:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10608:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10627:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10634:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10623:16:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "10612:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10669:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10671:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10671:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10671:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "10654:7:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10663:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10651:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10651:17:8"
															},
															"nodeType": "YulIf",
															"src": "10648:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10700:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "10711:7:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10720:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10707:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10707:15:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10580:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10590:3:8",
														"type": ""
													}
												],
												"src": "10553:175:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10771:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10802:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10823:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10830:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10835:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10826:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10826:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10816:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10816:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10816:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10867:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10870:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10860:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10860:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10860:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10895:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10898:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10888:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10888:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10888:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10791:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10784:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10784:9:8"
															},
															"nodeType": "YulIf",
															"src": "10781:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10922:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10931:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10934:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "10927:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10927:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10922:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10756:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10759:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10765:1:8",
														"type": ""
													}
												],
												"src": "10733:209:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10979:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10996:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11003:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11008:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10999:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10999:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10989:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10989:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10989:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11036:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11039:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11029:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11029:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11060:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11063:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10947:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11111:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11128:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11135:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11140:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11131:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11121:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11121:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11121:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11168:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11171:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11161:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11161:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11195:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11185:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11185:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11185:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11079:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11243:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11260:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11267:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11272:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11263:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11263:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11300:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11303:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11293:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11293:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11324:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11327:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11317:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11317:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11317:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11211:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11386:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11431:85:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11460:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11463:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11466:1:8",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "11445:14:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11445:23:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11445:23:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11481:25:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11492:3:8",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11503:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11497:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11497:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "11488:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11488:18:8"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "11481:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "11402:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11402:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11420:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11399:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11399:23:8"
															},
															"nodeType": "YulIf",
															"src": "11396:120:8"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "11378:3:8",
														"type": ""
													}
												],
												"src": "11343:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11574:624:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11614:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11616:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "11590:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11590:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11608:4:8",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11587:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:26:8"
															},
															"nodeType": "YulIf",
															"src": "11584:39:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11632:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11650:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11644:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11644:9:8"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "11636:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11662:16:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11676:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11672:6:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11666:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11702:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11708:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "11715:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11715:16:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11733:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11711:25:8"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11687:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11687:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11687:50:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11746:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11766:4:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11760:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11760:11:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11750:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11780:26:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "11790:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11790:16:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11784:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11815:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11825:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11819:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11901:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11903:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11861:6:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11869:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11858:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11858:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11881:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11889:4:8",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11877:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11877:17:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11896:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11874:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11874:25:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11855:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11855:45:8"
															},
															"nodeType": "YulIf",
															"src": "11852:58:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11919:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11934:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11940:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11930:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11930:17:8"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "11923:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11956:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "11976:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11970:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11970:10:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11960:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12007:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "12009:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11995:6:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "12003:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11992:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11992:14:8"
															},
															"nodeType": "YulIf",
															"src": "11989:27:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12098:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "12100:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "12039:3:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12044:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12035:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12035:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12053:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12031:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12031:27:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "12068:4:8"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "12074:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12074:16:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12064:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12064:27:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12093:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12060:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12060:36:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12028:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:69:8"
															},
															"nodeType": "YulIf",
															"src": "12025:82:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12136:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12150:6:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12158:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12146:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12146:19:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12167:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12142:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12142:30:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "12116:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12182:10:8",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "12189:3:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12182:3:8"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11566:3:8",
														"type": ""
													}
												],
												"src": "11527:671:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12248:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12312:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12321:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12324:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12314:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12314:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12314:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12271:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12282:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12297:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12302:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "12293:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12293:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12306:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "12289:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12289:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12278:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12278:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12268:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12268:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12261:50:8"
															},
															"nodeType": "YulIf",
															"src": "12258:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12237:5:8",
														"type": ""
													}
												],
												"src": "12203:131:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_uint8__to_t_string_memory_ptr_t_uint8__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Diamond_\")\n        mstore(add(pos, 8), and(shl(248, value0), shl(248, 255)))\n        end := add(pos, 9)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Gold_\")\n        mstore(add(pos, 5), value0)\n        end := add(pos, 37)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Gold\")\n        mstore(add(pos, 4), value0)\n        end := add(pos, 36)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Silver_\")\n        mstore(add(pos, 7), value0)\n        end := add(pos, 39)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Balance must be 25 Matics\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is already Running\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is already Stopped\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only NFT-ES Owner can Access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is not Opened Yet.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Max Minting Limit reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Error! No Balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B668059 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xFD6C3B1B EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x32B61B4C EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0xF8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x32F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x78A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH2 0x51E DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x514 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x514 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x52E DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x570 SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x1189 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE PUSH9 0x15AF1D78B58C40000 EQ PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D757374206265203235204D617469637300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH2 0x72B DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x51E CALLER CALLVALUE PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 POP SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x870 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C0 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x14 DUP2 LT PUSH2 0x8D7 JUMPI PUSH2 0x8D7 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x32 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST ISZERO PUSH2 0x978 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x91F SWAP2 PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x943 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x957 DUP4 PUSH2 0x121A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI POP PUSH1 0x64 PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x11DBDB19 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9D3 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9E4 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI POP PUSH2 0x352 PUSH1 0x8 SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0xA79 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH7 0x53696C7665725F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x47 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA4F SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP1 SLOAD PUSH2 0xA5D SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0xA68 SWAP3 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9E4 DUP4 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xAAC JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH5 0x476F6C645F PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x45 ADD PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x91F SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST CALLER PUSH2 0xB49 DUP2 PUSH1 0x0 DUP8 PUSH2 0xB39 DUP9 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xB42 DUP9 PUSH2 0xC66 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xB79 SWAP1 DUP5 SWAP1 PUSH2 0x1171 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB42 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC01 SWAP1 DUP5 SWAP1 PUSH2 0x1171 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xCFD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD47 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD44 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDF4 JUMPI PUSH2 0xD53 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xD8D JUMPI POP PUSH2 0xD68 PUSH2 0x12A3 JUMP JUMPDEST DUP1 PUSH2 0xD73 JUMPI POP PUSH2 0xD8F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xE7A SWAP1 PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xE9C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xEB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEE2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEE2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xEC7 JUMP JUMPDEST POP PUSH2 0xEEE SWAP3 SWAP2 POP PUSH2 0xF6D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xEFE SWAP1 PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF20 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF31 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xEE2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEE2 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF9F DUP2 PUSH2 0x132D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFDA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x4469616D6F6E645F PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0xF8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x8 DUP3 ADD MSTORE PUSH1 0x9 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1080 SWAP1 DUP4 ADD DUP5 PUSH2 0xFD0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10A7 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1169 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFD0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x1184 PUSH2 0x125C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x119D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x11F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1213 JUMPI PUSH2 0x1213 PUSH2 0x125C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1231 JUMPI PUSH2 0x1231 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x12B1 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12E1 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12F9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1313 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1322 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x11C4 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF CALLDATASIZE GASLIMIT 0xA9 0xD8 0xC9 0x5C 0xD4 PUSH3 0x1E87F 0xB3 CALLDATACOPY 0x4B SWAP7 0xC 0xED GAS 0xD7 PUSH4 0xF03906C7 0x28 0xBF 0xA5 MUL 0xDC LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "122:5082:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:104;;;;;;;;;;;;;:::i;:::-;;;8636:25:8;;;8624:2;8609:18;1660:104:2;;;;;;;;2122:214;;;;;;:::i;:::-;;:::i;:::-;;1142:27;;;;;;;;;;-1:-1:-1;1142:27:2;;;;;;;;;;;4516:14:8;;4509:22;4491:41;;4479:2;4464:18;1142:27:2;4351:187:8;1912:136:2;;;;;;;;;;;;;:::i;3991:446::-;;;;;;;;;;-1:-1:-1;3991:446:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2389:108::-;;;;;;;;;;;;;:::i;4614:588::-;;;;;;:::i;:::-;;:::i;1528:127::-;;;;;;;;;;;;;:::i;:::-;;;;9422:25:8;;;9478:2;9463:18;;9456:34;;;;9506:18;;;9499:34;9410:2;9395:18;1528:127:2;9220:319:8;1770:135:2;;;;;;;;;;;;;:::i;1175:29::-;;;;;;;;;;-1:-1:-1;1175:29:2;;;;;;;-1:-1:-1;;;;;1175:29:2;;;;;;-1:-1:-1;;;;;3105:32:8;;;3087:51;;3075:2;3060:18;1175:29:2;2925:219:8;655:138:2;;;;;;;;;;-1:-1:-1;655:138:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1660:104::-;914:5;;1718:4;;914:5;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1741:15:2::1;::::0;962:1:::1;1660:104:::0;:::o;2122:214::-;914:5;;;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;2210:21:::1;2249:15:::0;2241:57:::1;;;::::0;-1:-1:-1;;;2241:57:2;;7932:2:8;2241:57:2::1;::::0;::::1;7914:21:8::0;7971:2;7951:18;;;7944:30;8010:31;7990:18;;;7983:59;8059:18;;2241:57:2::1;7730:353:8::0;2241:57:2::1;2309:20;::::0;-1:-1:-1;;;;;2309:11:2;::::1;::::0;:20;::::1;;;::::0;2321:7;;2309:20:::1;::::0;;;2321:7;2309:11;:20;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2185:151;2122:214:::0;:::o;1912:136::-;914:5;;;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;1971:8:::1;::::0;::::1;;:14;;:8:::0;:14:::1;1963:54;;;::::0;-1:-1:-1;;;1963:54:2;;6153:2:8;1963:54:2::1;::::0;::::1;6135:21:8::0;6192:2;6172:18;;;6165:30;6231:29;6211:18;;;6204:57;6278:18;;1963:54:2::1;5951:351:8::0;1963:54:2::1;2027:8;:14:::0;;-1:-1:-1;;2027:14:2::1;::::0;;1912:136::o;3991:446::-;914:5;;4080:4;;4085:13;;914:5;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;1067:8:::1;::::0;::::1;;:17;1058:59;;;;-1:-1:-1::0;;;1058:59:2::1;;;;;;;:::i;:::-;4131:4:::2;4115:15;;:20;4107:58;;;::::0;-1:-1:-1;;;4107:58:2;;7578:2:8;4107:58:2::2;::::0;::::2;7560:21:8::0;7617:2;7597:18;;;7590:30;-1:-1:-1;;;7636:18:8;;;7629:55;7701:18;;4107:58:2::2;7376:349:8::0;4107:58:2::2;4228:10;4241:18;:16;:18::i;:::-;4228:31;;4265:42;4271:9;4282:5;4289:11;;4302:4;4265:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:42::i;:::-;4313:15;:17:::0;;;:15:::2;:17;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4336:29:2;::::2;;::::0;;;:18:::2;:29;::::0;;;;;;:61;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;;4424:4:::2;4403:27:::0;;4391:5;;4424:4;;;4403:27:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3991:446:::0;;;:::o;2389:108::-;914:5;;2447:4;;914:5;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;-1:-1:-1;2469:21:2::1;2389:108:::0;:::o;4614:588::-;1067:8;;4704:4;;4709:13;;1067:8;;:17;1058:59;;;;-1:-1:-1;;;1058:59:2;;;;;;;:::i;:::-;4755:4:::1;4739:15;;:20;4731:58;;;::::0;-1:-1:-1;;;4731:58:2;;7578:2:8;4731:58:2::1;::::0;::::1;7560:21:8::0;7617:2;7597:18;;;7590:30;-1:-1:-1;;;7636:18:8;;;7629:55;7701:18;;4731:58:2::1;7376:349:8::0;4731:58:2::1;4804:9;4818:20;4804:35;4796:73;;;::::0;-1:-1:-1;;;4796:73:2;;5799:2:8;4796:73:2::1;::::0;::::1;5781:21:8::0;5838:2;5818:18;;;5811:30;5877:27;5857:18;;;5850:55;5922:18;;4796:73:2::1;5597:349:8::0;4796:73:2::1;4949:10;4962:18;:16;:18::i;:::-;4949:31;;4986:42;4992:9;5003:5;5010:11;;5023:4;4986:42;;;;;:::i;:::-;5034:38;719:10:1::0;5062:9:2::1;5034:13;:38::i;1528:127::-:0;914:5;;1593:4;;;;;;914:5;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;-1:-1:-1;;1627:7:2::1;::::0;1635:4:::1;::::0;1640:6:::1;::::0;1627:7:::1;::::0;;::::1;::::0;-1:-1:-1;1528:127:2;;:::o;1770:135::-;914:5;;;;;-1:-1:-1;;;;;914:5:2;719:10:1;-1:-1:-1;;;;;898:21:2;;890:62;;;;-1:-1:-1;;;890:62:2;;;;;;;:::i;:::-;1828:8:::1;::::0;::::1;;:15;1820:55;;;::::0;-1:-1:-1;;;1820:55:2;;6509:2:8;1820:55:2::1;::::0;::::1;6491:21:8::0;6548:2;6528:18;;;6521:30;6587:29;6567:18;;;6560:57;6634:18;;1820:55:2::1;6307:351:8::0;1820:55:2::1;1885:8;:13:::0;;-1:-1:-1;;1885:13:2::1;1894:4;1885:13;::::0;;1770:135::o;655:138::-;-1:-1:-1;;;;;742:24:2;;;;;;:18;:24;;;;;;;;;735:51;;;;;;;;;;;;;;;;;711:13;;735:51;;;742:24;735:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:138;;;:::o;2704:1241::-;1067:8;;2769:4;;1067:8;;:17;1058:59;;;;-1:-1:-1;;;1058:59:2;;;;;;;:::i;:::-;2784:10:::1;2797:8;:6;:8::i;:::-;2784:21;;2815:10;2828:4;2833:5;2828:11;;;;;;;:::i;:::-;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;::::0;-1:-1:-1;2920:10:2;;:26;::::1;;;-1:-1:-1::0;2934:7:2::1;::::0;2944:2:::1;2934:7;::::0;;::::1;:12;2920:26;2917:1023;;;2997:7;::::0;2969:36:::1;::::0;::::1;::::0;2997:7:::1;;::::0;2969:36:::1;;;:::i;:::-;;;;;;;;;;;;;2962:4;:43;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3019:7:2::1;:9:::0;;::::1;;::::0;:7:::1;:9;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3050:5;3043:12;;;;1660:104:::0;:::o;2917:1023::-:1;3162:1;3153:5;:10;;:24;;;;;3174:3;3167:4;;:10;3153:24;3150:790;;;3237:4;::::0;3213:29:::1;::::0;-1:-1:-1;;;3213:29:2::1;::::0;::::1;2205:19:8::0;2240:11;;;2233:27;;;;2276:12;;3213:29:2::1;;;;;;;;;;;;;3206:4;:36;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3256:4:2::1;:6:::0;;;:4:::1;:6;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;3283:5:2;;1660:104;-1:-1:-1;;;1660:104:2:o;3150:790::-:1;3418:1;3409:5;:10;;:27;;;;;3433:3;3423:6;;:13;;3409:27;3406:534;;;3504:6;::::0;3477:34:::1;::::0;-1:-1:-1;;;3477:34:2::1;::::0;::::1;2529:22:8::0;2567:11;;;2560:27;;;;2603:12;;3477:34:2::1;;;;;;;;;;;;3470:4;:41;;;;;;;;;;;;:::i;:::-;3465:4;:46;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1::0;3525:6:2::1;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;3406:534::-;3608:3;3601:4;;:10;3598:333;;;-1:-1:-1::0;3690:4:2::1;::::0;3665:30:::1;::::0;-1:-1:-1;;;3665:30:2::1;::::0;::::1;1880:20:8::0;1916:11;;;1909:27;;;;3639:1:2::1;::::0;1952:12:8;;3665:30:2::1;1650:320:8::0;3598:333:2::1;-1:-1:-1::0;3851:7:2::1;::::0;3823:36:::1;::::0;3797:1:::1;::::0;3823:36:::1;::::0;3851:7:::1;::::0;;::::1;::::0;3823:36:::1;;;:::i;835:551:3:-:0;-1:-1:-1;;;;;982:16:3;;974:62;;;;-1:-1:-1;;;974:62:3;;8290:2:8;974:62:3;;;8272:21:8;8329:2;8309:18;;;8302:30;8368:34;8348:18;;;8341:62;-1:-1:-1;;;8419:18:8;;;8412:31;8460:19;;974:62:3;8088:397:8;974:62:3;719:10:1;1089:102:3;719:10:1;1047:16:3;1132:2;1136:21;1154:2;1136:17;:21::i;:::-;1159:25;1177:6;1159:17;:25::i;:::-;1393:214;;;;;;1089:102;1201:9;:13;;;;;;;;;;;-1:-1:-1;;;;;1201:17:3;;;;;;;;;:27;;1222:6;;1201:9;:27;;1222:6;;1201:27;:::i;:::-;;;;-1:-1:-1;;1243:52:3;;;9141:25:8;;;9197:2;9182:18;;9175:34;;;-1:-1:-1;;;;;1243:52:3;;;;1276:1;;1243:52;;;;;;9114:18:8;1243:52:3;;;;;;;1305:74;1336:8;1354:1;1358:2;1362;1366:6;1374:4;1305:30;:74::i;4447:119:2:-;-1:-1:-1;;;;;4525:15:2;;;;;;:8;:15;;;;;:34;;4544:15;;4525;:34;;4544:15;;4525:34;:::i;:::-;;;;-1:-1:-1;;;;4447:119:2:o;2503:196::-;2544:4;2580:17;2665:2;2632:15;2649:10;2615:45;;;;;;;;2783:19:8;;;2840:2;2836:15;-1:-1:-1;;2832:53:8;2827:2;2818:12;;2811:75;2911:2;2902:12;;2626:294;2615:45:2;;;;;;;;;;;;;2605:56;;;;;;2600:62;;:67;;;;:::i;:::-;2580:87;2503:196;-1:-1:-1;;2503:196:2:o;2344:193:3:-;2463:16;;;2477:1;2463:16;;;;;;;;;2410;;2438:22;;2463:16;;;;;;;;;;;;-1:-1:-1;2463:16:3;2438:41;;2500:7;2489:5;2495:1;2489:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;2525:5;2344:193;-1:-1:-1;;2344:193:3:o;1393:214::-;;;;;;;:::o;1613:725::-;-1:-1:-1;;;;;1820:13:3;;1087:20:0;1133:8;1816:516:3;;1855:72;;-1:-1:-1;;;1855:72:3;;-1:-1:-1;;;;;1855:38:3;;;;;:72;;1894:8;;1904:4;;1910:2;;1914:6;;1922:4;;1855:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1855:72:3;;;;;;;;-1:-1:-1;;1855:72:3;;;;;;;;;;;;:::i;:::-;;;1851:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2198:6;2191:14;;-1:-1:-1;;;2191:14:3;;;;;;;;:::i;1851:471::-;;;2245:62;;-1:-1:-1;;;2245:62:3;;4969:2:8;2245:62:3;;;4951:21:8;5008:2;4988:18;;;4981:30;5047:34;5027:18;;;5020:62;-1:-1:-1;;;5098:18:8;;;5091:50;5158:19;;2245:62:3;4767:416:8;1851:471:3;-1:-1:-1;;;;;;1976:55:3;;-1:-1:-1;;;1976:55:3;1972:152;;2055:50;;-1:-1:-1;;;2055:50:3;;5390:2:8;2055:50:3;;;5372:21:8;5429:2;5409:18;;;5402:30;5468:34;5448:18;;;5441:62;-1:-1:-1;;;5519:18:8;;;5512:38;5567:19;;2055:50:3;5188:404:8;1972:152:3;1928:210;1613:725;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:247:8;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:8:o;526:290::-;595:6;648:2;636:9;627:7;623:23;619:32;616:52;;;664:1;661;654:12;616:52;690:16;;-1:-1:-1;;;;;;735:32:8;;725:43;;715:71;;782:1;779;772:12;821:471;862:3;900:5;894:12;927:6;922:3;915:19;952:1;962:162;976:6;973:1;970:13;962:162;;;1038:4;1094:13;;;1090:22;;1084:29;1066:11;;;1062:20;;1055:59;991:12;962:162;;;1142:6;1139:1;1136:13;1133:87;;;1208:1;1201:4;1192:6;1187:3;1183:16;1179:27;1172:38;1133:87;-1:-1:-1;1274:2:8;1253:15;-1:-1:-1;;1249:29:8;1240:39;;;;1281:4;1236:50;;821:471;-1:-1:-1;;821:471:8:o;1297:348::-;-1:-1:-1;;;1523:23:8;;1601:3;1579:16;;;;-1:-1:-1;;;;;;1575:36:8;1571:1;1562:11;;1555:57;1637:1;1628:11;;1297:348::o;3149:560::-;-1:-1:-1;;;;;3446:15:8;;;3428:34;;3498:15;;3493:2;3478:18;;3471:43;3545:2;3530:18;;3523:34;;;3588:2;3573:18;;3566:34;;;3408:3;3631;3616:19;;3609:32;;;3371:4;;3658:45;;3683:19;;3675:6;3658:45;:::i;:::-;3650:53;3149:560;-1:-1:-1;;;;;;;3149:560:8:o;3714:632::-;3885:2;3937:21;;;4007:13;;3910:18;;;4029:22;;;3856:4;;3885:2;4108:15;;;;4082:2;4067:18;;;3856:4;4151:169;4165:6;4162:1;4159:13;4151:169;;;4226:13;;4214:26;;4295:15;;;;4260:12;;;;4187:1;4180:9;4151:169;;;-1:-1:-1;4337:3:8;;3714:632;-1:-1:-1;;;;;;3714:632:8:o;4543:219::-;4692:2;4681:9;4674:21;4655:4;4712:44;4752:2;4741:9;4737:18;4729:6;4712:44;:::i;6663:352::-;6865:2;6847:21;;;6904:2;6884:18;;;6877:30;6943;6938:2;6923:18;;6916:58;7006:2;6991:18;;6663:352::o;7020:351::-;7222:2;7204:21;;;7261:2;7241:18;;;7234:30;7300:29;7295:2;7280:18;;7273:57;7362:2;7347:18;;7020:351::o;8672:290::-;8849:6;8838:9;8831:25;8892:2;8887;8876:9;8872:18;8865:30;8812:4;8912:44;8952:2;8941:9;8937:18;8929:6;8912:44;:::i;:::-;8904:52;8672:290;-1:-1:-1;;;;8672:290:8:o;9544:128::-;9584:3;9615:1;9611:6;9608:1;9605:13;9602:39;;;9621:18;;:::i;:::-;-1:-1:-1;9657:9:8;;9544:128::o;9677:380::-;9756:1;9752:12;;;;9799;;;9820:61;;9874:4;9866:6;9862:17;9852:27;;9820:61;9927:2;9919:6;9916:14;9896:18;9893:38;9890:161;;;9973:10;9968:3;9964:20;9961:1;9954:31;10008:4;10005:1;9998:15;10036:4;10033:1;10026:15;9890:161;;9677:380;;;:::o;10062:346::-;10172:2;10153:13;;-1:-1:-1;;10149:27:8;10137:40;;10207:18;10192:34;;10228:22;;;10189:62;10186:185;;;10293:10;10288:3;10284:20;10281:1;10274:31;10328:4;10325:1;10318:15;10356:4;10353:1;10346:15;10186:185;10387:2;10380:22;-1:-1:-1;;10062:346:8:o;10413:135::-;10452:3;-1:-1:-1;;10473:17:8;;10470:43;;;10493:18;;:::i;:::-;-1:-1:-1;10540:1:8;10529:13;;10413:135::o;10553:175::-;10590:3;10634:4;10627:5;10623:16;10663:4;10654:7;10651:17;10648:43;;;10671:18;;:::i;:::-;10720:1;10707:15;;10553:175;-1:-1:-1;;10553:175:8:o;10733:209::-;10765:1;10791;10781:132;;10835:10;10830:3;10826:20;10823:1;10816:31;10870:4;10867:1;10860:15;10898:4;10895:1;10888:15;10781:132;-1:-1:-1;10927:9:8;;10733:209::o;10947:127::-;11008:10;11003:3;10999:20;10996:1;10989:31;11039:4;11036:1;11029:15;11063:4;11060:1;11053:15;11079:127;11140:10;11135:3;11131:20;11128:1;11121:31;11171:4;11168:1;11161:15;11195:4;11192:1;11185:15;11343:179;11378:3;11420:1;11402:16;11399:23;11396:120;;;11466:1;11463;11460;11445:23;-1:-1:-1;11503:1:8;11497:8;11492:3;11488:18;11343:179;:::o;11527:671::-;11566:3;11608:4;11590:16;11587:26;11584:39;;;11527:671;:::o;11584:39::-;11650:2;11644:9;-1:-1:-1;;11715:16:8;11711:25;;11708:1;11644:9;11687:50;11766:4;11760:11;11790:16;11825:18;11896:2;11889:4;11881:6;11877:17;11874:25;11869:2;11861:6;11858:14;11855:45;11852:58;;;11903:5;;;;;11527:671;:::o;11852:58::-;11940:6;11934:4;11930:17;11919:28;;11976:3;11970:10;12003:2;11995:6;11992:14;11989:27;;;12009:5;;;;;;11527:671;:::o;11989:27::-;12093:2;12074:16;12068:4;12064:27;12060:36;12053:4;12044:6;12039:3;12035:16;12031:27;12028:69;12025:82;;;12100:5;;;;;;11527:671;:::o;12025:82::-;12116:57;12167:4;12158:6;12150;12146:19;12142:30;12136:4;12116:57;:::i;:::-;-1:-1:-1;12189:3:8;;11527:671;-1:-1:-1;;;;;11527:671:8:o;12203:131::-;-1:-1:-1;;;;;12278:31:8;;12268:42;;12258:70;;12324:1;12321;12314:12;12258:70;12203:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "997400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ContractBalance()": "2447",
								"CryptoRandomMint(address)": "infinite",
								"FiatRandomMint(address)": "infinite",
								"IsPaused()": "2355",
								"Owner()": "2436",
								"checkMintedCategoryWise()": "8810",
								"checkTotalMinted()": "4475",
								"openDropsite()": "28733",
								"returnOwner(address)": "infinite",
								"stopDropsite()": "28729",
								"withDraw(address)": "infinite"
							},
							"internal": {
								"depositAmount(address,uint256)": "24404",
								"random()": "infinite",
								"updateConditions()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 203,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 188,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "280"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 237,
									"end": 238,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 241,
									"end": 242,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "160"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "180"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "1A0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "1C0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "1E0"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "200"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "220"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "240"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "260"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1165,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1142,
									"end": 1169,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1241,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1288,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1283,
									"end": 1288,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1332,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1358,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1343,
									"end": 1360,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1343,
									"end": 1360,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1343,
									"end": 1360,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1394,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1394,
									"end": 1407,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 1454,
									"end": 1463,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1454,
									"end": 1463,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1454,
									"end": 1463,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1454,
									"end": 1463,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1454,
									"end": 1463,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1507,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1501,
									"end": 1509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "POP",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 5204,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de0f3645a9d8c95cd46201e87fb3374b960ced5ad763f03906c728bfa502dca464736f6c63430008070033",
									".code": [
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "3D65DF70"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "60DAA851"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "AA90C726"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "B4A99A4E"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "FD6C3B1B"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "390C11C"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "A67D2C7"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "1309A563"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "15460259"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "32B61B4C"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 122,
											"end": 5204,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8624,
											"end": 8626,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4516,
											"end": 4530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4532,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4481,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4351,
											"end": 4538,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9422,
											"end": 9447,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9422,
											"end": 9447,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9422,
											"end": 9447,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9533,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9412,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9395,
											"end": 9413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 9220,
											"end": 9539,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3087,
											"end": 3138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3087,
											"end": 3138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2925,
											"end": 3144,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 655,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1756,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 962,
											"end": 963,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 962,
											"end": 963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2231,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 7973,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7944,
											"end": 7974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8041,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F7221204E6F2042616C616E636520746F207769746864726177000000"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7983,
											"end": 8042,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7730,
											"end": 8083,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2241,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2320,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6260,
											"name": "PUSH",
											"source": 8,
											"value": "44726F707369746520697320616C72656164792052756E6E696E670000000000"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5951,
											"end": 6302,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1963,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2048,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4098,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4085,
											"end": 4098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4135,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4135,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7578,
											"end": 7580,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7376,
											"end": 7725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4107,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4282,
											"end": 4287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4289,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4289,
											"end": 4300,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4265,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4397,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2497,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4614,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4722,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4709,
											"end": 4722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 4739,
											"end": 4754,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4739,
											"end": 4754,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4739,
											"end": 4759,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7578,
											"end": 7580,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7376,
											"end": 7725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4731,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4813,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "PUSH",
											"source": 2,
											"value": "15AF1D78B58C40000"
										},
										{
											"begin": 4804,
											"end": 4839,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5802,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5904,
											"name": "PUSH",
											"source": 8,
											"value": "42616C616E6365206D757374206265203235204D617469637300000000000000"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5850,
											"end": 5905,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5597,
											"end": 5946,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4796,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4962,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5010,
											"end": 5021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4986,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5071,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5034,
											"end": 5072,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1635,
											"end": 1639,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1655,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 890,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1836,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1828,
											"end": 1836,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1836,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1828,
											"end": 1836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1843,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6521,
											"end": 6551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6587,
											"end": 6616,
											"name": "PUSH",
											"source": 8,
											"value": "44726F707369746520697320616C72656164792053746F707065640000000000"
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6617,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6307,
											"end": 6658,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1820,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1905,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 742,
											"end": 766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2704,
											"end": 3945,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2704,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1067,
											"end": 1075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1058,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2797,
											"end": 2805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2805,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2797,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 2930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2930,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2946,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 3940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2917,
											"end": 3940,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2962,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3019,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3055,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2917,
											"end": 3940,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2917,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3153,
											"end": 3158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3177,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3167,
											"end": 3171,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3167,
											"end": 3171,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3177,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3153,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3150,
											"end": 3940,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11DBDB19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3210,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3256,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1764,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3940,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3150,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3419,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3406,
											"end": 3940,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3510,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3504,
											"end": 3510,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53696C7665725F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2578,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2567,
											"end": 2578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2587,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3470,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3465,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3525,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3940,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3406,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3611,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3601,
											"end": 3605,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3601,
											"end": 3605,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3598,
											"end": 3931,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "476F6C645F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1916,
											"end": 1927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3640,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3639,
											"end": 3640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1650,
											"end": 1970,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3931,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3598,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 835,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 998,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 982,
											"end": 998,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8272,
											"end": 8293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8329,
											"end": 8331,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8302,
											"end": 8332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8341,
											"end": 8403,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8460,
											"end": 8479,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8460,
											"end": 8479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8088,
											"end": 8485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 974,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1154,
											"end": 1156,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1089,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1214,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9166,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9182,
											"end": 9200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9182,
											"end": 9200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9209,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1336,
											"end": 1344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1378,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1305,
											"end": 1379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4544,
											"end": 4559,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4544,
											"end": 4559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4544,
											"end": 4559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4544,
											"end": 4559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2503,
											"end": 2699,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2503,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2632,
											"end": 2647,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2659,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2836,
											"end": 2851,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2913,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2626,
											"end": 2920,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2662,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2600,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2410,
											"end": 2426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2530,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2537,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1607,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1816,
											"end": 2332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 1855,
											"end": 1893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1855,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A0"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2191,
											"end": 2205,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 4972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5047,
											"end": 5081,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5091,
											"end": 5141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5177,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5158,
											"end": 5177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4767,
											"end": 5183,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1851,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1976,
											"end": 2031,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5502,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 5448,
											"end": 5466,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5448,
											"end": 5466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5567,
											"end": 5586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5188,
											"end": 5592,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1972,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 2138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 2338,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "183"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "272"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "272"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "274"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "274"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "276"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "276"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "278"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "278"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "201"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "283"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "283"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "284"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "284"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "278"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 261,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 526,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 526,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 595,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 627,
											"end": 634,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 623,
											"end": 646,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 619,
											"end": 651,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 616,
											"end": 668,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 616,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 616,
											"end": 668,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 654,
											"end": 666,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 616,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 616,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 690,
											"end": 706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 706,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 735,
											"end": 767,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 767,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 715,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 715,
											"end": 786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 772,
											"end": 784,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 821,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 821,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 862,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 894,
											"end": 906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 925,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 915,
											"end": 934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 970,
											"end": 983,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1077,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1077,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 962,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1149,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1220,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1133,
											"end": 1220,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1190,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1183,
											"end": 1199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1172,
											"end": 1210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1220,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1133,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1253,
											"end": 1268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1278,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1285,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 821,
											"end": 1292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 821,
											"end": 1292,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1297,
											"end": 1645,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1297,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4469616D6F6E645F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1611,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1562,
											"end": 1573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1562,
											"end": 1573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1628,
											"end": 1639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1645,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3149,
											"end": 3709,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3149,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3461,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3461,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3557,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3616,
											"end": 3635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3703,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3709,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3709,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3714,
											"end": 4346,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3714,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3887,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4020,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3860,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3860,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4172,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4240,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4180,
											"end": 4189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 4346,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3714,
											"end": 4346,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4543,
											"end": 4762,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4543,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4681,
											"end": 4690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 4659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4752,
											"end": 4754,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4735,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4712,
											"end": 4756,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6663,
											"end": 7015,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6663,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6906,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 6884,
											"end": 6902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 6973,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000"
										},
										{
											"begin": 6938,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6923,
											"end": 6941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6923,
											"end": 6941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7008,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6663,
											"end": 7015,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7020,
											"end": 7371,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7020,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7222,
											"end": 7224,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7204,
											"end": 7225,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7300,
											"end": 7329,
											"name": "PUSH",
											"source": 8,
											"value": "44726F7073697465206973206E6F74204F70656E6564205965742E0000000000"
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7273,
											"end": 7330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7020,
											"end": 7371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8672,
											"end": 8962,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 8672,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8838,
											"end": 8847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 8856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8894,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8887,
											"end": 8889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8876,
											"end": 8885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8865,
											"end": 8895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8812,
											"end": 8816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8952,
											"end": 8954,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 8950,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8912,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8912,
											"end": 8956,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8912,
											"end": 8956,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8912,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8904,
											"end": 8956,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8962,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8672,
											"end": 8962,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9544,
											"end": 9672,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 9544,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9611,
											"end": 9617,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9608,
											"end": 9609,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9605,
											"end": 9618,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9602,
											"end": 9641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9602,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9602,
											"end": 9641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9657,
											"end": 9666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9657,
											"end": 9666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9672,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9677,
											"end": 10057,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 9677,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9757,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9752,
											"end": 9764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9764,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9811,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9811,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9820,
											"end": 9881,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9878,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9879,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9881,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9820,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 9929,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9919,
											"end": 9925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9916,
											"end": 9930,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 9931,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 10051,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 9890,
											"end": 10051,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9983,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 9968,
											"end": 9971,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9954,
											"end": 9985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10012,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 10005,
											"end": 10006,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9998,
											"end": 10013,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10033,
											"end": 10034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10041,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 10051,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 9890,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 10051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 10057,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 10057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 10057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 10057,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10062,
											"end": 10408,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 10062,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10172,
											"end": 10174,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10153,
											"end": 10166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10153,
											"end": 10166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10149,
											"end": 10176,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10225,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10189,
											"end": 10251,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10186,
											"end": 10371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10186,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10186,
											"end": 10371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10293,
											"end": 10303,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10288,
											"end": 10291,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10284,
											"end": 10304,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10281,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10274,
											"end": 10305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10328,
											"end": 10332,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 10325,
											"end": 10326,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10318,
											"end": 10333,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10360,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10353,
											"end": 10354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10361,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10186,
											"end": 10371,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10186,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10408,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10413,
											"end": 10548,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 10413,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10452,
											"end": 10455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10473,
											"end": 10490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10490,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10470,
											"end": 10513,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10470,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 10470,
											"end": 10513,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10529,
											"end": 10542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10529,
											"end": 10542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10548,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10627,
											"end": 10632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10639,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10667,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10654,
											"end": 10661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 10668,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 10648,
											"end": 10691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10733,
											"end": 10942,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 10733,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 10766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 10781,
											"end": 10913,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10845,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10830,
											"end": 10833,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10826,
											"end": 10846,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10823,
											"end": 10824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10847,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10870,
											"end": 10874,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10867,
											"end": 10868,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10860,
											"end": 10875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10902,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10895,
											"end": 10896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10888,
											"end": 10903,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 10913,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 10781,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10733,
											"end": 10942,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10947,
											"end": 11074,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 10947,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11008,
											"end": 11018,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10999,
											"end": 11019,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 10997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10989,
											"end": 11020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11039,
											"end": 11043,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 11036,
											"end": 11037,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11029,
											"end": 11044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11063,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11060,
											"end": 11061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11068,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11079,
											"end": 11206,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 11079,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11150,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 11135,
											"end": 11138,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 11131,
											"end": 11151,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11175,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 11168,
											"end": 11169,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11176,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11199,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11192,
											"end": 11193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11185,
											"end": 11200,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11343,
											"end": 11522,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11343,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 11402,
											"end": 11418,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11422,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11516,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 11396,
											"end": 11516,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11466,
											"end": 11467,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11445,
											"end": 11468,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11503,
											"end": 11504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11497,
											"end": 11505,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11492,
											"end": 11495,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 11343,
											"end": 11522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11343,
											"end": 11522,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11608,
											"end": 11612,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11590,
											"end": 11606,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11587,
											"end": 11613,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11584,
											"end": 11623,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11584,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11584,
											"end": 11623,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11584,
											"end": 11623,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11584,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11650,
											"end": 11652,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11644,
											"end": 11653,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11715,
											"end": 11731,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11711,
											"end": 11736,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11711,
											"end": 11736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11709,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11644,
											"end": 11653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11687,
											"end": 11737,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 11766,
											"end": 11770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11760,
											"end": 11771,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11790,
											"end": 11806,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11825,
											"end": 11843,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11896,
											"end": 11898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11889,
											"end": 11893,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11881,
											"end": 11887,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11877,
											"end": 11894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11874,
											"end": 11899,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11867,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11872,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 11910,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11852,
											"end": 11910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11852,
											"end": 11910,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11852,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11940,
											"end": 11946,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 11938,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11919,
											"end": 11947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11919,
											"end": 11947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11976,
											"end": 11979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11970,
											"end": 11980,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12003,
											"end": 12005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11995,
											"end": 12001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11992,
											"end": 12006,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11989,
											"end": 12016,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11989,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 11989,
											"end": 12016,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11989,
											"end": 12016,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 11989,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12074,
											"end": 12090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12068,
											"end": 12072,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12064,
											"end": 12091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12060,
											"end": 12096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12044,
											"end": 12050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12039,
											"end": 12042,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12035,
											"end": 12051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12097,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12025,
											"end": 12107,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12025,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12025,
											"end": 12107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12025,
											"end": 12107,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12025,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12116,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 12167,
											"end": 12171,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12158,
											"end": 12164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12150,
											"end": 12156,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12146,
											"end": 12165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12140,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12116,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 12116,
											"end": 12173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12173,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 12116,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12189,
											"end": 12192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12189,
											"end": 12192,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11527,
											"end": 12198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12203,
											"end": 12334,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 12203,
											"end": 12334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12278,
											"end": 12309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12309,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12268,
											"end": 12310,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12268,
											"end": 12310,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 12258,
											"end": 12328,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 12322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12314,
											"end": 12326,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12328,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 12258,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12334,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ContractBalance()": "3b668059",
							"CryptoRandomMint(address)": "3d65df70",
							"FiatRandomMint(address)": "32b61b4c",
							"IsPaused()": "1309a563",
							"Owner()": "b4a99a4e",
							"checkMintedCategoryWise()": "60daa851",
							"checkTotalMinted()": "0390c11c",
							"openDropsite()": "15460259",
							"returnOwner(address)": "fd6c3b1b",
							"stopDropsite()": "aa90c726",
							"withDraw(address)": "0a67d2c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"CryptoRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"FiatRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMintedCategoryWise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkTotalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"returnOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dropsite.sol\":\"Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"Dropsite.sol\":{\"keccak256\":\"0xe7ccc154219e144f24d4db0527337e3339d891cb33ec129631f5734f821b8ed9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766767505887f77e542d00dabf77d227ff399f97f8a74ca9801f9d83653d95b3\",\"dweb:/ipfs/QmexEqT2s3TVy1eEow8jdaPLdQQdfk21PiKi2Him5EbGHz\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x28c510daf568ac9c7d497374b30484b0745aec24e11616ede9a3952b9464c9ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e7bef451bca8bb57e09907ada3e4aebca220958275913e0d368aa138970de1b\",\"dweb:/ipfs/QmXUJfyWjaYXKAuSBwx7G3JJpq8HB8hhakYZWhsgQLi6ix\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0x0c49d24959555e256f391b1b813a5f1b522d2a92bf4cffa08ff837f23d357264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b5063b0a495f2f3a189ead3ca4461989b45d4e97c450c5036f188bda2c9f35\",\"dweb:/ipfs/QmUf7NW8PudnRWS84YW79gMZN5kvCwrHpYy1ETX1VRAmWm\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155_Dropsite.sol": {
				"ERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155_Dropsite.sol\":490:2539  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155_Dropsite.sol\":490:2539  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c5dc9442522a8b369753f451ea107e08af140d4e3860c4b1fad64a1175a764ab64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c5dc9442522a8b369753f451ea107e08af140d4e3860c4b1fad64a1175a764ab64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xDC SWAP5 TIMESTAMP MSTORE 0x2A DUP12 CALLDATASIZE SWAP8 MSTORE8 DELEGATECALL MLOAD 0xEA LT PUSH31 0x8AF140D4E3860C4B1FAD64A1175A764AB64736F6C63430008070033000000 ",
							"sourceMap": "490:2049:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c5dc9442522a8b369753f451ea107e08af140d4e3860c4b1fad64a1175a764ab64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xDC SWAP5 TIMESTAMP MSTORE 0x2A DUP12 CALLDATASIZE SWAP8 MSTORE8 DELEGATECALL MLOAD 0xEA LT PUSH31 0x8AF140D4E3860C4B1FAD64A1175A764AB64736F6C63430008070033000000 ",
							"sourceMap": "490:2049:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2539,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5dc9442522a8b369753f451ea107e08af140d4e3860c4b1fad64a1175a764ab64736f6c63430008070033",
									".code": [
										{
											"begin": 490,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2539,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155_Dropsite.sol\":\"ERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x28c510daf568ac9c7d497374b30484b0745aec24e11616ede9a3952b9464c9ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e7bef451bca8bb57e09907ada3e4aebca220958275913e0d368aa138970de1b\",\"dweb:/ipfs/QmXUJfyWjaYXKAuSBwx7G3JJpq8HB8hhakYZWhsgQLi6ix\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0x0c49d24959555e256f391b1b813a5f1b522d2a92bf4cffa08ff837f23d357264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b5063b0a495f2f3a189ead3ca4461989b45d4e97c450c5036f188bda2c9f35\",\"dweb:/ipfs/QmUf7NW8PudnRWS84YW79gMZN5kvCwrHpYy1ETX1VRAmWm\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165_Dropsite.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165_Dropsite.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver_Dropsite.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver_Dropsite.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0x0c49d24959555e256f391b1b813a5f1b522d2a92bf4cffa08ff837f23d357264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b5063b0a495f2f3a189ead3ca4461989b45d4e97c450c5036f188bda2c9f35\",\"dweb:/ipfs/QmUf7NW8PudnRWS84YW79gMZN5kvCwrHpYy1ETX1VRAmWm\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155_Dropsite.sol": {
				"IERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155_Dropsite.sol\":\"IERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165_Dropsite.sol": {
				"IERC165_Dropsite": {
					"abi": [],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165_Dropsite.sol\":\"IERC165_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"Dropsite": [
							845
						],
						"ERC1155_Dropsite": [
							1056
						],
						"ERC165": [
							1079
						],
						"IERC1155Receiver": [
							1120
						],
						"IERC1155_Dropsite": [
							1140
						],
						"IERC165_Dropsite": [
							1144
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "54:33:2"
						},
						{
							"absolutePath": "ERC1155_Dropsite.sol",
							"file": "./ERC1155_Dropsite.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 1057,
							"src": "88:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 323,
										"name": "ERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1056,
										"src": "143:16:2"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "143:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845,
								1056,
								1140,
								1144,
								318
							],
							"name": "Dropsite",
							"nameLocation": "131:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "195:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "188:15:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 325,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "188:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"hexValue": "",
										"id": 326,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "201:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 352,
									"mutability": "mutable",
									"name": "nums",
									"nameLocation": "227:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "209:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint8_$20_storage",
										"typeString": "uint8[20]"
									},
									"typeName": {
										"baseType": {
											"id": 328,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "209:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"id": 330,
										"length": {
											"hexValue": "3230",
											"id": 329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "215:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20_by_1",
												"typeString": "int_const 20"
											},
											"value": "20"
										},
										"nodeType": "ArrayTypeName",
										"src": "209:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_storage_ptr",
											"typeString": "uint8[20]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 331,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "235:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 332,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "237:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 333,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "239:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "32",
												"id": 334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "241:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "243:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "245:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 337,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "247:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 338,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "249:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "251:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 340,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "253:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "255:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "257:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "259:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 344,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "261:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 345,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "263:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 346,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "265:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 347,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "267:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "269:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "271:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 350,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "273:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											}
										],
										"id": 351,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "234:41:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
											"typeString": "uint8[20] memory"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 354,
									"mutability": "mutable",
									"name": "TotalNFTsMinted",
									"nameLocation": "326:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "321:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 353,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "321:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 356,
									"mutability": "mutable",
									"name": "numOfCopies",
									"nameLocation": "369:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "364:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 355,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "364:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 358,
									"mutability": "mutable",
									"name": "Diamond",
									"nameLocation": "451:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "445:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 357,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "445:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "Gold",
									"nameLocation": "481:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "476:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "476:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 362,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "496:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "491:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 361,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Dropsite.nft_Owner",
									"id": 366,
									"members": [
										{
											"constant": false,
											"id": 365,
											"mutability": "mutable",
											"name": "owned_Dropsite_NFTs",
											"nameLocation": "570:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 366,
											"src": "563:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 363,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "563:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ArrayTypeName",
												"src": "563:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "nft_Owner",
									"nameLocation": "544:9:2",
									"nodeType": "StructDefinition",
									"scope": 845,
									"src": "537:59:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 371,
									"mutability": "mutable",
									"name": "dropsite_NFT_Owner",
									"nameLocation": "631:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "601:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$366_storage_$",
										"typeString": "mapping(address => struct Dropsite.nft_Owner)"
									},
									"typeName": {
										"id": 370,
										"keyType": {
											"id": 367,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "610:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "601:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$366_storage_$",
											"typeString": "mapping(address => struct Dropsite.nft_Owner)"
										},
										"valueType": {
											"id": 369,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 368,
												"name": "nft_Owner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 366,
												"src": "619:9:2"
											},
											"referencedDeclaration": 366,
											"src": "619:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_nft_Owner_$366_storage_ptr",
												"typeString": "struct Dropsite.nft_Owner"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "725:68:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 379,
															"name": "dropsite_NFT_Owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "742:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$366_storage_$",
																"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
															}
														},
														"id": 381,
														"indexExpression": {
															"id": 380,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "761:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "742:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_nft_Owner_$366_storage",
															"typeString": "struct Dropsite.nft_Owner storage ref"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owned_Dropsite_NFTs",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 365,
													"src": "742:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 378,
												"id": 383,
												"nodeType": "Return",
												"src": "735:51:2"
											}
										]
									},
									"functionSelector": "fd6c3b1b",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnOwner",
									"nameLocation": "664:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "684:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "676:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:14:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "711:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 375,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "711:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 376,
													"nodeType": "ArrayTypeName",
													"src": "711:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:15:2"
									},
									"scope": 845,
									"src": "655:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "849:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "823:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 388,
										"keyType": {
											"id": 386,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "832:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "823:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 387,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "843:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "880:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 392,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "898:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "898:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 394,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "914:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "898:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "921:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															},
															"value": "Only NFT-ES Owner can Access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "890:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "890:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "890:62:2"
											},
											{
												"id": 399,
												"nodeType": "PlaceholderStatement",
												"src": "962:1:2"
											}
										]
									},
									"id": 401,
									"name": "OnlyOwner",
									"nameLocation": "870:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:0:2"
									},
									"src": "861:109:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1048:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "1067:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1079:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1067:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1086:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															},
															"value": "Dropsite is not Opened Yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1058:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1058:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1058:59:2"
											},
											{
												"id": 410,
												"nodeType": "PlaceholderStatement",
												"src": "1127:1:2"
											}
										]
									},
									"id": 412,
									"name": "contractIsNotPaused",
									"nameLocation": "1027:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:2"
									},
									"src": "1018:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1309a563",
									"id": 415,
									"mutability": "mutable",
									"name": "IsPaused",
									"nameLocation": "1154:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1142:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 413,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1142:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1165:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 417,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "1199:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1175:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 416,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1175:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1225:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1210:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 418,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1210:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1273:243:2",
										"statements": [
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 424,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "1283:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 425,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "1291:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1283:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1283:12:2"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1305:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 431,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1321:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1321:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1313:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 429,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1313:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1313:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1305:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1305:27:2"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1343:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1343:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "1343:17:2"
											},
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "numOfCopies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1394:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1394:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "1394:13:2"
											},
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 444,
														"name": "Diamond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "1454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1462:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1454:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "1454:9:2"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "Gold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1485:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1490:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1485:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "1485:6:2"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "Silver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1501:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1508:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1501:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1501:8:2"
											}
										]
									},
									"id": 457,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1268:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1254:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1254:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:20:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:0:2"
									},
									"scope": 845,
									"src": "1241:275:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "1608:47:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 468,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "1627:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 469,
															"name": "Gold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 470,
															"name": "Silver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1640:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 471,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1626:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint8,uint256,uint256)"
													}
												},
												"functionReturnParameters": 467,
												"id": 472,
												"nodeType": "Return",
												"src": "1619:28:2"
											}
										]
									},
									"functionSelector": "60daa851",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 459,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "1575:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1575:9:2"
										}
									],
									"name": "checkMintedCategoryWise",
									"nameLocation": "1537:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1598:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1598:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1603:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1603:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:16:2"
									},
									"scope": 845,
									"src": "1528:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "1723:41:2",
										"statements": [
											{
												"expression": {
													"id": 481,
													"name": "TotalNFTsMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 354,
													"src": "1741:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "1734:22:2"
											}
										]
									},
									"functionSelector": "0390c11c",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 477,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 476,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "1700:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1700:9:2"
										}
									],
									"name": "checkTotalMinted",
									"nameLocation": "1669:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1685:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1718:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1718:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:6:2"
									},
									"scope": 845,
									"src": "1660:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "1810:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "1828:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1838:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1828:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1845:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															},
															"value": "Dropsite is already Stopped"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "1820:55:2"
											},
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "1885:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1894:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1885:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1885:13:2"
											}
										]
									},
									"functionSelector": "aa90c726",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 486,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "1801:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1801:9:2"
										}
									],
									"name": "stopDropsite",
									"nameLocation": "1779:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:2:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1810:0:2"
									},
									"scope": 845,
									"src": "1770:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1953:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "1971:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1981:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1971:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1987:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															},
															"value": "Dropsite is already Running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "1963:54:2"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 513,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2027:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2027:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "2027:14:2"
											}
										]
									},
									"functionSelector": "15460259",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 503,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "1943:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1943:9:2"
										}
									],
									"name": "openDropsite",
									"nameLocation": "1921:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:2"
									},
									"scope": 845,
									"src": "1912:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "2185:151:2",
										"statements": [
											{
												"assignments": [
													526
												],
												"declarations": [
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "Balance",
														"nameLocation": "2200:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "2195:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 525,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2195:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 529,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2218:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$845",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$845",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 527,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2210:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2210:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2210:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2195:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "Balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2249:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2259:5:2",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2249:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2266:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															},
															"value": "Error! No Balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2241:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2241:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "2309:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2309:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "2309:20:2"
											}
										]
									},
									"functionSelector": "0a67d2c7",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "2175:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2175:9:2"
										}
									],
									"name": "withDraw",
									"nameLocation": "2131:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2156:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2140:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:20:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:0:2"
									},
									"scope": 845,
									"src": "2122:214:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "2452:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 556,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2477:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$845",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$845",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2469:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 554,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2469:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2469:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2469:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 553,
												"id": 559,
												"nodeType": "Return",
												"src": "2462:28:2"
											}
										]
									},
									"functionSelector": "3b668059",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 550,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 549,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "2428:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2428:9:2"
										}
									],
									"name": "ContractBalance",
									"nameLocation": "2398:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2413:2:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2447:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2447:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:6:2"
									},
									"scope": 845,
									"src": "2389:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "2550:149:2",
										"statements": [
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "randomnumber",
														"nameLocation": "2585:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 585,
														"src": "2580:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 566,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2580:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 573,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2632:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2632:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 575,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2649:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2649:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 571,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2615:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2615:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2615:45:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 570,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2605:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2605:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2600:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 568,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2600:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2600:62:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3230",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2665:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "2600:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2580:87:2"
											},
											{
												"expression": {
													"id": 583,
													"name": "randomnumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 567,
													"src": "2680:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 565,
												"id": 584,
												"nodeType": "Return",
												"src": "2673:19:2"
											}
										]
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "2512:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "2544:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2544:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:6:2"
									},
									"scope": 845,
									"src": "2503:196:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2775:1170:2",
										"statements": [
											{
												"assignments": [
													594
												],
												"declarations": [
													{
														"constant": false,
														"id": 594,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "2789:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2784:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 593,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2784:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 595,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "2797:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2797:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2784:21:2"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "2820:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2815:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2815:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"baseExpression": {
														"id": 600,
														"name": "nums",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2828:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$20_storage",
															"typeString": "uint8[20] storage ref"
														}
													},
													"id": 602,
													"indexExpression": {
														"id": 601,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2833:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2828:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2815:24:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 604,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2920:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 607,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2934:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3530",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2944:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "2934:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2920:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 625,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "3153:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3162:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3153:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 628,
																"name": "Gold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "3167:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "313030",
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3174:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3167:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3153:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 646,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "3409:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3418:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "3409:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 649,
																	"name": "Silver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3423:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "383530",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3433:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_850_by_1",
																		"typeString": "int_const 850"
																	},
																	"value": "850"
																},
																"src": "3423:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3409:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 709,
															"nodeType": "Block",
															"src": "3584:356:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 669,
																			"name": "Gold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "3601:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3608:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "3601:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 707,
																		"nodeType": "Block",
																		"src": "3771:160:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 692,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 690,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 599,
																						"src": "3789:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3797:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "3789:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 693,
																				"nodeType": "ExpressionStatement",
																				"src": "3789:9:2"
																			},
																			{
																				"expression": {
																					"id": 700,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 694,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 327,
																						"src": "3816:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_storage",
																							"typeString": "bytes storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"hexValue": "4469616d6f6e645f",
																								"id": 697,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3840:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																									"typeString": "literal_string \"Diamond_\""
																								},
																								"value": "Diamond_"
																							},
																							{
																								"id": 698,
																								"name": "Diamond",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 358,
																								"src": "3851:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																									"typeString": "literal_string \"Diamond_\""
																								},
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"expression": {
																								"id": 695,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "3823:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 696,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "3823:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 699,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3823:36:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"src": "3816:43:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage",
																						"typeString": "bytes storage ref"
																					}
																				},
																				"id": 701,
																				"nodeType": "ExpressionStatement",
																				"src": "3816:43:2"
																			},
																			{
																				"expression": {
																					"id": 703,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3877:9:2",
																					"subExpression": {
																						"id": 702,
																						"name": "Diamond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 358,
																						"src": "3877:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 704,
																				"nodeType": "ExpressionStatement",
																				"src": "3877:9:2"
																			},
																			{
																				"expression": {
																					"id": 705,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 599,
																					"src": "3911:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 592,
																				"id": 706,
																				"nodeType": "Return",
																				"src": "3904:12:2"
																			}
																		]
																	},
																	"id": 708,
																	"nodeType": "IfStatement",
																	"src": "3598:333:2",
																	"trueBody": {
																		"id": 689,
																		"nodeType": "Block",
																		"src": "3613:152:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 672,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 599,
																						"src": "3631:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 673,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3639:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3631:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 675,
																				"nodeType": "ExpressionStatement",
																				"src": "3631:9:2"
																			},
																			{
																				"expression": {
																					"id": 682,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 676,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 327,
																						"src": "3658:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_storage",
																							"typeString": "bytes storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"hexValue": "476f6c645f",
																								"id": 679,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3682:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																									"typeString": "literal_string \"Gold_\""
																								},
																								"value": "Gold_"
																							},
																							{
																								"id": 680,
																								"name": "Gold",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 360,
																								"src": "3690:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																									"typeString": "literal_string \"Gold_\""
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 677,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "3665:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 678,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "3665:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 681,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3665:30:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"src": "3658:37:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage",
																						"typeString": "bytes storage ref"
																					}
																				},
																				"id": 683,
																				"nodeType": "ExpressionStatement",
																				"src": "3658:37:2"
																			},
																			{
																				"expression": {
																					"id": 685,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3713:6:2",
																					"subExpression": {
																						"id": 684,
																						"name": "Gold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "3713:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 686,
																				"nodeType": "ExpressionStatement",
																				"src": "3713:6:2"
																			},
																			{
																				"expression": {
																					"id": 687,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 599,
																					"src": "3745:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 592,
																				"id": 688,
																				"nodeType": "Return",
																				"src": "3738:12:2"
																			}
																		]
																	}
																}
															]
														},
														"id": 710,
														"nodeType": "IfStatement",
														"src": "3406:534:2",
														"trueBody": {
															"id": 668,
															"nodeType": "Block",
															"src": "3438:132:2",
															"statements": [
																{
																	"expression": {
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 653,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "3465:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage",
																				"typeString": "bytes storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 654,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "3470:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage",
																					"typeString": "bytes storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "53696c7665725f",
																						"id": 657,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3494:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																							"typeString": "literal_string \"Silver_\""
																						},
																						"value": "Silver_"
																					},
																					{
																						"id": 658,
																						"name": "Silver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 362,
																						"src": "3504:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																							"typeString": "literal_string \"Silver_\""
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 655,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3477:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3477:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3477:34:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "3470:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage",
																				"typeString": "bytes storage ref"
																			}
																		},
																		"src": "3465:46:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage",
																			"typeString": "bytes storage ref"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "3465:46:2"
																},
																{
																	"expression": {
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "3525:8:2",
																		"subExpression": {
																			"id": 663,
																			"name": "Silver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 362,
																			"src": "3525:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 665,
																	"nodeType": "ExpressionStatement",
																	"src": "3525:8:2"
																},
																{
																	"expression": {
																		"id": 666,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 592,
																	"id": 667,
																	"nodeType": "Return",
																	"src": "3547:12:2"
																}
															]
														}
													},
													"id": 711,
													"nodeType": "IfStatement",
													"src": "3150:790:2",
													"trueBody": {
														"id": 645,
														"nodeType": "Block",
														"src": "3179:221:2",
														"statements": [
															{
																"expression": {
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 632,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "3206:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage",
																			"typeString": "bytes storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "476f6c64",
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3230:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff",
																					"typeString": "literal_string \"Gold\""
																				},
																				"value": "Gold"
																			},
																			{
																				"id": 636,
																				"name": "Gold",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "3237:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff",
																					"typeString": "literal_string \"Gold\""
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 633,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3213:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3213:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3213:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"src": "3206:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																},
																"id": 639,
																"nodeType": "ExpressionStatement",
																"src": "3206:36:2"
															},
															{
																"expression": {
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3256:6:2",
																	"subExpression": {
																		"id": 640,
																		"name": "Gold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "3256:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 642,
																"nodeType": "ExpressionStatement",
																"src": "3256:6:2"
															},
															{
																"expression": {
																	"id": 643,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "3283:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 592,
																"id": 644,
																"nodeType": "Return",
																"src": "3276:12:2"
															}
														]
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "2917:1023:2",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "2948:196:2",
													"statements": [
														{
															"expression": {
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 611,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2962:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "4469616d6f6e645f",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2986:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																				"typeString": "literal_string \"Diamond_\""
																			},
																			"value": "Diamond_"
																		},
																		{
																			"id": 615,
																			"name": "Diamond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 358,
																			"src": "2997:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																				"typeString": "literal_string \"Diamond_\""
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"id": 612,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2969:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "2969:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2969:36:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"src": "2962:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"id": 618,
															"nodeType": "ExpressionStatement",
															"src": "2962:43:2"
														},
														{
															"expression": {
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3019:9:2",
																"subExpression": {
																	"id": 619,
																	"name": "Diamond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "3019:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "3019:9:2"
														},
														{
															"expression": {
																"id": 622,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "3050:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 592,
															"id": 623,
															"nodeType": "Return",
															"src": "3043:12:2"
														}
													]
												}
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 589,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 588,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 412,
												"src": "2741:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2741:19:2"
										}
									],
									"name": "updateConditions",
									"nameLocation": "2713:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:2"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2769:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:2"
									},
									"scope": 845,
									"src": "2704:1241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "4100:337:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "4115:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4131:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "4115:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4137:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4107:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "4107:58:2"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "4233:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "4228:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "updateConditions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "4241:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4241:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4228:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "user_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4271:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4282:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 742,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "4289:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 743,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"id": 739,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4265:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4265:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "4265:42:2"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4313:17:2",
													"subExpression": {
														"id": 746,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "4313:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "4313:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4391:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 749,
																	"name": "dropsite_NFT_Owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "4336:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$366_storage_$",
																		"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
																	}
																},
																"id": 751,
																"indexExpression": {
																	"id": 750,
																	"name": "user_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "4355:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4336:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_nft_Owner_$366_storage",
																	"typeString": "struct Dropsite.nft_Owner storage ref"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "owned_Dropsite_NFTs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 365,
															"src": "4336:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4336:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4336:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "4336:61:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 757,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4411:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 760,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "4424:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4417:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 758,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "4417:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4417:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string storage pointer"
															}
														}
													],
													"id": 762,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4410:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_ptr_$",
														"typeString": "tuple(uint256,string storage pointer)"
													}
												},
												"functionReturnParameters": 726,
												"id": 763,
												"nodeType": "Return",
												"src": "4403:27:2"
											}
										]
									},
									"functionSelector": "32b61b4c",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 718,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "4034:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4034:9:2"
										},
										{
											"id": 721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 720,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 412,
												"src": "4044:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4044:19:2"
										}
									],
									"name": "FiatRandomMint",
									"nameLocation": "4000:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "4023:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4015:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:19:2"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4080:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4080:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4085:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4085:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:20:2"
									},
									"scope": 845,
									"src": "3991:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "4515:51:2",
										"statements": [
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 772,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "4525:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 774,
														"indexExpression": {
															"id": 773,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4534:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4525:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 775,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "4544:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4525:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "4525:34:2"
											}
										]
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAmount",
									"nameLocation": "4456:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "4478:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "4470:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "4489:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "4484:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4484:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:36:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4515:0:2"
									},
									"scope": 845,
									"src": "4447:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "4724:478:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "4739:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4755:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "4739:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4761:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "4731:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 798,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4804:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4804:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"hexValue": "3235303030303030303030303030303030303030",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4818:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_25000000000000000000_by_1",
																			"typeString": "int_const 25000000000000000000"
																		},
																		"value": "25000000000000000000"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4817:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_25000000000000000000_by_1",
																	"typeString": "int_const 25000000000000000000"
																}
															},
															"src": "4804:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616c616e6365206d757374206265203235204d6174696373",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583",
																"typeString": "literal_string \"Balance must be 25 Matics\""
															},
															"value": "Balance must be 25 Matics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583",
																"typeString": "literal_string \"Balance must be 25 Matics\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4796:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4796:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "4796:73:2"
											},
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "4954:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "4949:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 806,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4949:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 808,
														"name": "updateConditions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "4962:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4962:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4949:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 812,
															"name": "user_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "4992:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5003:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 814,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "5010:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5023:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"id": 811,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4986:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "4986:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 819,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "5048:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5048:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 821,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5062:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5062:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "depositAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5034:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5034:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "5034:38:2"
											},
											{
												"expression": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5078:17:2",
													"subExpression": {
														"id": 825,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "5078:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "5078:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5156:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 828,
																	"name": "dropsite_NFT_Owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "5101:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$366_storage_$",
																		"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
																	}
																},
																"id": 830,
																"indexExpression": {
																	"id": 829,
																	"name": "user_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "5120:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5101:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_nft_Owner_$366_storage",
																	"typeString": "struct Dropsite.nft_Owner storage ref"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "owned_Dropsite_NFTs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 365,
															"src": "5101:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5101:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5101:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "5101:61:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 836,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5176:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 839,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "5189:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5182:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 837,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "5182:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5182:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string storage pointer"
															}
														}
													],
													"id": 841,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5175:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_ptr_$",
														"typeString": "tuple(uint256,string storage pointer)"
													}
												},
												"functionReturnParameters": 789,
												"id": 842,
												"nodeType": "Return",
												"src": "5168:27:2"
											}
										]
									},
									"functionSelector": "3d65df70",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 784,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 783,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 412,
												"src": "4660:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4660:19:2"
										}
									],
									"name": "CryptoRandomMint",
									"nameLocation": "4623:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "4648:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "4640:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:2"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "4704:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4704:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "4709:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4709:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:20:2"
									},
									"scope": 845,
									"src": "4614:588:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 846,
							"src": "122:5082:2",
							"usedErrors": []
						}
					],
					"src": "30:5174:2"
				},
				"id": 2
			},
			"ERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC1155_Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155_Dropsite": [
							1056
						],
						"ERC165": [
							1079
						],
						"IERC1155Receiver": [
							1120
						],
						"IERC1155_Dropsite": [
							1140
						],
						"IERC165_Dropsite": [
							1144
						]
					},
					"id": 1057,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155_Dropsite.sol",
							"file": "./IERC1155_Dropsite.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 1141,
							"src": "119:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver_Dropsite.sol",
							"file": "./IERC1155Receiver_Dropsite.sol",
							"id": 849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 1121,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 297,
							"src": "195:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 319,
							"src": "219:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165_Dropsite.sol",
							"file": "./ERC165_Dropsite.sol",
							"id": 852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 1080,
							"src": "243:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 854,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "519:7:3"
									},
									"id": 855,
									"nodeType": "InheritanceSpecifier",
									"src": "519:7:3"
								},
								{
									"baseName": {
										"id": 856,
										"name": "IERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1140,
										"src": "528:17:3"
									},
									"id": 857,
									"nodeType": "InheritanceSpecifier",
									"src": "528:17:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 853,
								"nodeType": "StructuredDocumentation",
								"src": "275:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1056,
							"linearizedBaseContracts": [
								1056,
								1140,
								1144,
								318
							],
							"name": "ERC1155_Dropsite",
							"nameLocation": "499:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 860,
									"libraryName": {
										"id": 858,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "559:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "553:26:3",
									"typeName": {
										"id": 859,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "691:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1056,
									"src": "634:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 865,
										"keyType": {
											"id": 861,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "642:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "634:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 864,
											"keyType": {
												"id": 862,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "661:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "653:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "810:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1056,
									"src": "757:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 871,
										"keyType": {
											"id": 867,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "757:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 870,
											"keyType": {
												"id": 868,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "776:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 869,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "795:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "964:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "982:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "996:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "988:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "988:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "988:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "982:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1000:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "974:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "974:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "974:62:3"
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "1055:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "1047:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 893,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1047:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 895,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1066:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1047:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1110:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1128:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1120:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 900,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1120:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1120:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "1132:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 906,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "1154:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 905,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "1136:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1136:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 909,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "1177:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 908,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "1159:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1159:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1186:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 898,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1089:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "1089:102:3"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 914,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "1201:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 917,
															"indexExpression": {
																"id": 915,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "1211:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1201:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 918,
														"indexExpression": {
															"id": 916,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "1215:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1201:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 919,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1222:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1201:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1201:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 923,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1258:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1276:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1268:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 924,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1268:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1268:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "1280:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1284:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 930,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "1288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "1243:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "EmitStatement",
												"src": "1238:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1336:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1346:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1346:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1346:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "1358:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1362:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "1366:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 942,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1374:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "1305:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "1305:74:3"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "844:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "867:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "859:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "887:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "879:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "907:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "936:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "923:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "923:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:97:3"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:0:3"
									},
									"scope": 1056,
									"src": "835:551:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "1605:2:3",
										"statements": []
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1402:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1440:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1432:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1466:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1458:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1488:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1480:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1517:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1500:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 953,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1500:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 954,
													"nodeType": "ArrayTypeName",
													"src": "1500:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1547:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1530:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 956,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1530:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ArrayTypeName",
													"src": "1530:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1564:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1564:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:165:3"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:0:3"
									},
									"scope": 1056,
									"src": "1393:214:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "1806:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 979,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "1820:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1820:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"nodeType": "IfStatement",
												"src": "1816:516:3",
												"trueBody": {
													"id": 1024,
													"nodeType": "Block",
													"src": "1837:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1006,
																		"nodeType": "Block",
																		"src": "1954:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 999,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 995,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 993,
																						"src": "1976:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 996,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1120,
																								"src": "1988:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1120_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 997,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1101,
																							"src": "1988:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 998,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1988:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1976:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1005,
																				"nodeType": "IfStatement",
																				"src": "1972:152:3",
																				"trueBody": {
																					"id": 1004,
																					"nodeType": "Block",
																					"src": "2033:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1001,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2062:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1000,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "2055:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1002,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2055:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1003,
																							"nodeType": "ExpressionStatement",
																							"src": "2055:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1007,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 994,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 993,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "1944:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1007,
																				"src": "1937:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 992,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1937:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1936:17:3"
																	},
																	"src": "1928:210:3"
																},
																{
																	"block": {
																		"id": 1015,
																		"nodeType": "Block",
																		"src": "2173:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1012,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1009,
																							"src": "2198:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1011,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2191:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1013,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2191:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1014,
																				"nodeType": "ExpressionStatement",
																				"src": "2191:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1016,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1010,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1009,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "2165:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1016,
																				"src": "2151:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1008,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2151:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2150:22:3"
																	},
																	"src": "2139:81:3"
																},
																{
																	"block": {
																		"id": 1021,
																		"nodeType": "Block",
																		"src": "2227:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1018,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2252:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1017,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2245:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2245:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1020,
																				"nodeType": "ExpressionStatement",
																				"src": "2245:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1022,
																	"nodeType": "TryCatchClause",
																	"src": "2221:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 986,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "1894:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 987,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "1904:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 988,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "1910:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 989,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "1914:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 990,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "1922:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 983,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "1872:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 982,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "1855:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1120_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1855:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1120",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1101,
																	"src": "1855:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1855:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1023,
															"nodeType": "TryStatement",
															"src": "1851:471:3"
														}
													]
												}
											}
										]
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "1622:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1670:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1662:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1696:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1688:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1738:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1730:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1758:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1750:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1774:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1774:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1652:145:3"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:0:3"
									},
									"scope": 1056,
									"src": "1613:725:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "2428:109:3",
										"statements": [
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "2455:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "2438:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1037,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2438:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1038,
															"nodeType": "ArrayTypeName",
															"src": "2438:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2477:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2463:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1040,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2467:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1041,
															"nodeType": "ArrayTypeName",
															"src": "2467:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2438:41:3"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1046,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "2489:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1048,
														"indexExpression": {
															"hexValue": "30",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2495:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2489:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "2500:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2489:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2489:18:3"
											},
											{
												"expression": {
													"id": 1052,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1039,
													"src": "2525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1053,
												"nodeType": "Return",
												"src": "2518:12:3"
											}
										]
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "2353:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "2379:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "2371:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:17:3"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "2410:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1031,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2410:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1032,
													"nodeType": "ArrayTypeName",
													"src": "2410:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:18:3"
									},
									"scope": 1056,
									"src": "2344:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1057,
							"src": "490:2049:3",
							"usedErrors": []
						}
					],
					"src": "94:2445:3"
				},
				"id": 3
			},
			"ERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC165_Dropsite.sol",
					"exportedSymbols": {
						"ERC165": [
							1079
						],
						"IERC165_Dropsite": [
							1144
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1058,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1145,
							"src": "124:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1061,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1144,
										"src": "763:16:4"
									},
									"id": 1062,
									"nodeType": "InheritanceSpecifier",
									"src": "763:16:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1060,
								"nodeType": "StructuredDocumentation",
								"src": "158:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079,
								1144
							],
							"name": "ERC165",
							"nameLocation": "753:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "930:73:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1070,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "947:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1072,
																	"name": "IERC165_Dropsite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1144_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1144_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																],
																"id": 1071,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "962:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_Dropsite_$1144",
																"typeString": "type(contract IERC165_Dropsite)"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "962:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "947:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1076,
												"nodeType": "Return",
												"src": "940:56:4"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "786:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "856:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "881:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "874:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:20:4"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "924:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:4"
									},
									"scope": 1079,
									"src": "847:156:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1080,
							"src": "735:270:4",
							"usedErrors": []
						}
					],
					"src": "99:906:4"
				},
				"id": 4
			},
			"IERC1155Receiver_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1120
						],
						"IERC165_Dropsite": [
							1144
						]
					},
					"id": 1121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1145,
							"src": "127:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1084,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1144,
										"src": "231:16:5"
									},
									"id": 1085,
									"nodeType": "InheritanceSpecifier",
									"src": "231:16:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "161:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1120,
							"linearizedBaseContracts": [
								1120,
								1144
							],
							"name": "IERC1155Receiver",
							"nameLocation": "211:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "254:826:5",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1094:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1129:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1121:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1155:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1147:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1177:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1169:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1189:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1227:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1212:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:126:5"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1256:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1256:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:8:5"
									},
									"scope": 1120,
									"src": "1085:179:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "1270:994:5",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2278:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2318:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2310:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2344:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2336:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2377:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2358:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1107,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2358:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1108,
													"nodeType": "ArrayTypeName",
													"src": "2358:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2409:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2390:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2390:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1111,
													"nodeType": "ArrayTypeName",
													"src": "2390:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2440:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2425:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2425:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:150:5"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2469:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:8:5"
									},
									"scope": 1120,
									"src": "2269:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1121,
							"src": "201:2278:5",
							"usedErrors": []
						}
					],
					"src": "103:2376:5"
				},
				"id": 5
			},
			"IERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155_Dropsite": [
							1140
						],
						"IERC165_Dropsite": [
							1144
						]
					},
					"id": 1141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1123,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1141,
							"sourceUnit": 1145,
							"src": "171:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1125,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1144,
										"src": "403:16:6"
									},
									"id": 1126,
									"nodeType": "InheritanceSpecifier",
									"src": "403:16:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1124,
								"nodeType": "StructuredDocumentation",
								"src": "205:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1140,
							"linearizedBaseContracts": [
								1140,
								1144
							],
							"name": "IERC1155_Dropsite",
							"nameLocation": "381:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "426:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1139,
									"name": "TransferSingle",
									"nameLocation": "558:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "589:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "573:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "615:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "599:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "637:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "621:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "641:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "661:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "653:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:95:6"
									},
									"src": "552:116:6"
								}
							],
							"scope": 1141,
							"src": "371:2545:6",
							"usedErrors": []
						}
					],
					"src": "95:2821:6"
				},
				"id": 6
			},
			"IERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC165_Dropsite.sol",
					"exportedSymbols": {
						"IERC165_Dropsite": [
							1144
						]
					},
					"id": 1145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1142,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1143,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": true,
							"id": 1144,
							"linearizedBaseContracts": [
								1144
							],
							"name": "IERC165_Dropsite",
							"nameLocation": "415:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1145,
							"src": "405:458:7",
							"usedErrors": []
						}
					],
					"src": "100:763:7"
				},
				"id": 7
			}
		}
	}
}