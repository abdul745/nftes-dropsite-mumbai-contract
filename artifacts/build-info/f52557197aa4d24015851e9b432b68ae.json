{
	"id": "f52557197aa4d24015851e9b432b68ae",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"OnyxNft1155Royalties.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract OnyxNftErc20 {\n\n    event RoyaltiesTransfer(uint, uint, uint);\n    struct royaltyInfo {\n        address payable recipient;\n        uint24 amount;\n    }\n    mapping (address => uint) deposits;\n    mapping(uint256 => royaltyInfo) _royalties;\n    mapping (address=>bool) OnyxNftWhiteList;\n    function _setTokenRoyalty(uint256 tokenId,address payable recipient,uint256 value) internal {\n        require(value <= 50, \"Error! Too high Royalties\");\n        _royalties[tokenId] = royaltyInfo(recipient, uint24(value));\n    }\n\n    function _royaltyAndOnyxNftFee (uint _NftPrice, uint percentage, address payable minterAddress, address payable NftSeller) internal  {\n        uint _TotalNftPrice = msg.value;   \n        //Check Here\n        // require(msg.value >= NftPrice[NftId], \"Error! Insufficent Balance\");\n        uint _OnyxNftFee = _deductOnyxNftFee(_NftPrice);\n        uint _minterFee = _SendMinterFee(_NftPrice , percentage,  minterAddress);\n        _TotalNftPrice = _TotalNftPrice - _OnyxNftFee - _minterFee;    //Remaining Price After Deduction  \n        _transferAmountToSeller( _TotalNftPrice, NftSeller);            // Send Amount to NFT Seller after Tax deduction\n        emit RoyaltiesTransfer(_OnyxNftFee,_minterFee, _TotalNftPrice);\n    }\n\n    function _deductOnyxNftFee(uint Price) public pure returns(uint) {\n        require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\");\n        return Price*25/1000;\n    }\n    \n    function _transferAmountToSeller(uint amount, address payable seller) internal {\n        seller.transfer(amount);\n    }\n\n    function _SendMinterFee(uint _NftPrice, uint Percentage, address payable recepient) internal returns(uint) {\n        uint AmountToSend = _NftPrice*Percentage/100;           //Calculate Minter percentage and Send to his Address from Struct\n        recepient.transfer(AmountToSend);                       // Send this Amount To Transfer Address from Contract balacne\n        return AmountToSend;\n    }\n    function depositBidAmmount(address payee,uint amountToDeposit) internal {\n        require(msg.value == amountToDeposit, \"Error while Deposit\");\n        deposits[payee] += amountToDeposit;\n    }\n    function deductAmount(address from, uint amount) internal {\n        require(deposits[from]>0 && amount <= deposits[from] , \"Error! Low Balance\");\n        deposits[from] -= amount;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"OnyxNft1155Royalties.sol": {
				"OnyxNftErc20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "RoyaltiesTransfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "Price",
									"type": "uint256"
								}
							],
							"name": "_deductOnyxNftFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OnyxNft1155Royalties.sol\":56:2439  contract OnyxNftErc20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OnyxNft1155Royalties.sol\":56:2439  contract OnyxNftErc20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd206b944\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"OnyxNft1155Royalties.sol\":1377:1381  uint */\n      0x00\n        /* \"OnyxNft1155Royalties.sol\":1424:1429  Price */\n      dup2\n        /* \"OnyxNft1155Royalties.sol\":1415:1420  10000 */\n      0x2710\n        /* \"OnyxNft1155Royalties.sol\":1408:1413  10000 */\n      dup1\n        /* \"OnyxNft1155Royalties.sol\":1402:1407  Price */\n      dup5\n        /* \"OnyxNft1155Royalties.sol\":1402:1413  Price/10000 */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"OnyxNft1155Royalties.sol\":1401:1420  (Price/10000)*10000 */\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"OnyxNft1155Royalties.sol\":1401:1429  (Price/10000)*10000 == Price */\n      eq\n        /* \"OnyxNft1155Royalties.sol\":1393:1478  require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"OnyxNft1155Royalties.sol\":1504:1508  1000 */\n      0x03e8\n        /* \"OnyxNft1155Royalties.sol\":1501:1503  25 */\n      0x19\n        /* \"OnyxNft1155Royalties.sol\":1495:1500  Price */\n      dup4\n        /* \"OnyxNft1155Royalties.sol\":1495:1503  Price*25 */\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n        /* \"OnyxNft1155Royalties.sol\":1495:1508  Price*25/1000 */\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n        /* \"OnyxNft1155Royalties.sol\":1488:1508  return Price*25/1000 */\n      swap1\n      pop\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_21:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_23\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":228:347   */\n    tag_26:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_29\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:853   */\n    tag_30:\n        /* \"#utility.yul\":629:632   */\n      0x00\n        /* \"#utility.yul\":650:717   */\n      tag_32\n        /* \"#utility.yul\":714:716   */\n      0x2c\n        /* \"#utility.yul\":709:712   */\n      dup4\n        /* \"#utility.yul\":650:717   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":643:717   */\n      swap2\n      pop\n        /* \"#utility.yul\":726:819   */\n      tag_34\n        /* \"#utility.yul\":815:818   */\n      dup3\n        /* \"#utility.yul\":726:819   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":844:846   */\n      0x40\n        /* \"#utility.yul\":839:842   */\n      dup3\n        /* \"#utility.yul\":835:847   */\n      add\n        /* \"#utility.yul\":828:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":487:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:977   */\n    tag_36:\n        /* \"#utility.yul\":946:970   */\n      tag_38\n        /* \"#utility.yul\":964:969   */\n      dup2\n        /* \"#utility.yul\":946:970   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":941:944   */\n      dup3\n        /* \"#utility.yul\":934:971   */\n      mstore\n        /* \"#utility.yul\":859:977   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1402   */\n    tag_17:\n        /* \"#utility.yul\":1149:1153   */\n      0x00\n        /* \"#utility.yul\":1187:1189   */\n      0x20\n        /* \"#utility.yul\":1176:1185   */\n      dup3\n        /* \"#utility.yul\":1172:1190   */\n      add\n        /* \"#utility.yul\":1164:1190   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1245   */\n      dup2\n        /* \"#utility.yul\":1230:1234   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      sub\n        /* \"#utility.yul\":1222:1223   */\n      0x00\n        /* \"#utility.yul\":1211:1220   */\n      dup4\n        /* \"#utility.yul\":1207:1224   */\n      add\n        /* \"#utility.yul\":1200:1247   */\n      mstore\n        /* \"#utility.yul\":1264:1395   */\n      tag_41\n        /* \"#utility.yul\":1390:1394   */\n      dup2\n        /* \"#utility.yul\":1264:1395   */\n      tag_30\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1256:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1630   */\n    tag_9:\n        /* \"#utility.yul\":1501:1505   */\n      0x00\n        /* \"#utility.yul\":1539:1541   */\n      0x20\n        /* \"#utility.yul\":1528:1537   */\n      dup3\n        /* \"#utility.yul\":1524:1542   */\n      add\n        /* \"#utility.yul\":1516:1542   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1623   */\n      tag_43\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1605:1622   */\n      add\n        /* \"#utility.yul\":1596:1602   */\n      dup5\n        /* \"#utility.yul\":1552:1623   */\n      tag_36\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1408:1630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1717:1886   */\n    tag_33:\n        /* \"#utility.yul\":1801:1812   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1830:1833   */\n      dup3\n        /* \"#utility.yul\":1823:1842   */\n      mstore\n        /* \"#utility.yul\":1875:1879   */\n      0x20\n        /* \"#utility.yul\":1870:1873   */\n      dup3\n        /* \"#utility.yul\":1866:1880   */\n      add\n        /* \"#utility.yul\":1851:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1717:1886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2077   */\n    tag_12:\n        /* \"#utility.yul\":1932:1933   */\n      0x00\n        /* \"#utility.yul\":1949:1969   */\n      tag_48\n        /* \"#utility.yul\":1967:1968   */\n      dup3\n        /* \"#utility.yul\":1949:1969   */\n      tag_39\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1944:1969   */\n      swap2\n      pop\n        /* \"#utility.yul\":1983:2003   */\n      tag_49\n        /* \"#utility.yul\":2001:2002   */\n      dup4\n        /* \"#utility.yul\":1983:2003   */\n      tag_39\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1978:2003   */\n      swap3\n      pop\n        /* \"#utility.yul\":2022:2023   */\n      dup3\n        /* \"#utility.yul\":2012:2047   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":2027:2045   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2012:2047   */\n    tag_50:\n        /* \"#utility.yul\":2069:2070   */\n      dup3\n        /* \"#utility.yul\":2066:2067   */\n      dup3\n        /* \"#utility.yul\":2062:2071   */\n      div\n        /* \"#utility.yul\":2057:2071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:2077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2083:2431   */\n    tag_14:\n        /* \"#utility.yul\":2123:2130   */\n      0x00\n        /* \"#utility.yul\":2146:2166   */\n      tag_54\n        /* \"#utility.yul\":2164:2165   */\n      dup3\n        /* \"#utility.yul\":2146:2166   */\n      tag_39\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2141:2166   */\n      swap2\n      pop\n        /* \"#utility.yul\":2180:2200   */\n      tag_55\n        /* \"#utility.yul\":2198:2199   */\n      dup4\n        /* \"#utility.yul\":2180:2200   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2175:2200   */\n      swap3\n      pop\n        /* \"#utility.yul\":2368:2369   */\n      dup2\n        /* \"#utility.yul\":2300:2366   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2296:2370   */\n      div\n        /* \"#utility.yul\":2293:2294   */\n      dup4\n        /* \"#utility.yul\":2290:2371   */\n      gt\n        /* \"#utility.yul\":2285:2286   */\n      dup3\n        /* \"#utility.yul\":2278:2287   */\n      iszero\n        /* \"#utility.yul\":2271:2288   */\n      iszero\n        /* \"#utility.yul\":2267:2372   */\n      and\n        /* \"#utility.yul\":2264:2395   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2375:2393   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2264:2395   */\n    tag_56:\n        /* \"#utility.yul\":2423:2424   */\n      dup3\n        /* \"#utility.yul\":2420:2421   */\n      dup3\n        /* \"#utility.yul\":2416:2425   */\n      mul\n        /* \"#utility.yul\":2405:2425   */\n      swap1\n      pop\n        /* \"#utility.yul\":2083:2431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2514   */\n    tag_39:\n        /* \"#utility.yul\":2474:2481   */\n      0x00\n        /* \"#utility.yul\":2503:2508   */\n      dup2\n        /* \"#utility.yul\":2492:2508   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:2700   */\n    tag_58:\n        /* \"#utility.yul\":2568:2645   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2565:2566   */\n      0x00\n        /* \"#utility.yul\":2558:2646   */\n      mstore\n        /* \"#utility.yul\":2665:2669   */\n      0x11\n        /* \"#utility.yul\":2662:2663   */\n      0x04\n        /* \"#utility.yul\":2655:2670   */\n      mstore\n        /* \"#utility.yul\":2689:2693   */\n      0x24\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2679:2694   */\n      revert\n        /* \"#utility.yul\":2706:2886   */\n    tag_52:\n        /* \"#utility.yul\":2754:2831   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2751:2752   */\n      0x00\n        /* \"#utility.yul\":2744:2832   */\n      mstore\n        /* \"#utility.yul\":2851:2855   */\n      0x12\n        /* \"#utility.yul\":2848:2849   */\n      0x04\n        /* \"#utility.yul\":2841:2856   */\n      mstore\n        /* \"#utility.yul\":2875:2879   */\n      0x24\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2865:2880   */\n      revert\n        /* \"#utility.yul\":3015:3132   */\n    tag_28:\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3121:3122   */\n      dup1\n        /* \"#utility.yul\":3114:3126   */\n      revert\n        /* \"#utility.yul\":3138:3369   */\n    tag_35:\n        /* \"#utility.yul\":3278:3312   */\n      0x4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72\n        /* \"#utility.yul\":3274:3275   */\n      0x00\n        /* \"#utility.yul\":3266:3272   */\n      dup3\n        /* \"#utility.yul\":3262:3276   */\n      add\n        /* \"#utility.yul\":3255:3313   */\n      mstore\n        /* \"#utility.yul\":3347:3361   */\n      0x20696e20446563696d616c730000000000000000000000000000000000000000\n        /* \"#utility.yul\":3342:3344   */\n      0x20\n        /* \"#utility.yul\":3334:3340   */\n      dup3\n        /* \"#utility.yul\":3330:3345   */\n      add\n        /* \"#utility.yul\":3323:3362   */\n      mstore\n        /* \"#utility.yul\":3138:3369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3497   */\n    tag_24:\n        /* \"#utility.yul\":3448:3472   */\n      tag_67\n        /* \"#utility.yul\":3466:3471   */\n      dup2\n        /* \"#utility.yul\":3448:3472   */\n      tag_39\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":3441:3446   */\n      dup2\n        /* \"#utility.yul\":3438:3473   */\n      eq\n        /* \"#utility.yul\":3428:3491   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":3487:3488   */\n      0x00\n        /* \"#utility.yul\":3484:3485   */\n      dup1\n        /* \"#utility.yul\":3477:3489   */\n      revert\n        /* \"#utility.yul\":3428:3491   */\n    tag_68:\n        /* \"#utility.yul\":3375:3497   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610331806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d206b94414610030575b600080fd5b61004a600480360381019061004591906100f2565b610060565b6040516100579190610171565b60405180910390f35b6000816127108084610072919061019d565b61007c91906101ce565b146100bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b390610151565b60405180910390fd5b6103e86019836100cc91906101ce565b6100d6919061019d565b9050919050565b6000813590506100ec816102e4565b92915050565b60006020828403121561010857610107610290565b5b6000610116848285016100dd565b91505092915050565b600061012c602c8361018c565b915061013782610295565b604082019050919050565b61014b81610228565b82525050565b6000602082019050818103600083015261016a8161011f565b9050919050565b60006020820190506101866000830184610142565b92915050565b600082825260208201905092915050565b60006101a882610228565b91506101b383610228565b9250826101c3576101c2610261565b5b828204905092915050565b60006101d982610228565b91506101e483610228565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561021d5761021c610232565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b6102ed81610228565b81146102f857600080fd5b5056fea264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD206B944 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST EQ PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP5 DUP3 DUP6 ADD PUSH2 0xDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C PUSH1 0x2C DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x137 DUP3 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x261 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x232 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x228 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xF13FB03028E7986E REVERT DUP14 OR LOG3 LOG1 0xDA 0xD1 0x24 GT PUSH13 0xDF614CD8F2995BF9DA606B904F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:2383:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_deductOnyxNftFee_132": {
									"entryPoint": 96,
									"id": 132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3500:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "650:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "815:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																	"nodeType": "YulIdentifier",
																	"src": "726:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "828:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "839:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "828:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "621:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "629:3:1",
														"type": ""
													}
												],
												"src": "487:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "941:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "964:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "946:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "934:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "912:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "919:3:1",
														"type": ""
													}
												],
												"src": "859:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1230:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1236:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1390:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1264:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1149:4:1",
														"type": ""
													}
												],
												"src": "983:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1528:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1524:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1516:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1552:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1478:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1490:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1501:4:1",
														"type": ""
													}
												],
												"src": "1408:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1669:6:1",
														"type": ""
													}
												],
												"src": "1636:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1813:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1830:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1851:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1851:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1785:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1790:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1801:11:1",
														"type": ""
													}
												],
												"src": "1717:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1944:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1949:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1944:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2001:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1983:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1978:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2025:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2022:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:9:1"
															},
															"nodeType": "YulIf",
															"src": "2012:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2066:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2057:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1923:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1926:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1932:1:1",
														"type": ""
													}
												],
												"src": "1892:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2131:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2141:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2164:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2146:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2141:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2175:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2180:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2175:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2375:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2285:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2278:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2271:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2293:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2300:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2368:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2296:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2296:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2290:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:105:1"
															},
															"nodeType": "YulIf",
															"src": "2264:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2405:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2420:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2423:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2405:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2114:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2117:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2123:7:1",
														"type": ""
													}
												],
												"src": "2083:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2482:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2492:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2503:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2492:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2464:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2474:7:1",
														"type": ""
													}
												],
												"src": "2437:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2689:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2520:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2754:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2865:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2706:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2892:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3104:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3121:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3124:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3015:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3244:125:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3274:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3262:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3262:14:1"
																	},
																	{
																		"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3278:34:1",
																		"type": "",
																		"value": "Error! Onyx NFT fee Too small or"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3255:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3334:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3330:15:1"
																	},
																	{
																		"hexValue": "20696e20446563696d616c73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3347:14:1",
																		"type": "",
																		"value": " in Decimals"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3323:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3236:6:1",
														"type": ""
													}
												],
												"src": "3138:231:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3418:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3475:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3484:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3487:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3477:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3477:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3477:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3441:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3466:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3448:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3448:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:43:1"
															},
															"nodeType": "YulIf",
															"src": "3428:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3411:5:1",
														"type": ""
													}
												],
												"src": "3375:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error! Onyx NFT fee Too small or\")\n\n        mstore(add(memPtr, 32), \" in Decimals\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d206b94414610030575b600080fd5b61004a600480360381019061004591906100f2565b610060565b6040516100579190610171565b60405180910390f35b6000816127108084610072919061019d565b61007c91906101ce565b146100bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b390610151565b60405180910390fd5b6103e86019836100cc91906101ce565b6100d6919061019d565b9050919050565b6000813590506100ec816102e4565b92915050565b60006020828403121561010857610107610290565b5b6000610116848285016100dd565b91505092915050565b600061012c602c8361018c565b915061013782610295565b604082019050919050565b61014b81610228565b82525050565b6000602082019050818103600083015261016a8161011f565b9050919050565b60006020820190506101866000830184610142565b92915050565b600082825260208201905092915050565b60006101a882610228565b91506101b383610228565b9250826101c3576101c2610261565b5b828204905092915050565b60006101d982610228565b91506101e483610228565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561021d5761021c610232565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b6102ed81610228565b81146102f857600080fd5b5056fea264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD206B944 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST EQ PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP5 DUP3 DUP6 ADD PUSH2 0xDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C PUSH1 0x2C DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x137 DUP3 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x261 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x232 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x228 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xF13FB03028E7986E REVERT DUP14 OR LOG3 LOG1 0xDA 0xD1 0x24 GT PUSH13 0xDF614CD8F2995BF9DA606B904F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:2383:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1377:4;1424:5;1415;1408;1402;:11;;;;:::i;:::-;1401:19;;;;:::i;:::-;:28;1393:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1504:4;1501:2;1495:5;:8;;;;:::i;:::-;:13;;;;:::i;:::-;1488:20;;1318:197;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:366::-;629:3;650:67;714:2;709:3;650:67;:::i;:::-;643:74;;726:93;815:3;726:93;:::i;:::-;844:2;839:3;835:12;828:19;;487:366;;;:::o;859:118::-;946:24;964:5;946:24;:::i;:::-;941:3;934:37;859:118;;:::o;983:419::-;1149:4;1187:2;1176:9;1172:18;1164:26;;1236:9;1230:4;1226:20;1222:1;1211:9;1207:17;1200:47;1264:131;1390:4;1264:131;:::i;:::-;1256:139;;983:419;;;:::o;1408:222::-;1501:4;1539:2;1528:9;1524:18;1516:26;;1552:71;1620:1;1609:9;1605:17;1596:6;1552:71;:::i;:::-;1408:222;;;;:::o;1717:169::-;1801:11;1835:6;1830:3;1823:19;1875:4;1870:3;1866:14;1851:29;;1717:169;;;;:::o;1892:185::-;1932:1;1949:20;1967:1;1949:20;:::i;:::-;1944:25;;1983:20;2001:1;1983:20;:::i;:::-;1978:25;;2022:1;2012:35;;2027:18;;:::i;:::-;2012:35;2069:1;2066;2062:9;2057:14;;1892:185;;;;:::o;2083:348::-;2123:7;2146:20;2164:1;2146:20;:::i;:::-;2141:25;;2180:20;2198:1;2180:20;:::i;:::-;2175:25;;2368:1;2300:66;2296:74;2293:1;2290:81;2285:1;2278:9;2271:17;2267:105;2264:131;;;2375:18;;:::i;:::-;2264:131;2423:1;2420;2416:9;2405:20;;2083:348;;;;:::o;2437:77::-;2474:7;2503:5;2492:16;;2437:77;;;:::o;2520:180::-;2568:77;2565:1;2558:88;2665:4;2662:1;2655:15;2689:4;2686:1;2679:15;2706:180;2754:77;2751:1;2744:88;2851:4;2848:1;2841:15;2875:4;2872:1;2865:15;3015:117;3124:1;3121;3114:12;3138:231;3278:34;3274:1;3266:6;3262:14;3255:58;3347:14;3342:2;3334:6;3330:15;3323:39;3138:231;:::o;3375:122::-;3448:24;3466:5;3448:24;:::i;:::-;3441:5;3438:35;3428:63;;3487:1;3484;3477:12;3428:63;3375:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163400",
								"executionCost": "208",
								"totalCost": "163608"
							},
							"external": {
								"_deductOnyxNftFee(uint256)": "infinite"
							},
							"internal": {
								"_SendMinterFee(uint256,uint256,address payable)": "infinite",
								"_royaltyAndOnyxNftFee(uint256,uint256,address payable,address payable)": "infinite",
								"_setTokenRoyalty(uint256,address payable,uint256)": "infinite",
								"_transferAmountToSeller(uint256,address payable)": "infinite",
								"deductAmount(address,uint256)": "infinite",
								"depositBidAmmount(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "D206B944"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1429,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 643,
											"end": 717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 643,
											"end": 717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 828,
											"end": 847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 964,
											"end": 969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2370,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2371,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2520,
											"end": 2700,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2520,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2669,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2693,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2886,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2706,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2831,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "20696E20446563696D616C730000000000000000000000000000000000000000"
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3441,
											"end": 3446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3473,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_deductOnyxNftFee(uint256)": "d206b944"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"_deductOnyxNftFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OnyxNft1155Royalties.sol\":\"OnyxNftErc20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"OnyxNft1155Royalties.sol\":{\"keccak256\":\"0xeec794cb546dc7546deb5b39e4b9bf9df69d1f755cc3debf80a95762d5ec1d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9c6c906532cf1a6ef029b41d98613f12209ae0a746cf5b26d5cbd2c59546cb6\",\"dweb:/ipfs/QmSrgHGk811mkkvYUMoH1P7Pu9BRVUsiRR8K8KsRFE79oh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"OnyxNft1155Royalties.sol": {
				"ast": {
					"absolutePath": "OnyxNft1155Royalties.sol",
					"exportedSymbols": {
						"OnyxNftErc20": [
							226
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "OnyxNftErc20",
							"nameLocation": "65:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 9,
									"name": "RoyaltiesTransfer",
									"nameLocation": "91:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "109:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "109:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "121:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:0"
									},
									"src": "85:42:0"
								},
								{
									"canonicalName": "OnyxNftErc20.royaltyInfo",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "177:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "161:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "161:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "203:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "196:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 12,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "196:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "royaltyInfo",
									"nameLocation": "139:11:0",
									"nodeType": "StructDefinition",
									"scope": 226,
									"src": "132:84:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "247:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 226,
									"src": "221:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "230:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "221:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 16,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "241:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_royalties",
									"nameLocation": "293:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 226,
									"src": "261:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$14_storage_$",
										"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 19,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "261:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$14_storage_$",
											"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo)"
										},
										"valueType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "royaltyInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 14,
												"src": "280:11:0"
											},
											"referencedDeclaration": 14,
											"src": "280:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_royaltyInfo_$14_storage_ptr",
												"typeString": "struct OnyxNftErc20.royaltyInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "OnyxNftWhiteList",
									"nameLocation": "333:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 226,
									"src": "309:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 26,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "318:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "309:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 25,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "327:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "447:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 37,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "465:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3530",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "474:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "465:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722120546f6f206869676820526f79616c74696573",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c4e1455dcab7d55570ed81a90b7c4272ff551b906a619034b3a60d43964eb4",
																"typeString": "literal_string \"Error! Too high Royalties\""
															},
															"value": "Error! Too high Royalties"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c4e1455dcab7d55570ed81a90b7c4272ff551b906a619034b3a60d43964eb4",
																"typeString": "literal_string \"Error! Too high Royalties\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "457:49:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 43,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "516:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$14_storage_$",
																"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo storage ref)"
															}
														},
														"id": 45,
														"indexExpression": {
															"id": 44,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "516:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_royaltyInfo_$14_storage",
															"typeString": "struct OnyxNftErc20.royaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 47,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "550:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"id": 50,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "568:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "561:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 48,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "561:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "561:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 46,
															"name": "royaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "538:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_royaltyInfo_$14_storage_ptr_$",
																"typeString": "type(struct OnyxNftErc20.royaltyInfo storage pointer)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "538:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_royaltyInfo_$14_memory_ptr",
															"typeString": "struct OnyxNftErc20.royaltyInfo memory"
														}
													},
													"src": "516:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_royaltyInfo_$14_storage",
														"typeString": "struct OnyxNftErc20.royaltyInfo storage ref"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "516:59:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenRoyalty",
									"nameLocation": "364:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "413:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "397:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "431:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "423:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:57:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 226,
									"src": "355:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "721:591:0",
										"statements": [
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "_TotalNftPrice",
														"nameLocation": "736:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "731:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 67,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "731:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"expression": {
														"id": 69,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "753:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "753:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:31:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "_OnyxNftFee",
														"nameLocation": "881:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "876:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 72,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "876:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"arguments": [
														{
															"id": 75,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "913:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 74,
														"name": "_deductOnyxNftFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "895:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "876:47:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"mutability": "mutable",
														"name": "_minterFee",
														"nameLocation": "938:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "933:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 78,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "933:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"arguments": [
														{
															"id": 81,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "966:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 82,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "978:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 83,
															"name": "minterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "991:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 80,
														"name": "_SendMinterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,address payable) returns (uint256)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "933:72:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 86,
														"name": "_TotalNftPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1015:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 87,
																"name": "_TotalNftPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1032:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 88,
																"name": "_OnyxNftFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1049:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1032:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 90,
															"name": "_minterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1063:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1032:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1015:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"name": "_TotalNftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1147:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 96,
															"name": "NftSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1163:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 94,
														"name": "_transferAmountToSeller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1122:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
															"typeString": "function (uint256,address payable)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1122:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 100,
															"name": "_OnyxNftFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1266:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 101,
															"name": "_minterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1278:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 102,
															"name": "_TotalNftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1290:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 99,
														"name": "RoyaltiesTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1248:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "EmitStatement",
												"src": "1243:62:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_royaltyAndOnyxNftFee",
									"nameLocation": "597:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_NftPrice",
												"nameLocation": "625:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "641:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "636:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "636:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "minterAddress",
												"nameLocation": "669:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "653:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "NftSeller",
												"nameLocation": "700:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "684:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:91:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:0"
									},
									"scope": 226,
									"src": "588:724:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1383:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 114,
																				"name": "Price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 108,
																				"src": "1402:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1408:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "1402:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1401:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1415:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "1401:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 120,
																"name": "Price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "1424:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1401:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7220696e20446563696d616c73",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																"typeString": "literal_string \"Error! Onyx NFT fee Too small or in Decimals\""
															},
															"value": "Error! Onyx NFT fee Too small or in Decimals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																"typeString": "literal_string \"Error! Onyx NFT fee Too small or in Decimals\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1393:85:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 125,
															"name": "Price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1495:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3235",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1501:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25_by_1",
																"typeString": "int_const 25"
															},
															"value": "25"
														},
														"src": "1495:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1504:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1495:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 112,
												"id": 130,
												"nodeType": "Return",
												"src": "1488:20:0"
											}
										]
									},
									"functionSelector": "d206b944",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deductOnyxNftFee",
									"nameLocation": "1327:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "Price",
												"nameLocation": "1350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:12:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:0"
									},
									"scope": 226,
									"src": "1318:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1604:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1630:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 139,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1614:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1614:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1614:23:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountToSeller",
									"nameLocation": "1534:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1563:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1558:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1571:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:37:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:0"
									},
									"scope": 226,
									"src": "1525:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1757:292:0",
										"statements": [
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "AmountToSend",
														"nameLocation": "1772:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "1767:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 157,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 159,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1787:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 160,
															"name": "Percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1797:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1787:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1808:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1787:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1767:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "AmountToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1916:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 165,
															"name": "recepient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1897:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1897:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1897:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1897:32:0"
											},
											{
												"expression": {
													"id": 171,
													"name": "AmountToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "2030:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 172,
												"nodeType": "Return",
												"src": "2023:19:0"
											}
										]
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_SendMinterFee",
									"nameLocation": "1659:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "_NftPrice",
												"nameLocation": "1679:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1674:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "Percentage",
												"nameLocation": "1695:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1690:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "recepient",
												"nameLocation": "1723:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1707:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:60:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1751:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1751:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:6:0"
									},
									"scope": 226,
									"src": "1650:399:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2126:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 182,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2144:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2144:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 184,
																"name": "amountToDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "2157:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2144:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f72207768696c65204465706f736974",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d13faf13e2c700f1b4d53a69c2423df55726b15356335aef038dfdfb3ebded2",
																"typeString": "literal_string \"Error while Deposit\""
															},
															"value": "Error while Deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d13faf13e2c700f1b4d53a69c2423df55726b15356335aef038dfdfb3ebded2",
																"typeString": "literal_string \"Error while Deposit\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2136:60:0"
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 189,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2206:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 191,
														"indexExpression": {
															"id": 190,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2215:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2206:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 192,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "2225:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2206:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2206:34:0"
											}
										]
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositBidAmmount",
									"nameLocation": "2063:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "2089:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2081:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "2100:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2095:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:36:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:0"
									},
									"scope": 226,
									"src": "2054:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2310:127:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 204,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "2328:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 206,
																	"indexExpression": {
																		"id": 205,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2337:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2328:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2328:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 209,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "2348:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 210,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "2358:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 212,
																	"indexExpression": {
																		"id": 211,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2367:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2358:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2348:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2328:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204c6f772042616c616e6365",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2375:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f12ccd525b8c4686a43d3a8e40d049e4990f4cc4a4adc0acb90e33c21636c237",
																"typeString": "literal_string \"Error! Low Balance\""
															},
															"value": "Error! Low Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f12ccd525b8c4686a43d3a8e40d049e4990f4cc4a4adc0acb90e33c21636c237",
																"typeString": "literal_string \"Error! Low Balance\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2320:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2320:76:0"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 218,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2406:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 220,
														"indexExpression": {
															"id": 219,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2415:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2406:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 221,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2424:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2406:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2406:24:0"
											}
										]
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductAmount",
									"nameLocation": "2261:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2293:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2288:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2288:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:27:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:0"
									},
									"scope": 226,
									"src": "2252:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 227,
							"src": "56:2383:0",
							"usedErrors": []
						}
					],
					"src": "32:2407:0"
				},
				"id": 0
			}
		}
	}
}